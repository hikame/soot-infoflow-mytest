public abstract class android.os.INetworkManagementService$Stub extends android.os.Binder implements android.os.INetworkManagementService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_registerObserver;
    static final int TRANSACTION_unregisterObserver;
    static final int TRANSACTION_listInterfaces;
    static final int TRANSACTION_getInterfaceConfig;
    static final int TRANSACTION_setInterfaceConfig;
    static final int TRANSACTION_clearInterfaceAddresses;
    static final int TRANSACTION_setInterfaceDown;
    static final int TRANSACTION_setInterfaceUp;
    static final int TRANSACTION_setInterfaceIpv6PrivacyExtensions;
    static final int TRANSACTION_disableIpv6;
    static final int TRANSACTION_enableIpv6;
    static final int TRANSACTION_setInterfaceIpv6NdOffload;
    static final int TRANSACTION_getRoutes;
    static final int TRANSACTION_addRoute;
    static final int TRANSACTION_removeRoute;
    static final int TRANSACTION_setMtu;
    static final int TRANSACTION_shutdown;
    static final int TRANSACTION_getIpForwardingEnabled;
    static final int TRANSACTION_setIpForwardingEnabled;
    static final int TRANSACTION_startTethering;
    static final int TRANSACTION_stopTethering;
    static final int TRANSACTION_isTetheringStarted;
    static final int TRANSACTION_tetherInterface;
    static final int TRANSACTION_untetherInterface;
    static final int TRANSACTION_listTetheredInterfaces;
    static final int TRANSACTION_setDnsForwarders;
    static final int TRANSACTION_getDnsForwarders;
    static final int TRANSACTION_startInterfaceForwarding;
    static final int TRANSACTION_stopInterfaceForwarding;
    static final int TRANSACTION_enableNat;
    static final int TRANSACTION_disableNat;
    static final int TRANSACTION_listTtys;
    static final int TRANSACTION_attachPppd;
    static final int TRANSACTION_detachPppd;
    static final int TRANSACTION_wifiFirmwareReload;
    static final int TRANSACTION_startAccessPoint;
    static final int TRANSACTION_stopAccessPoint;
    static final int TRANSACTION_setAccessPoint;
    static final int TRANSACTION_getNetworkStatsSummaryDev;
    static final int TRANSACTION_getNetworkStatsSummaryXt;
    static final int TRANSACTION_getNetworkStatsDetail;
    static final int TRANSACTION_getNetworkStatsUidDetail;
    static final int TRANSACTION_getNetworkStatsTethering;
    static final int TRANSACTION_setInterfaceQuota;
    static final int TRANSACTION_removeInterfaceQuota;
    static final int TRANSACTION_setInterfaceAlert;
    static final int TRANSACTION_removeInterfaceAlert;
    static final int TRANSACTION_setGlobalAlert;
    static final int TRANSACTION_setUidNetworkRules;
    static final int TRANSACTION_setUidCleartextNetworkPolicy;
    static final int TRANSACTION_isBandwidthControlEnabled;
    static final int TRANSACTION_addIdleTimer;
    static final int TRANSACTION_removeIdleTimer;
    static final int TRANSACTION_setDnsServersForNetwork;
    static final int TRANSACTION_flushNetworkDnsCache;
    static final int TRANSACTION_setFirewallEnabled;
    static final int TRANSACTION_isFirewallEnabled;
    static final int TRANSACTION_setFirewallInterfaceRule;
    static final int TRANSACTION_setFirewallEgressSourceRule;
    static final int TRANSACTION_setFirewallEgressDestRule;
    static final int TRANSACTION_setFirewallUidRule;
    static final int TRANSACTION_setFirewallUidRules;
    static final int TRANSACTION_setFirewallChainEnabled;
    static final int TRANSACTION_addVpnUidRanges;
    static final int TRANSACTION_removeVpnUidRanges;
    static final int TRANSACTION_startClatd;
    static final int TRANSACTION_stopClatd;
    static final int TRANSACTION_isClatdStarted;
    static final int TRANSACTION_registerNetworkActivityListener;
    static final int TRANSACTION_unregisterNetworkActivityListener;
    static final int TRANSACTION_isNetworkActive;
    static final int TRANSACTION_createPhysicalNetwork;
    static final int TRANSACTION_createVirtualNetwork;
    static final int TRANSACTION_removeNetwork;
    static final int TRANSACTION_addInterfaceToNetwork;
    static final int TRANSACTION_removeInterfaceFromNetwork;
    static final int TRANSACTION_addLegacyRouteForNetId;
    static final int TRANSACTION_setDefaultNetId;
    static final int TRANSACTION_clearDefaultNetId;
    static final int TRANSACTION_setNetworkPermission;
    static final int TRANSACTION_setPermission;
    static final int TRANSACTION_clearPermission;
    static final int TRANSACTION_allowProtect;
    static final int TRANSACTION_denyProtect;
    static final int TRANSACTION_addInterfaceToLocalNetwork;
    static final int TRANSACTION_removeInterfaceFromLocalNetwork;

    public void <init>()
    {
        android.os.INetworkManagementService$Stub this;

        this := @this: android.os.INetworkManagementService$Stub;

        specialinvoke this.<android.os.Binder: void <init>()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(this, "android.os.INetworkManagementService");

        return;
    }

    public static android.os.INetworkManagementService asInterface(android.os.IBinder)
    {
        android.os.IBinder obj;
        android.os.IInterface iin;
        android.os.INetworkManagementService$Stub$Proxy $r0;
        boolean $z0;
        android.os.INetworkManagementService $r1;

        obj := @parameter0: android.os.IBinder;

        if obj != null goto label1;

        return null;

     label1:
        iin = interfaceinvoke obj.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.os.INetworkManagementService");

        if iin == null goto label2;

        $z0 = iin instanceof android.os.INetworkManagementService;

        if $z0 == 0 goto label2;

        $r1 = (android.os.INetworkManagementService) iin;

        return $r1;

     label2:
        $r0 = new android.os.INetworkManagementService$Stub$Proxy;

        specialinvoke $r0.<android.os.INetworkManagementService$Stub$Proxy: void <init>(android.os.IBinder)>(obj);

        return $r0;
    }

    public android.os.IBinder asBinder()
    {
        android.os.INetworkManagementService$Stub this;

        this := @this: android.os.INetworkManagementService$Stub;

        return this;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.INetworkManagementService$Stub this;
        int code, flags, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, _arg0#21, _arg0#23, _result#26, _arg0#63, _arg0#73, _arg0#76, _result#77, _result#81, _arg2#82, _arg0#84, _arg0#87, _result#99, _arg0#102, _result#103, _arg2#104, _arg0#105, _arg0#108, _arg0#111, _arg0#113, _arg0#124, _arg0#126, _arg0#131, _result#133, _result#135, _arg0#136, _arg2#138, _arg0#139, _arg0#140, _arg0#145, _arg0#146;
        android.os.Parcel data, reply;
        java.lang.String _arg3, _arg4, _arg0#4, _arg0#6, _arg0#8, _arg0#9, _arg0#10, _arg0#11, _arg0#14, _arg0#15, _arg0#16, _arg0#19, _arg0#25, _arg0#34, _arg0#35, _arg0#40, _result#41, _arg0#42, _result#43, _arg0#44, _result#45, _arg0#46, _result#47, _arg0#49, _result#50, _arg2#51, _arg0#52, _arg0#53, _result#54, _result#56, _arg0#57, _result#59, _arg0#66, _arg0#68, _arg0#69, _arg0#71, _arg0#80, _arg0#83, _arg2#86, _arg0#92, _arg0#95, _arg0#98, _arg0#115, _arg0#116, _arg0#117, _result#125, _arg0#132, _arg0#134, _result#141, _arg0#142, _arg0#147, _arg0#149;
        android.os.Parcelable$Creator $r0, $r2, $r6, $r8, $r9, $r11, $r13, $r15, $r18, $r19;
        java.lang.Object $r1, $r10, $r12, $r14, $r16, $r17, $r22;
        android.os.IBinder $r3, $r4, $r20, $r21;
        java.lang.Object[] $r5, $r7;
        boolean $z0, $z1, _result#13, $z2, _result#18, _arg0#27, $z3, _arg0#30, _arg0#32, $z4, _result#75, _arg0#78, $z5, _arg0#89, _arg0#90, $z6, _result#94, $z7, _result#97, $z8, _arg2#101, $z9, _result#110, _result#118, _arg0#122, $z10, _result#128, $z11, _arg2#130;
        android.net.INetworkManagementEventObserver _arg0#1, _arg0#2;
        java.lang.String[] _arg0#3, _arg0#31, _arg0#36, _result#38, _arg0#39, _arg0#48, _result#85;
        android.net.InterfaceConfiguration _result#5, _result#7;
        android.net.RouteInfo[] _result#20;
        android.net.RouteInfo _result#22, _result#24, _result#137;
        byte $b18, $b19, $b20, $b21, $b22, $b23;
        android.net.Network _arg0#37;
        android.net.wifi.WifiConfiguration _arg0#55, _arg0#58;
        android.net.NetworkStats _arg0#60, _arg0#61, _arg0#62, _result#64, _arg0#65;
        long _result#67, _result#70, _arg0#72;
        int[] _result#106, _arg2#107, _result#143, _arg0#144;
        android.net.UidRange[] _result#112, _result#114;
        android.os.INetworkActivityListener _arg0#120, _arg0#121;
        java.util.ArrayList _result#148;
        android.os.Parcelable[] tmp$950896874;

        this := @this: android.os.INetworkManagementService$Stub;

        code := @parameter0: int;

        data := @parameter1: android.os.Parcel;

        reply := @parameter2: android.os.Parcel;

        flags := @parameter3: int;

        lookupswitch(code)
        {
            case 1: goto label002;
            case 2: goto label003;
            case 3: goto label004;
            case 4: goto label005;
            case 5: goto label008;
            case 6: goto label011;
            case 7: goto label012;
            case 8: goto label013;
            case 9: goto label014;
            case 10: goto label017;
            case 11: goto label018;
            case 12: goto label019;
            case 13: goto label022;
            case 14: goto label023;
            case 15: goto label026;
            case 16: goto label029;
            case 17: goto label030;
            case 18: goto label031;
            case 19: goto label034;
            case 20: goto label037;
            case 21: goto label038;
            case 22: goto label039;
            case 23: goto label042;
            case 24: goto label043;
            case 25: goto label044;
            case 26: goto label045;
            case 27: goto label048;
            case 28: goto label049;
            case 29: goto label050;
            case 30: goto label051;
            case 31: goto label052;
            case 32: goto label053;
            case 33: goto label054;
            case 34: goto label055;
            case 35: goto label056;
            case 36: goto label057;
            case 37: goto label060;
            case 38: goto label061;
            case 39: goto label064;
            case 40: goto label067;
            case 41: goto label070;
            case 42: goto label073;
            case 43: goto label076;
            case 44: goto label079;
            case 45: goto label080;
            case 46: goto label081;
            case 47: goto label082;
            case 48: goto label083;
            case 49: goto label084;
            case 50: goto label087;
            case 51: goto label088;
            case 52: goto label091;
            case 53: goto label092;
            case 54: goto label093;
            case 55: goto label094;
            case 56: goto label095;
            case 57: goto label098;
            case 58: goto label101;
            case 59: goto label104;
            case 60: goto label107;
            case 61: goto label110;
            case 62: goto label111;
            case 63: goto label112;
            case 64: goto label115;
            case 65: goto label116;
            case 66: goto label117;
            case 67: goto label118;
            case 68: goto label119;
            case 69: goto label122;
            case 70: goto label123;
            case 71: goto label124;
            case 72: goto label127;
            case 73: goto label128;
            case 74: goto label133;
            case 75: goto label134;
            case 76: goto label135;
            case 77: goto label136;
            case 78: goto label139;
            case 79: goto label140;
            case 80: goto label141;
            case 81: goto label142;
            case 82: goto label143;
            case 83: goto label144;
            case 84: goto label145;
            case 85: goto label146;
            case 86: goto label147;
            case 1598968902: goto label001;
            default: goto label148;
        };

     label001:
        virtualinvoke reply.<android.os.Parcel: void writeString(java.lang.String)>("android.os.INetworkManagementService");

        return 1;

     label002:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r21 = virtualinvoke data.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        _arg0#1 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r21);

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void registerObserver(android.net.INetworkManagementEventObserver)>(_arg0#1);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label003:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r20 = virtualinvoke data.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        _arg0#2 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r20);

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void unregisterObserver(android.net.INetworkManagementEventObserver)>(_arg0#2);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label004:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#3 = virtualinvoke this.<android.os.INetworkManagementService$Stub: java.lang.String[] listInterfaces()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        virtualinvoke reply.<android.os.Parcel: void writeStringArray(java.lang.String[])>(_arg0#3);

        return 1;

     label005:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#4 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#5 = virtualinvoke this.<android.os.INetworkManagementService$Stub: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>(_arg0#4);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _result#5 == null goto label006;

        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke _result#5.<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>(reply, 1);

        goto label007;

     label006:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(0);

     label007:
        return 1;

     label008:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#6 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        $i15 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i15 goto label009;

        $r19 = <android.net.InterfaceConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r22 = interfaceinvoke $r19.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(data);

        _result#7 = (android.net.InterfaceConfiguration) $r22;

        goto label010;

     label009:
        _result#7 = null;

     label010:
        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>(_arg0#6, _result#7);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label011:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#8 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void clearInterfaceAddresses(java.lang.String)>(_arg0#8);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label012:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#9 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setInterfaceDown(java.lang.String)>(_arg0#9);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label013:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#10 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setInterfaceUp(java.lang.String)>(_arg0#10);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label014:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#11 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        $i17 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i17 goto label015;

        $z1 = 1;

        goto label016;

     label015:
        $z1 = 0;

     label016:
        _result#13 = $z1;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>(_arg0#11, _result#13);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label017:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#14 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void disableIpv6(java.lang.String)>(_arg0#14);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label018:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#15 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void enableIpv6(java.lang.String)>(_arg0#15);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label019:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#16 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        $i16 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i16 goto label020;

        $z2 = 1;

        goto label021;

     label020:
        $z2 = 0;

     label021:
        _result#18 = $z2;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setInterfaceIpv6NdOffload(java.lang.String,boolean)>(_arg0#16, _result#18);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label022:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#19 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#20 = virtualinvoke this.<android.os.INetworkManagementService$Stub: android.net.RouteInfo[] getRoutes(java.lang.String)>(_arg0#19);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        tmp$950896874 = (android.os.Parcelable[]) _result#20;

        virtualinvoke reply.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(tmp$950896874, 1);

        return 1;

     label023:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#21 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $i13 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i13 goto label024;

        $r15 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r16 = interfaceinvoke $r15.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(data);

        _result#22 = (android.net.RouteInfo) $r16;

        goto label025;

     label024:
        _result#22 = null;

     label025:
        virtualinvoke this.<android.os.INetworkManagementService$Stub: void addRoute(int,android.net.RouteInfo)>(_arg0#21, _result#22);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label026:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#23 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $i14 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i14 goto label027;

        $r18 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r17 = interfaceinvoke $r18.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(data);

        _result#24 = (android.net.RouteInfo) $r17;

        goto label028;

     label027:
        _result#24 = null;

     label028:
        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeRoute(int,android.net.RouteInfo)>(_arg0#23, _result#24);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label029:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#25 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#26 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setMtu(java.lang.String,int)>(_arg0#25, _result#26);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label030:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void shutdown()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label031:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#27 = virtualinvoke this.<android.os.INetworkManagementService$Stub: boolean getIpForwardingEnabled()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#27 == 0 goto label032;

        $b18 = 1;

        goto label033;

     label032:
        $b18 = 0;

     label033:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>($b18);

        return 1;

     label034:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i11 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i11 goto label035;

        $z3 = 1;

        goto label036;

     label035:
        $z3 = 0;

     label036:
        _arg0#30 = $z3;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setIpForwardingEnabled(boolean)>(_arg0#30);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label037:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#31 = virtualinvoke data.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void startTethering(java.lang.String[])>(_arg0#31);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label038:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void stopTethering()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label039:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#32 = virtualinvoke this.<android.os.INetworkManagementService$Stub: boolean isTetheringStarted()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#32 == 0 goto label040;

        $b19 = 1;

        goto label041;

     label040:
        $b19 = 0;

     label041:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>($b19);

        return 1;

     label042:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#34 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void tetherInterface(java.lang.String)>(_arg0#34);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label043:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#35 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void untetherInterface(java.lang.String)>(_arg0#35);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label044:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#36 = virtualinvoke this.<android.os.INetworkManagementService$Stub: java.lang.String[] listTetheredInterfaces()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        virtualinvoke reply.<android.os.Parcel: void writeStringArray(java.lang.String[])>(_arg0#36);

        return 1;

     label045:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i12 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i12 goto label046;

        $r13 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(data);

        _arg0#37 = (android.net.Network) $r14;

        goto label047;

     label046:
        _arg0#37 = null;

     label047:
        _result#38 = virtualinvoke data.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setDnsForwarders(android.net.Network,java.lang.String[])>(_arg0#37, _result#38);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label048:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#39 = virtualinvoke this.<android.os.INetworkManagementService$Stub: java.lang.String[] getDnsForwarders()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        virtualinvoke reply.<android.os.Parcel: void writeStringArray(java.lang.String[])>(_arg0#39);

        return 1;

     label049:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#40 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#41 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void startInterfaceForwarding(java.lang.String,java.lang.String)>(_arg0#40, _result#41);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label050:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#42 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#43 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void stopInterfaceForwarding(java.lang.String,java.lang.String)>(_arg0#42, _result#43);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label051:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#44 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#45 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void enableNat(java.lang.String,java.lang.String)>(_arg0#44, _result#45);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label052:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#46 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#47 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void disableNat(java.lang.String,java.lang.String)>(_arg0#46, _result#47);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label053:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#48 = virtualinvoke this.<android.os.INetworkManagementService$Stub: java.lang.String[] listTtys()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        virtualinvoke reply.<android.os.Parcel: void writeStringArray(java.lang.String[])>(_arg0#48);

        return 1;

     label054:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#49 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#50 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _arg2#51 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _arg3 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _arg4 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(_arg0#49, _result#50, _arg2#51, _arg3, _arg4);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label055:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#52 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void detachPppd(java.lang.String)>(_arg0#52);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label056:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#53 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#54 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void wifiFirmwareReload(java.lang.String,java.lang.String)>(_arg0#53, _result#54);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label057:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i10 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i10 goto label058;

        $r11 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(data);

        _arg0#55 = (android.net.wifi.WifiConfiguration) $r10;

        goto label059;

     label058:
        _arg0#55 = null;

     label059:
        _result#56 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>(_arg0#55, _result#56);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label060:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#57 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void stopAccessPoint(java.lang.String)>(_arg0#57);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label061:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i9 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i9 goto label062;

        $r9 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(data);

        _arg0#58 = (android.net.wifi.WifiConfiguration) $r12;

        goto label063;

     label062:
        _arg0#58 = null;

     label063:
        _result#59 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>(_arg0#58, _result#59);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label064:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#60 = virtualinvoke this.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsSummaryDev()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#60 == null goto label065;

        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke _arg0#60.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(reply, 1);

        goto label066;

     label065:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(0);

     label066:
        return 1;

     label067:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#61 = virtualinvoke this.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsSummaryXt()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#61 == null goto label068;

        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke _arg0#61.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(reply, 1);

        goto label069;

     label068:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(0);

     label069:
        return 1;

     label070:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#62 = virtualinvoke this.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsDetail()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#62 == null goto label071;

        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke _arg0#62.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(reply, 1);

        goto label072;

     label071:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(0);

     label072:
        return 1;

     label073:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#63 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _result#64 = virtualinvoke this.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsUidDetail(int)>(_arg0#63);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _result#64 == null goto label074;

        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke _result#64.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(reply, 1);

        goto label075;

     label074:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(0);

     label075:
        return 1;

     label076:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#65 = virtualinvoke this.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsTethering()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#65 == null goto label077;

        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke _arg0#65.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(reply, 1);

        goto label078;

     label077:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>(0);

     label078:
        return 1;

     label079:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#66 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#67 = virtualinvoke data.<android.os.Parcel: long readLong()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setInterfaceQuota(java.lang.String,long)>(_arg0#66, _result#67);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label080:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#68 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeInterfaceQuota(java.lang.String)>(_arg0#68);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label081:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#69 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#70 = virtualinvoke data.<android.os.Parcel: long readLong()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setInterfaceAlert(java.lang.String,long)>(_arg0#69, _result#70);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label082:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#71 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeInterfaceAlert(java.lang.String)>(_arg0#71);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label083:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#72 = virtualinvoke data.<android.os.Parcel: long readLong()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setGlobalAlert(long)>(_arg0#72);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label084:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#73 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i8 goto label085;

        $z4 = 1;

        goto label086;

     label085:
        $z4 = 0;

     label086:
        _result#75 = $z4;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setUidNetworkRules(int,boolean)>(_arg0#73, _result#75);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label087:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#76 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _result#77 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setUidCleartextNetworkPolicy(int,int)>(_arg0#76, _result#77);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label088:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#78 = virtualinvoke this.<android.os.INetworkManagementService$Stub: boolean isBandwidthControlEnabled()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#78 == 0 goto label089;

        $b20 = 1;

        goto label090;

     label089:
        $b20 = 0;

     label090:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>($b20);

        return 1;

     label091:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#80 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#81 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _arg2#82 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void addIdleTimer(java.lang.String,int,int)>(_arg0#80, _result#81, _arg2#82);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label092:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#83 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeIdleTimer(java.lang.String)>(_arg0#83);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label093:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#84 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _result#85 = virtualinvoke data.<android.os.Parcel: java.lang.String[] createStringArray()>();

        _arg2#86 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setDnsServersForNetwork(int,java.lang.String[],java.lang.String)>(_arg0#84, _result#85, _arg2#86);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label094:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#87 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void flushNetworkDnsCache(int)>(_arg0#87);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label095:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i6 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i6 goto label096;

        $z5 = 1;

        goto label097;

     label096:
        $z5 = 0;

     label097:
        _arg0#89 = $z5;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setFirewallEnabled(boolean)>(_arg0#89);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label098:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#90 = virtualinvoke this.<android.os.INetworkManagementService$Stub: boolean isFirewallEnabled()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#90 == 0 goto label099;

        $b21 = 1;

        goto label100;

     label099:
        $b21 = 0;

     label100:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>($b21);

        return 1;

     label101:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#92 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        $i7 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i7 goto label102;

        $z6 = 1;

        goto label103;

     label102:
        $z6 = 0;

     label103:
        _result#94 = $z6;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setFirewallInterfaceRule(java.lang.String,boolean)>(_arg0#92, _result#94);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label104:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#95 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        $i4 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label105;

        $z7 = 1;

        goto label106;

     label105:
        $z7 = 0;

     label106:
        _result#97 = $z7;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setFirewallEgressSourceRule(java.lang.String,boolean)>(_arg0#95, _result#97);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label107:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#98 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#99 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i5 goto label108;

        $z8 = 1;

        goto label109;

     label108:
        $z8 = 0;

     label109:
        _arg2#101 = $z8;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setFirewallEgressDestRule(java.lang.String,int,boolean)>(_arg0#98, _result#99, _arg2#101);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label110:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#102 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _result#103 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _arg2#104 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setFirewallUidRule(int,int,int)>(_arg0#102, _result#103, _arg2#104);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label111:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#105 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _result#106 = virtualinvoke data.<android.os.Parcel: int[] createIntArray()>();

        _arg2#107 = virtualinvoke data.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setFirewallUidRules(int,int[],int[])>(_arg0#105, _result#106, _arg2#107);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label112:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#108 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label113;

        $z9 = 1;

        goto label114;

     label113:
        $z9 = 0;

     label114:
        _result#110 = $z9;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setFirewallChainEnabled(int,boolean)>(_arg0#108, _result#110);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label115:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#111 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $r8 = <android.net.UidRange: android.os.Parcelable$Creator CREATOR>;

        $r7 = virtualinvoke data.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r8);

        _result#112 = (android.net.UidRange[]) $r7;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void addVpnUidRanges(int,android.net.UidRange[])>(_arg0#111, _result#112);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label116:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#113 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $r6 = <android.net.UidRange: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke data.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r6);

        _result#114 = (android.net.UidRange[]) $r5;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeVpnUidRanges(int,android.net.UidRange[])>(_arg0#113, _result#114);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label117:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#115 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void startClatd(java.lang.String)>(_arg0#115);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label118:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#116 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void stopClatd(java.lang.String)>(_arg0#116);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label119:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#117 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#118 = virtualinvoke this.<android.os.INetworkManagementService$Stub: boolean isClatdStarted(java.lang.String)>(_arg0#117);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _result#118 == 0 goto label120;

        $b22 = 1;

        goto label121;

     label120:
        $b22 = 0;

     label121:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>($b22);

        return 1;

     label122:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r3 = virtualinvoke data.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        _arg0#120 = staticinvoke <android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>($r3);

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void registerNetworkActivityListener(android.os.INetworkActivityListener)>(_arg0#120);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label123:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r4 = virtualinvoke data.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        _arg0#121 = staticinvoke <android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>($r4);

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>(_arg0#121);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label124:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#122 = virtualinvoke this.<android.os.INetworkManagementService$Stub: boolean isNetworkActive()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        if _arg0#122 == 0 goto label125;

        $b23 = 1;

        goto label126;

     label125:
        $b23 = 0;

     label126:
        virtualinvoke reply.<android.os.Parcel: void writeInt(int)>($b23);

        return 1;

     label127:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#124 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _result#125 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void createPhysicalNetwork(int,java.lang.String)>(_arg0#124, _result#125);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label128:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#126 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i1 goto label129;

        $z10 = 1;

        goto label130;

     label129:
        $z10 = 0;

     label130:
        _result#128 = $z10;

        $i2 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label131;

        $z11 = 1;

        goto label132;

     label131:
        $z11 = 0;

     label132:
        _arg2#130 = $z11;

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void createVirtualNetwork(int,boolean,boolean)>(_arg0#126, _result#128, _arg2#130);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label133:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#131 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeNetwork(int)>(_arg0#131);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label134:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#132 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#133 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void addInterfaceToNetwork(java.lang.String,int)>(_arg0#132, _result#133);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label135:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#134 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#135 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeInterfaceFromNetwork(java.lang.String,int)>(_arg0#134, _result#135);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label136:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#136 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        $i0 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label137;

        $r2 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r1 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(data);

        _result#137 = (android.net.RouteInfo) $r1;

        goto label138;

     label137:
        _result#137 = null;

     label138:
        _arg2#138 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>(_arg0#136, _result#137, _arg2#138);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label139:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#139 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setDefaultNetId(int)>(_arg0#139);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label140:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void clearDefaultNetId()>();

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label141:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#140 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        _result#141 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setNetworkPermission(int,java.lang.String)>(_arg0#140, _result#141);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label142:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#142 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        _result#143 = virtualinvoke data.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void setPermission(java.lang.String,int[])>(_arg0#142, _result#143);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label143:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#144 = virtualinvoke data.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void clearPermission(int[])>(_arg0#144);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label144:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#145 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void allowProtect(int)>(_arg0#145);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label145:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#146 = virtualinvoke data.<android.os.Parcel: int readInt()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void denyProtect(int)>(_arg0#146);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label146:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#147 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        $r0 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        _result#148 = virtualinvoke data.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r0);

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>(_arg0#147, _result#148);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label147:
        virtualinvoke data.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        _arg0#149 = virtualinvoke data.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke this.<android.os.INetworkManagementService$Stub: void removeInterfaceFromLocalNetwork(java.lang.String)>(_arg0#149);

        virtualinvoke reply.<android.os.Parcel: void writeNoException()>();

        return 1;

     label148:
        $z0 = specialinvoke this.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(code, data, reply, flags);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceFromLocalNetwork> = 86;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addInterfaceToLocalNetwork> = 85;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_denyProtect> = 84;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_allowProtect> = 83;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearPermission> = 82;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setPermission> = 81;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setNetworkPermission> = 80;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearDefaultNetId> = 79;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDefaultNetId> = 78;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addLegacyRouteForNetId> = 77;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceFromNetwork> = 76;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addInterfaceToNetwork> = 75;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeNetwork> = 74;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_createVirtualNetwork> = 73;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_createPhysicalNetwork> = 72;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isNetworkActive> = 71;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterNetworkActivityListener> = 70;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerNetworkActivityListener> = 69;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isClatdStarted> = 68;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopClatd> = 67;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startClatd> = 66;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeVpnUidRanges> = 65;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addVpnUidRanges> = 64;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallChainEnabled> = 63;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallUidRules> = 62;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallUidRule> = 61;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEgressDestRule> = 60;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEgressSourceRule> = 59;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallInterfaceRule> = 58;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isFirewallEnabled> = 57;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEnabled> = 56;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_flushNetworkDnsCache> = 55;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsServersForNetwork> = 54;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeIdleTimer> = 53;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addIdleTimer> = 52;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isBandwidthControlEnabled> = 51;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidCleartextNetworkPolicy> = 50;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidNetworkRules> = 49;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setGlobalAlert> = 48;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceAlert> = 47;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceAlert> = 46;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceQuota> = 45;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceQuota> = 44;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsTethering> = 43;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsUidDetail> = 42;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsDetail> = 41;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsSummaryXt> = 40;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsSummaryDev> = 39;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setAccessPoint> = 38;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopAccessPoint> = 37;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startAccessPoint> = 36;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_wifiFirmwareReload> = 35;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_detachPppd> = 34;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_attachPppd> = 33;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listTtys> = 32;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableNat> = 31;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableNat> = 30;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopInterfaceForwarding> = 29;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startInterfaceForwarding> = 28;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getDnsForwarders> = 27;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsForwarders> = 26;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listTetheredInterfaces> = 25;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_untetherInterface> = 24;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_tetherInterface> = 23;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isTetheringStarted> = 22;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopTethering> = 21;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startTethering> = 20;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setIpForwardingEnabled> = 19;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getIpForwardingEnabled> = 18;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_shutdown> = 17;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setMtu> = 16;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeRoute> = 15;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addRoute> = 14;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getRoutes> = 13;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceIpv6NdOffload> = 12;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableIpv6> = 11;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableIpv6> = 10;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceIpv6PrivacyExtensions> = 9;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceUp> = 8;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceDown> = 7;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearInterfaceAddresses> = 6;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceConfig> = 5;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getInterfaceConfig> = 4;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listInterfaces> = 3;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterObserver> = 2;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerObserver> = 1;

        <android.os.INetworkManagementService$Stub: java.lang.String DESCRIPTOR> = "android.os.INetworkManagementService";

        return;
    }
}
