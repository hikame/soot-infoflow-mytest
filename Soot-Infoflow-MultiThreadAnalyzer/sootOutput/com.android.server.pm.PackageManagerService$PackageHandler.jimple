class com.android.server.pm.PackageManagerService$PackageHandler extends android.os.Handler
{
    private boolean mBound;
    final java.util.ArrayList mPendingInstalls;
    final com.android.server.pm.PackageManagerService this$0;

    private boolean connectToService()
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.content.Intent service, $r0;
        android.content.ComponentName $r1;
        com.android.server.pm.PackageManagerService $r2, $r3;
        android.content.Context $r4;
        com.android.server.pm.PackageManagerService$DefaultContainerConnection $r5;
        android.os.UserHandle $r6;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>()>();

        $r1 = <com.android.server.pm.PackageManagerService: android.content.ComponentName DEFAULT_CONTAINER_COMPONENT>;

        service = virtualinvoke $r0.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r1);

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r2 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r2.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r3 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r5 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection access$600(com.android.server.pm.PackageManagerService)>($r3);

        $r6 = <android.os.UserHandle: android.os.UserHandle OWNER>;

        $z0 = virtualinvoke $r4.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(service, $r5, 1, $r6);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound> = 1;

        return 1;

     label1:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        return 0;
    }

    private void disconnectService()
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        com.android.server.pm.PackageManagerService $r0, $r2, $r3;
        android.content.Context $r4;
        com.android.server.pm.PackageManagerService$DefaultContainerConnection $r5;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        $r0 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$702(com.android.server.pm.PackageManagerService,com.android.internal.app.IMediaContainerService)>($r0, null);

        this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound> = 0;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r2 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r2.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r3 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r5 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection access$600(com.android.server.pm.PackageManagerService)>($r3);

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r5);

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        return;
    }

    void <init>(com.android.server.pm.PackageManagerService, android.os.Looper)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        com.android.server.pm.PackageManagerService l1;
        android.os.Looper looper;
        java.util.ArrayList $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        l1 := @parameter0: com.android.server.pm.PackageManagerService;

        looper := @parameter1: android.os.Looper;

        this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0> = l1;

        specialinvoke this.<android.os.Handler: void <init>(android.os.Looper)>(looper);

        this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound> = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls> = $r0;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Throwable l2, $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

     label1:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void doHandleMessage(android.os.Message)>(msg);

     label2:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label5;

     label3:
        $r0 := @caughtexception;

        l2 = $r0;

     label4:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        throw l2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void doHandleMessage(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this, $r3, $r39, $r57, $r152, $r165;
        android.os.Message msg, idx#6;
        int userId, $i0, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i53, $i54, $i56, $i57, $i58, $i62, idx#2, size#11, i#15, n#16, packageUserId#17, $i64, size#22, i#24, idx#26, n#32, packageUserId#33, it#34, it#44, ent#45, j#47, j#56, i$#57, size#70, params#71, i#75, params#77, i#82, params#85;
        java.lang.Throwable l17, l16, l19, l18, $r206, $r208, $r209, $r212, $r221, $r222, j#23, i$#35;
        java.lang.Object $r0, $r6, $r9, $r15, $r19, $r46, $r47, $r69, $r77, $r79, $r93, $r103, $r111, $r158, $r172, $r177, $r186, $r197, $r198, $r216, $r217, $r219, $r223, i#58;
        java.util.ArrayList $r1, $r2, $r5, $r89, $r90, $r94, $r96, $r127, $r150, $r151, $r166, $r168, $r169, $r175, $r176, $r178, $r179, $r184, $r220, ps#53;
        boolean $z0, $z1, $z4, $z5, $z6, $z10, $z12, $z13, $z14, $z15, $z16, $z18, $z20, $z22, $z25, $z27, $z28, $z29, $z30, $z31, size#9, $z32, size#28, idx#37, ps#46, $z33, it#51, $z34, params#62, $z35, idx#64;
        com.android.server.pm.PackageManagerService $r4, $r7, $r10, $r21, $r22, $r27, $r32, $r34, $r35, $r40, $r43, $r45, $r48, $r53, $r56, $r58, $r59, $r64, $r66, $r70, $r73, $r74, $r80, $r83, $r85, $r87, $r92, $r99, $r104, $r112, $r118, $r119, $r121, $r125, $r132, $r133, $r135, $r137, $r142, $r145, $r149, $r153, $r155, $r160, $r162, $r164, $r170, $r173, $r181, $r182, $r190, $r192, $r194, $r196, $r199, $r200, $r204, $r213;
        android.util.SparseArray $r8, $r20, $r33, $r49, $r54, $r91, $r102, $r171;
        com.android.server.pm.PackageManagerService$IntentFilterVerifier $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r17, $r25, $r28, $r29, $r36, $r38, $r41, $r60, $r61, $r62, $r72, $r97, $r105, $r106;
        java.lang.String $r16, $r26, $r37, $r71, $r98, $r115, $r117, $r120, $r183, $r218, params#25, i#40;
        android.content.pm.PackageParser$Package $r18, $r110, $r129, $r131, $r143, $r156;
        java.io.File $r23, $r51;
        com.android.server.pm.PackageManagerService$OriginInfo $r24, $r52;
        com.android.server.pm.PackageManagerService$InstallArgs $r30, $r42, $r55, $r113, $r123, size#38, size#73, uids#80;
        android.os.UserHandle $r31, $r44, $r65, $r157;
        com.android.internal.app.IMediaContainerService $r50, $r63, $r174, $r195;
        android.util.ArraySet $r67, $r76, $r88;
        java.lang.Integer $r68;
        android.util.ArrayMap $r75, $r84, $r136, $r163, $r188, $r191, $r215, i#10, uids#29, ent#54, params#67, params#68;
        android.os.storage.IMountService $r78;
        java.lang.Runtime $r81, $r100;
        com.android.server.pm.Settings $r82, $r86, $r134, $r146, $r147, $r214;
        android.content.pm.IPackageInstallObserver2 $r101, $r116;
        android.os.Bundle $r107, i#41, i#59;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r108, $r114, $r122, $r126;
        android.content.pm.ApplicationInfo $r109, $r128;
        int[] $r124, $r130, $r138, $r139, $r140, $r141, $r154, uids#14, i#30, i#31, packageUserId#42, n#43, j#48, j#49, ent#52, ps#55;
        com.android.server.pm.UserManagerService $r144;
        android.content.pm.PackageCleanItem $r148, $r161;
        java.lang.String[] $r159, params#12;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r180, $r185, $r189, $r201, $r202, $r203;
        java.util.Set $r187, size#65;
        android.os.RemoteException $r205, $r207, $r210, $r211, i#60, size#66, i#76, n#83;
        com.android.server.pm.PackageManagerService$HandlerParams params#1, idx#4, params#5, idx#8;
        java.util.Iterator params#3, params#7, it#18, idx#69;
        java.util.ArrayList[] idx#13;
        java.util.Map$Entry ent#19;
        com.android.server.pm.PackageSetting ps#20;
        com.android.server.pm.PackageManagerService$PostInstallData params#36;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo uids#39;
        com.android.server.pm.PackageVerificationState idx#72, idx#78;
        android.net.Uri uids#74, i#81;
        com.android.server.pm.PackageVerificationResponse size#79;
        com.android.server.pm.PackageManagerService$IFVerificationParams params#84;
        com.android.server.pm.IntentFilterVerificationState idx#86;
        com.android.server.pm.IntentFilterVerificationResponse uids#88;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $i0 = msg.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label021;
            case 2: goto label129;
            case 3: goto label004;
            case 4: goto label129;
            case 5: goto label001;
            case 6: goto label018;
            case 7: goto label039;
            case 8: goto label129;
            case 9: goto label051;
            case 10: goto label014;
            case 11: goto label020;
            case 12: goto label087;
            case 13: goto label098;
            case 14: goto label104;
            case 15: goto label118;
            case 16: goto label112;
            case 17: goto label125;
            case 18: goto label126;
            default: goto label129;
        };

     label001:
        $r0 = msg.<android.os.Message: java.lang.Object obj>;

        params#1 = (com.android.server.pm.PackageManagerService$HandlerParams) $r0;

        $r1 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        idx#2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $z0 = this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound>;

        if $z0 != 0 goto label003;

        $z1 = specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean connectToService()>();

        if $z1 != 0 goto label002;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Failed to bind to media container service");

        virtualinvoke params#1.<com.android.server.pm.PackageManagerService$HandlerParams: void serviceError()>();

        return;

     label002:
        $r5 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        virtualinvoke $r5.<java.util.ArrayList: void add(int,java.lang.Object)>(idx#2, params#1);

        goto label129;

     label003:
        $r2 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>(idx#2, params#1);

        if idx#2 != 0 goto label129;

        $r4 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r3 = $r4.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r3.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessage(int)>(3);

        goto label129;

     label004:
        $r172 = msg.<android.os.Message: java.lang.Object obj>;

        if $r172 == null goto label005;

        $r196 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r198 = msg.<android.os.Message: java.lang.Object obj>;

        $r195 = (com.android.internal.app.IMediaContainerService) $r198;

        staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$702(com.android.server.pm.PackageManagerService,com.android.internal.app.IMediaContainerService)>($r196, $r195);

     label005:
        $r173 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r174 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$700(com.android.server.pm.PackageManagerService)>($r173);

        if $r174 != null goto label009;

        $z27 = this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound>;

        if $z27 != 0 goto label008;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Cannot bind to media container service");

        $r168 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        params#3 = virtualinvoke $r168.<java.util.ArrayList: java.util.Iterator iterator()>();

     label006:
        $z28 = interfaceinvoke params#3.<java.util.Iterator: boolean hasNext()>();

        if $z28 == 0 goto label007;

        $r197 = interfaceinvoke params#3.<java.util.Iterator: java.lang.Object next()>();

        idx#4 = (com.android.server.pm.PackageManagerService$HandlerParams) $r197;

        virtualinvoke idx#4.<com.android.server.pm.PackageManagerService$HandlerParams: void serviceError()>();

        goto label006;

     label007:
        $r169 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        virtualinvoke $r169.<java.util.ArrayList: void clear()>();

        goto label129;

     label008:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Waiting to connect to media container service");

        goto label129;

     label009:
        $r175 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        $i54 = virtualinvoke $r175.<java.util.ArrayList: int size()>();

        if $i54 <= 0 goto label013;

        $r176 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        $r177 = virtualinvoke $r176.<java.util.ArrayList: java.lang.Object get(int)>(0);

        params#5 = (com.android.server.pm.PackageManagerService$HandlerParams) $r177;

        if params#5 == null goto label012;

        $z30 = virtualinvoke params#5.<com.android.server.pm.PackageManagerService$HandlerParams: boolean startCopy()>();

        if $z30 == 0 goto label012;

        $r178 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        $i56 = virtualinvoke $r178.<java.util.ArrayList: int size()>();

        if $i56 <= 0 goto label010;

        $r166 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        virtualinvoke $r166.<java.util.ArrayList: java.lang.Object remove(int)>(0);

     label010:
        $r179 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        $i50 = virtualinvoke $r179.<java.util.ArrayList: int size()>();

        if $i50 != 0 goto label011;

        $z25 = this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound>;

        if $z25 == 0 goto label012;

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void removeMessages(int)>(6);

        idx#6 = virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(6);

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessageDelayed(android.os.Message,long)>(idx#6, 10000L);

        goto label012;

     label011:
        $r164 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r165 = $r164.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r165.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessage(int)>(3);

     label012:
        goto label129;

     label013:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Empty queue");

        goto label129;

     label014:
        $r94 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        $i20 = virtualinvoke $r94.<java.util.ArrayList: int size()>();

        if $i20 <= 0 goto label129;

        $z16 = this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound>;

        if $z16 == 0 goto label015;

        specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void disconnectService()>();

     label015:
        $z15 = specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean connectToService()>();

        if $z15 != 0 goto label129;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Failed to bind to media container service");

        $r90 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        params#7 = virtualinvoke $r90.<java.util.ArrayList: java.util.Iterator iterator()>();

     label016:
        $z14 = interfaceinvoke params#7.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label017;

        $r93 = interfaceinvoke params#7.<java.util.Iterator: java.lang.Object next()>();

        idx#8 = (com.android.server.pm.PackageManagerService$HandlerParams) $r93;

        virtualinvoke idx#8.<com.android.server.pm.PackageManagerService$HandlerParams: void serviceError()>();

        goto label016;

     label017:
        $r89 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        virtualinvoke $r89.<java.util.ArrayList: void clear()>();

        goto label129;

     label018:
        $r151 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        $i42 = virtualinvoke $r151.<java.util.ArrayList: int size()>();

        if $i42 != 0 goto label019;

        $r170 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r171 = $r170.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        $i53 = virtualinvoke $r171.<android.util.SparseArray: int size()>();

        if $i53 != 0 goto label019;

        $z29 = this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean mBound>;

        if $z29 == 0 goto label129;

        specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void disconnectService()>();

        goto label129;

     label019:
        $r150 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        $i43 = virtualinvoke $r150.<java.util.ArrayList: int size()>();

        if $i43 <= 0 goto label129;

        $r153 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r152 = $r153.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r152.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessage(int)>(3);

        goto label129;

     label020:
        $r96 = this.<com.android.server.pm.PackageManagerService$PackageHandler: java.util.ArrayList mPendingInstalls>;

        virtualinvoke $r96.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        goto label129;

     label021:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r194 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r191 = $r194.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        i#10 = $r191;

        entermonitor $r191;

     label022:
        $r192 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r203 = $r192.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        if $r203 != null goto label024;

        exitmonitor i#10;

     label023:
        return;

     label024:
        $r204 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r202 = $r204.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        size#11 = virtualinvoke $r202.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: int size()>();

        if size#11 > 0 goto label026;

        exitmonitor i#10;

     label025:
        return;

     label026:
        params#12 = newarray (java.lang.String)[size#11];

        idx#13 = newarray (java.util.ArrayList)[size#11];

        uids#14 = newarray (int)[size#11];

        i#15 = 0;

        n#16 = 0;

     label027:
        $r200 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r201 = $r200.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        $i58 = virtualinvoke $r201.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: int userIdCount()>();

        if n#16 >= $i58 goto label032;

        $r181 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r180 = $r181.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        packageUserId#17 = virtualinvoke $r180.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: int userIdAt(int)>(n#16);

        $r190 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r189 = $r190.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        $r188 = virtualinvoke $r189.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: android.util.ArrayMap packagesForUserId(int)>(packageUserId#17);

        $r187 = virtualinvoke $r188.<android.util.ArrayMap: java.util.Set entrySet()>();

        it#18 = interfaceinvoke $r187.<java.util.Set: java.util.Iterator iterator()>();

     label028:
        $z31 = interfaceinvoke it#18.<java.util.Iterator: boolean hasNext()>();

        if $z31 == 0 goto label031;

        if i#15 >= size#11 goto label031;

        $r186 = interfaceinvoke it#18.<java.util.Iterator: java.lang.Object next()>();

        ent#19 = (java.util.Map$Entry) $r186;

        $r217 = interfaceinvoke ent#19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r218 = (java.lang.String) $r217;

        params#12[i#15] = $r218;

        $r219 = interfaceinvoke ent#19.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r220 = (java.util.ArrayList) $r219;

        idx#13[i#15] = $r220;

        $r213 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r214 = $r213.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r215 = $r214.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r216 = interfaceinvoke ent#19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r223 = virtualinvoke $r215.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r216);

        ps#20 = (com.android.server.pm.PackageSetting) $r223;

        if ps#20 == null goto label029;

        $i62 = ps#20.<com.android.server.pm.PackageSetting: int appId>;

        $i64 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(packageUserId#17, $i62);

        goto label030;

     label029:
        $i64 = -1;

     label030:
        uids#14[i#15] = $i64;

        i#15 = i#15 + 1;

        goto label028;

     label031:
        n#16 = n#16 + 1;

        goto label027;

     label032:
        size#22 = i#15;

        $r199 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r185 = $r199.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        virtualinvoke $r185.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void clear()>();

        exitmonitor i#10;

     label033:
        goto label036;

     label034:
        $r209 := @caughtexception;

        j#23 = $r209;

        exitmonitor i#10;

     label035:
        throw j#23;

     label036:
        i#24 = 0;

     label037:
        if i#24 >= size#22 goto label038;

        $r182 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r183 = params#12[i#24];

        $r184 = idx#13[i#24];

        $i57 = uids#14[i#24];

        staticinvoke <com.android.server.pm.PackageManagerService: void access$800(com.android.server.pm.PackageManagerService,java.lang.String,boolean,java.util.ArrayList,int)>($r182, $r183, 1, $r184, $i57);

        i#24 = i#24 + 1;

        goto label037;

     label038:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label129;

     label039:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r158 = msg.<android.os.Message: java.lang.Object obj>;

        params#25 = (java.lang.String) $r158;

        idx#26 = msg.<android.os.Message: int arg1>;

        $i48 = msg.<android.os.Message: int arg2>;

        if $i48 == 0 goto label040;

        $z32 = 1;

        goto label041;

     label040:
        $z32 = 0;

     label041:
        size#28 = $z32;

        $r162 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r163 = $r162.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        uids#29 = $r163;

        entermonitor $r163;

     label042:
        if idx#26 != -1 goto label045;

        $r144 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        i#30 = virtualinvoke $r144.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i#31 = i#30;

        n#32 = lengthof i#31;

        packageUserId#33 = 0;

     label043:
        if packageUserId#33 >= n#32 goto label044;

        it#34 = i#31[packageUserId#33];

        $r149 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r147 = $r149.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r148 = new android.content.pm.PackageCleanItem;

        specialinvoke $r148.<android.content.pm.PackageCleanItem: void <init>(int,java.lang.String,boolean)>(it#34, params#25, size#28);

        virtualinvoke $r147.<com.android.server.pm.Settings: void addPackageToCleanLPw(android.content.pm.PackageCleanItem)>($r148);

        packageUserId#33 = packageUserId#33 + 1;

        goto label043;

     label044:
        goto label046;

     label045:
        $r160 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r146 = $r160.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r161 = new android.content.pm.PackageCleanItem;

        specialinvoke $r161.<android.content.pm.PackageCleanItem: void <init>(int,java.lang.String,boolean)>(idx#26, params#25, size#28);

        virtualinvoke $r146.<com.android.server.pm.Settings: void addPackageToCleanLPw(android.content.pm.PackageCleanItem)>($r161);

     label046:
        exitmonitor uids#29;

     label047:
        goto label050;

     label048:
        $r208 := @caughtexception;

        i$#35 = $r208;

        exitmonitor uids#29;

     label049:
        throw i$#35;

     label050:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $r145 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r145.<com.android.server.pm.PackageManagerService: void startCleaningPackages()>();

        goto label129;

     label051:
        $r92 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r91 = $r92.<com.android.server.pm.PackageManagerService: android.util.SparseArray mRunningInstalls>;

        $i18 = msg.<android.os.Message: int arg1>;

        $r103 = virtualinvoke $r91.<android.util.SparseArray: java.lang.Object get(int)>($i18);

        params#36 = (com.android.server.pm.PackageManagerService$PostInstallData) $r103;

        $r104 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r102 = $r104.<com.android.server.pm.PackageManagerService: android.util.SparseArray mRunningInstalls>;

        $i23 = msg.<android.os.Message: int arg1>;

        virtualinvoke $r102.<android.util.SparseArray: void delete(int)>($i23);

        idx#37 = 0;

        if params#36 == null goto label085;

        size#38 = params#36.<com.android.server.pm.PackageManagerService$PostInstallData: com.android.server.pm.PackageManagerService$InstallArgs args>;

        uids#39 = params#36.<com.android.server.pm.PackageManagerService$PostInstallData: com.android.server.pm.PackageManagerService$PackageInstalledInfo res>;

        $i22 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i22 != 1 goto label075;

        $r110 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg>;

        $r109 = $r110.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i#40 = $r109.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r108 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        virtualinvoke $r108.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean,boolean)>(0, 1, 0);

        $r107 = new android.os.Bundle;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        specialinvoke $r107.<android.os.Bundle: void <init>(int)>(1);

        i#41 = $r107;

        $i26 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int uid>;

        virtualinvoke i#41.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", $i26);

        $i25 = size#38.<com.android.server.pm.PackageManagerService$InstallArgs: int installFlags>;

        $i32 = $i25 & 256;

        if $i32 == 0 goto label052;

        $r155 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r156 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg>;

        $r157 = size#38.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle user>;

        $i49 = virtualinvoke $r157.<android.os.UserHandle: int getIdentifier()>();

        $r159 = size#38.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String[] installGrantPermissions>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$900(com.android.server.pm.PackageManagerService,android.content.pm.PackageParser$Package,int,java.lang.String[])>($r155, $r156, $i49, $r159);

     label052:
        packageUserId#42 = newarray (int)[0];

        $r124 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        if $r124 == null goto label053;

        $r141 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        $i41 = lengthof $r141;

        if $i41 != 0 goto label054;

     label053:
        n#43 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] newUsers>;

        goto label061;

     label054:
        n#43 = newarray (int)[0];

        it#44 = 0;

     label055:
        $r140 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] newUsers>;

        $i40 = lengthof $r140;

        if it#44 >= $i40 goto label061;

        $r138 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] newUsers>;

        ent#45 = $r138[it#44];

        ps#46 = 1;

        j#47 = 0;

     label056:
        $r139 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        $i38 = lengthof $r139;

        if j#47 >= $i38 goto label058;

        $r154 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        $i47 = $r154[j#47];

        if $i47 != ent#45 goto label057;

        ps#46 = 0;

        goto label058;

     label057:
        j#47 = j#47 + 1;

        goto label056;

     label058:
        if ps#46 == 0 goto label059;

        $i35 = lengthof n#43;

        $i45 = $i35 + 1;

        j#48 = newarray (int)[$i45];

        $i46 = lengthof n#43;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(n#43, 0, j#48, 0, $i46);

        $i44 = lengthof n#43;

        j#48[$i44] = ent#45;

        n#43 = j#48;

        goto label060;

     label059:
        $i39 = lengthof packageUserId#42;

        $i36 = $i39 + 1;

        j#49 = newarray (int)[$i36];

        $i37 = lengthof packageUserId#42;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(packageUserId#42, 0, j#49, 0, $i37);

        $i34 = lengthof packageUserId#42;

        j#49[$i34] = ent#45;

        packageUserId#42 = j#49;

     label060:
        it#44 = it#44 + 1;

        goto label055;

     label061:
        $r125 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r125.<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_ADDED", i#40, i#41, null, null, n#43);

        $r126 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r120 = $r126.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage>;

        if $r120 == null goto label062;

        $z33 = 1;

        goto label063;

     label062:
        $z33 = 0;

     label063:
        it#51 = $z33;

        if it#51 == 0 goto label064;

        virtualinvoke i#41.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", 1);

     label064:
        $r121 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r121.<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_ADDED", i#40, i#41, null, null, packageUserId#42);

        if it#51 == 0 goto label066;

        $r133 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r133.<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_REPLACED", i#40, i#41, null, null, packageUserId#42);

        $r132 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r132.<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.MY_PACKAGE_REPLACED", null, null, i#40, null, packageUserId#42);

        $r131 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg>;

        $z20 = virtualinvoke $r131.<android.content.pm.PackageParser$Package: boolean isForwardLocked()>();

        if $z20 != 0 goto label065;

        $r143 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg>;

        $z22 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$1000(android.content.pm.PackageParser$Package)>($r143);

        if $z22 == 0 goto label066;

     label065:
        $r130 = newarray (int)[1];

        $r129 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg>;

        $r128 = $r129.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i33 = $r128.<android.content.pm.ApplicationInfo: int uid>;

        $r130[0] = $i33;

        ent#52 = $r130;

        $r127 = new java.util.ArrayList;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        specialinvoke $r127.<java.util.ArrayList: void <init>(int)>(1);

        ps#53 = $r127;

        virtualinvoke ps#53.<java.util.ArrayList: boolean add(java.lang.Object)>(i#40);

        $r142 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1100(com.android.server.pm.PackageManagerService,boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>($r142, 1, 1, ps#53, ent#52, null);

     label066:
        $r122 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r123 = $r122.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args>;

        if $r123 == null goto label067;

        idx#37 = 1;

     label067:
        $i30 = lengthof n#43;

        if $i30 <= 0 goto label074;

        $r118 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $i29 = n#43[0];

        $z18 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$1200(com.android.server.pm.PackageManagerService,java.lang.String,int)>($r118, i#40, $i29);

        if $z18 == 0 goto label074;

        $r137 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r136 = $r137.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        ent#54 = $r136;

        entermonitor $r136;

     label068:
        ps#55 = n#43;

        j#56 = lengthof ps#55;

        i$#57 = 0;

     label069:
        if i$#57 >= j#56 goto label070;

        userId = ps#55[i$#57];

        $r135 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r134 = $r135.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r134.<com.android.server.pm.Settings: boolean setDefaultBrowserPackageNameLPw(java.lang.String,int)>(null, userId);

        i$#57 = i$#57 + 1;

        goto label069;

     label070:
        exitmonitor ent#54;

     label071:
        goto label074;

     label072:
        $r221 := @caughtexception;

        l16 = $r221;

        exitmonitor ent#54;

     label073:
        throw l16;

     label074:
        $r119 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $i31 = staticinvoke <com.android.server.pm.PackageManagerService: int access$1300(com.android.server.pm.PackageManagerService)>($r119);

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(3110, $i31);

     label075:
        $r100 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r100.<java.lang.Runtime: void gc()>();

        if idx#37 == 0 goto label080;

        $r112 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r111 = $r112.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        i#58 = $r111;

        entermonitor $r111;

     label076:
        $r114 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r113 = $r114.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args>;

        virtualinvoke $r113.<com.android.server.pm.PackageManagerService$InstallArgs: boolean doPostDeleteLI(boolean)>(1);

        exitmonitor i#58;

     label077:
        goto label080;

     label078:
        $r222 := @caughtexception;

        l17 = $r222;

        exitmonitor i#58;

     label079:
        throw l17;

     label080:
        $r101 = size#38.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.IPackageInstallObserver2 observer>;

        if $r101 == null goto label084;

     label081:
        $r99 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        i#59 = virtualinvoke $r99.<com.android.server.pm.PackageManagerService: android.os.Bundle extrasForInstallResult(com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(uids#39);

        $r116 = size#38.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.IPackageInstallObserver2 observer>;

        $r117 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String name>;

        $i27 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        $r115 = uids#39.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String returnMsg>;

        interfaceinvoke $r116.<android.content.pm.IPackageInstallObserver2: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>($r117, $i27, $r115, i#59);

     label082:
        goto label084;

     label083:
        $r210 := @caughtexception;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", "Observer no longer exists.");

     label084:
        goto label086;

     label085:
        $r106 = new java.lang.StringBuilder;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bogus post-install token ");

        $i24 = msg.<android.os.Message: int arg1>;

        $r97 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r98);

     label086:
        goto label129;

     label087:
        $i16 = msg.<android.os.Message: int arg1>;

        if $i16 != 1 goto label088;

        $z34 = 1;

        goto label089;

     label088:
        $z34 = 0;

     label089:
        params#62 = $z34;

        $i17 = msg.<android.os.Message: int arg2>;

        if $i17 != 1 goto label090;

        $z35 = 1;

        goto label091;

     label090:
        $z35 = 0;

     label091:
        idx#64 = $z35;

        if idx#64 == 0 goto label092;

        $r81 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r81.<java.lang.Runtime: void gc()>();

     label092:
        $r77 = msg.<android.os.Message: java.lang.Object obj>;

        if $r77 == null goto label093;

        $r79 = msg.<android.os.Message: java.lang.Object obj>;

        size#65 = (java.util.Set) $r79;

        $r80 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1400(com.android.server.pm.PackageManagerService,java.util.Set)>($r80, size#65);

     label093:
        if params#62 == 0 goto label097;

     label094:
        $r78 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        interfaceinvoke $r78.<android.os.storage.IMountService: void finishMediaUpdate()>();

     label095:
        goto label097;

     label096:
        $r207 := @caughtexception;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "MountService not running?");

     label097:
        goto label129;

     label098:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r83 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r84 = $r83.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        params#67 = $r84;

        entermonitor $r84;

     label099:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void removeMessages(int)>(13);

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void removeMessages(int)>(14);

        $r85 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r86 = $r85.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r86.<com.android.server.pm.Settings: void writeLPr()>();

        $r87 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r88 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$1500(com.android.server.pm.PackageManagerService)>($r87);

        virtualinvoke $r88.<android.util.ArraySet: void clear()>();

        exitmonitor params#67;

     label100:
        goto label103;

     label101:
        $r212 := @caughtexception;

        l18 = $r212;

        exitmonitor params#67;

     label102:
        throw l18;

     label103:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label129;

     label104:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r73 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r75 = $r73.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        params#68 = $r75;

        entermonitor $r75;

     label105:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void removeMessages(int)>(14);

        $r74 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r76 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$1500(com.android.server.pm.PackageManagerService)>($r74);

        idx#69 = virtualinvoke $r76.<android.util.ArraySet: java.util.Iterator iterator()>();

     label106:
        $z13 = interfaceinvoke idx#69.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label107;

        $r69 = interfaceinvoke idx#69.<java.util.Iterator: java.lang.Object next()>();

        $r68 = (java.lang.Integer) $r69;

        size#70 = virtualinvoke $r68.<java.lang.Integer: int intValue()>();

        $r70 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r82 = $r70.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r82.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(size#70);

        goto label106;

     label107:
        $r66 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r67 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$1500(com.android.server.pm.PackageManagerService)>($r66);

        virtualinvoke $r67.<android.util.ArraySet: void clear()>();

        exitmonitor params#68;

     label108:
        goto label111;

     label109:
        $r206 := @caughtexception;

        l19 = $r206;

        exitmonitor params#68;

     label110:
        throw l19;

     label111:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label129;

     label112:
        params#71 = msg.<android.os.Message: int arg1>;

        $r21 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r20 = $r21.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        $r19 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object get(int)>(params#71);

        idx#72 = (com.android.server.pm.PackageVerificationState) $r19;

        if idx#72 == null goto label129;

        $z6 = virtualinvoke idx#72.<com.android.server.pm.PackageVerificationState: boolean timeoutExtended()>();

        if $z6 != 0 goto label129;

        size#73 = virtualinvoke idx#72.<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>();

        $r24 = size#73.<com.android.server.pm.PackageManagerService$InstallArgs: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r23 = $r24.<com.android.server.pm.PackageManagerService$OriginInfo: java.io.File resolvedFile>;

        uids#74 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r23);

        $r28 = new java.lang.StringBuilder;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verification timed out for ");

        $r25 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(uids#74);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r26);

        $r27 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r33 = $r27.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        virtualinvoke $r33.<android.util.SparseArray: void remove(int)>(params#71);

        i#75 = -22;

        $r34 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $i9 = staticinvoke <com.android.server.pm.PackageManagerService: int access$1600(com.android.server.pm.PackageManagerService)>($r34);

        if $i9 != 1 goto label116;

        $r41 = new java.lang.StringBuilder;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Continuing with installation of ");

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(uids#74);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r37);

        $i10 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke idx#72.<com.android.server.pm.PackageVerificationState: boolean setVerifierResponse(int,int)>($i10, 2);

        $r45 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r42 = virtualinvoke idx#72.<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>();

        $r44 = virtualinvoke $r42.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle getUser()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1700(com.android.server.pm.PackageManagerService,int,android.net.Uri,int,android.os.UserHandle)>($r45, params#71, uids#74, 1, $r44);

     label113:
        $r43 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r50 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$700(com.android.server.pm.PackageManagerService)>($r43);

        i#75 = virtualinvoke size#73.<com.android.server.pm.PackageManagerService$InstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>($r50, 1);

     label114:
        goto label117;

     label115:
        $r205 := @caughtexception;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Could not contact the ContainerService");

        goto label117;

     label116:
        $r35 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r30 = virtualinvoke idx#72.<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>();

        $r31 = virtualinvoke $r30.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle getUser()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1700(com.android.server.pm.PackageManagerService,int,android.net.Uri,int,android.os.UserHandle)>($r35, params#71, uids#74, -1, $r31);

     label117:
        $r32 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1800(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,int)>($r32, size#73, i#75);

        $r40 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r39 = $r40.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r39.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessage(int)>(6);

        goto label129;

     label118:
        params#77 = msg.<android.os.Message: int arg1>;

        $r48 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r49 = $r48.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        $r46 = virtualinvoke $r49.<android.util.SparseArray: java.lang.Object get(int)>(params#77);

        idx#78 = (com.android.server.pm.PackageVerificationState) $r46;

        if idx#78 != null goto label119;

        $r62 = new java.lang.StringBuilder;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid verification token ");

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(params#77);

        $r72 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" received");

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r71);

        goto label129;

     label119:
        $r47 = msg.<android.os.Message: java.lang.Object obj>;

        size#79 = (com.android.server.pm.PackageVerificationResponse) $r47;

        $i13 = size#79.<com.android.server.pm.PackageVerificationResponse: int callerUid>;

        $i12 = size#79.<com.android.server.pm.PackageVerificationResponse: int code>;

        virtualinvoke idx#78.<com.android.server.pm.PackageVerificationState: boolean setVerifierResponse(int,int)>($i13, $i12);

        $z10 = virtualinvoke idx#78.<com.android.server.pm.PackageVerificationState: boolean isVerificationComplete()>();

        if $z10 == 0 goto label129;

        $r53 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r54 = $r53.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        virtualinvoke $r54.<android.util.SparseArray: void remove(int)>(params#77);

        uids#80 = virtualinvoke idx#78.<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>();

        $r52 = uids#80.<com.android.server.pm.PackageManagerService$InstallArgs: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r51 = $r52.<com.android.server.pm.PackageManagerService$OriginInfo: java.io.File resolvedFile>;

        i#81 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r51);

        $z12 = virtualinvoke idx#78.<com.android.server.pm.PackageVerificationState: boolean isInstallAllowed()>();

        if $z12 == 0 goto label123;

        i#82 = -110;

        $r56 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $i14 = size#79.<com.android.server.pm.PackageVerificationResponse: int code>;

        $r55 = virtualinvoke idx#78.<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>();

        $r65 = virtualinvoke $r55.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle getUser()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1700(com.android.server.pm.PackageManagerService,int,android.net.Uri,int,android.os.UserHandle)>($r56, params#77, i#81, $i14, $r65);

     label120:
        $r64 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r63 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$700(com.android.server.pm.PackageManagerService)>($r64);

        i#82 = virtualinvoke uids#80.<com.android.server.pm.PackageManagerService$InstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>($r63, 1);

     label121:
        goto label124;

     label122:
        $r211 := @caughtexception;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Could not contact the ContainerService");

        goto label124;

     label123:
        i#82 = -22;

     label124:
        $r59 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1800(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,int)>($r59, uids#80, i#82);

        $r58 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r57 = $r58.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r57.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessage(int)>(6);

        goto label129;

     label125:
        $r15 = msg.<android.os.Message: java.lang.Object obj>;

        params#84 = (com.android.server.pm.PackageManagerService$IFVerificationParams) $r15;

        $r22 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $i6 = params#84.<com.android.server.pm.PackageManagerService$IFVerificationParams: int userId>;

        $i7 = params#84.<com.android.server.pm.PackageManagerService$IFVerificationParams: int verifierUid>;

        $z5 = params#84.<com.android.server.pm.PackageManagerService$IFVerificationParams: boolean replacing>;

        $r18 = params#84.<com.android.server.pm.PackageManagerService$IFVerificationParams: android.content.pm.PackageParser$Package pkg>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1900(com.android.server.pm.PackageManagerService,int,int,boolean,android.content.pm.PackageParser$Package)>($r22, $i6, $i7, $z5, $r18);

        goto label129;

     label126:
        params#85 = msg.<android.os.Message: int arg1>;

        $r7 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r8 = $r7.<com.android.server.pm.PackageManagerService: android.util.SparseArray mIntentFilterVerificationStates>;

        $r6 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(params#85);

        idx#86 = (com.android.server.pm.IntentFilterVerificationState) $r6;

        if idx#86 != null goto label127;

        $r14 = new java.lang.StringBuilder;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IntentFilter verification token ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(params#85);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" received");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        goto label129;

     label127:
        virtualinvoke idx#86.<com.android.server.pm.IntentFilterVerificationState: int getUserId()>();

        $r9 = msg.<android.os.Message: java.lang.Object obj>;

        uids#88 = (com.android.server.pm.IntentFilterVerificationResponse) $r9;

        $i2 = uids#88.<com.android.server.pm.IntentFilterVerificationResponse: int callerUid>;

        $i3 = uids#88.<com.android.server.pm.IntentFilterVerificationResponse: int code>;

        virtualinvoke idx#86.<com.android.server.pm.IntentFilterVerificationState: boolean setVerifierResponse(int,int)>($i2, $i3);

        $i4 = uids#88.<com.android.server.pm.IntentFilterVerificationResponse: int code>;

        if $i4 != -1 goto label128;

     label128:
        $z4 = virtualinvoke idx#86.<com.android.server.pm.IntentFilterVerificationState: boolean isVerificationComplete()>();

        if $z4 == 0 goto label129;

        $r10 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r11 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$IntentFilterVerifier access$2000(com.android.server.pm.PackageManagerService)>($r10);

        interfaceinvoke $r11.<com.android.server.pm.PackageManagerService$IntentFilterVerifier: void receiveVerificationResponse(int)>(params#85);

        goto label129;

     label129:
        return;

        catch java.lang.Throwable from label022 to label023 with label034;
        catch java.lang.Throwable from label024 to label025 with label034;
        catch java.lang.Throwable from label026 to label033 with label034;
        catch java.lang.Throwable from label034 to label035 with label034;
        catch java.lang.Throwable from label042 to label047 with label048;
        catch java.lang.Throwable from label048 to label049 with label048;
        catch java.lang.Throwable from label068 to label071 with label072;
        catch java.lang.Throwable from label072 to label073 with label072;
        catch java.lang.Throwable from label076 to label077 with label078;
        catch java.lang.Throwable from label078 to label079 with label078;
        catch android.os.RemoteException from label081 to label082 with label083;
        catch android.os.RemoteException from label094 to label095 with label096;
        catch java.lang.Throwable from label099 to label100 with label101;
        catch java.lang.Throwable from label101 to label102 with label101;
        catch java.lang.Throwable from label105 to label108 with label109;
        catch java.lang.Throwable from label109 to label110 with label109;
        catch android.os.RemoteException from label113 to label114 with label115;
        catch android.os.RemoteException from label120 to label121 with label122;
    }

    void dispatchMessage(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Runnable $r0;
        android.os.Handler$Callback $r1, $r2;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $r0 = msg.<android.os.Message: java.lang.Runnable callback>;

        if $r0 == null goto label1;

        staticinvoke <android.os.Handler: void handleCallback(android.os.Message)>(msg);

        goto label3;

     label1:
        $r1 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        if $r1 == null goto label2;

        $r2 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<android.os.Handler$Callback: boolean handleMessage(android.os.Message)>(msg);

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void handleMessage(android.os.Message)>(msg);

     label3:
        return;
    }

    void <init>()
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(android.os.Handler$Callback,boolean)>(null, 0);

        return;
    }

    void <init>(android.os.Handler$Callback)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Handler$Callback callback;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        callback := @parameter0: android.os.Handler$Callback;

        specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(android.os.Handler$Callback,boolean)>(callback, 0);

        return;
    }

    void <init>(android.os.Looper)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Looper looper;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        looper := @parameter0: android.os.Looper;

        specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>(looper, null, 0);

        return;
    }

    void <init>(android.os.Looper, android.os.Handler$Callback)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Looper looper;
        android.os.Handler$Callback callback;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        looper := @parameter0: android.os.Looper;

        callback := @parameter1: android.os.Handler$Callback;

        specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>(looper, callback, 0);

        return;
    }

    void <init>(boolean)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        boolean async;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        async := @parameter0: boolean;

        specialinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(android.os.Handler$Callback,boolean)>(null, async);

        return;
    }

    void <init>(android.os.Handler$Callback, boolean)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Handler$Callback callback;
        boolean async;
        android.os.Looper $r0, $r1, $r2;
        android.os.MessageQueue $r3;
        java.lang.RuntimeException $r4;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        callback := @parameter0: android.os.Handler$Callback;

        async := @parameter1: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        this.<android.os.Handler: android.os.Looper mLooper> = $r0;

        $r1 = this.<android.os.Handler: android.os.Looper mLooper>;

        if $r1 != null goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t create handler inside thread that has not called Looper.prepare()");

        throw $r4;

     label1:
        $r2 = this.<android.os.Handler: android.os.Looper mLooper>;

        $r3 = $r2.<android.os.Looper: android.os.MessageQueue mQueue>;

        this.<android.os.Handler: android.os.MessageQueue mQueue> = $r3;

        this.<android.os.Handler: android.os.Handler$Callback mCallback> = callback;

        this.<android.os.Handler: boolean mAsynchronous> = async;

        return;
    }

    void <init>(android.os.Looper, android.os.Handler$Callback, boolean)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Looper looper;
        android.os.Handler$Callback callback;
        boolean async;
        android.os.MessageQueue $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        looper := @parameter0: android.os.Looper;

        callback := @parameter1: android.os.Handler$Callback;

        async := @parameter2: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.Handler: android.os.Looper mLooper> = looper;

        $r0 = looper.<android.os.Looper: android.os.MessageQueue mQueue>;

        this.<android.os.Handler: android.os.MessageQueue mQueue> = $r0;

        this.<android.os.Handler: android.os.Handler$Callback mCallback> = callback;

        this.<android.os.Handler: boolean mAsynchronous> = async;

        return;
    }

    java.lang.String getMessageName(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message message;
        java.lang.Runnable $r0, $r6;
        java.lang.StringBuilder $r1, $r2, $r4;
        int $i0;
        java.lang.String $r3, $r5, $r8;
        java.lang.Class $r7;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        message := @parameter0: android.os.Message;

        $r0 = message.<android.os.Message: java.lang.Runnable callback>;

        if $r0 == null goto label1;

        $r6 = message.<android.os.Message: java.lang.Runnable callback>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        return $r8;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i0 = message.<android.os.Message: int what>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    android.os.Message obtainMessage()
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        $r0 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler)>(this);

        return $r0;
    }

    android.os.Message obtainMessage(int)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        android.os.Message result;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        result = new android.os.Message;

        specialinvoke result.<android.os.Message: void <init>()>();

        result.<android.os.Message: int what> = what;

        result.<android.os.Message: android.os.Handler target> = this;

        return result;
    }

    android.os.Message obtainMessage(int, java.lang.Object)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        java.lang.Object obj;
        android.os.Message $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        obj := @parameter1: java.lang.Object;

        $r0 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(this, what, obj);

        return $r0;
    }

    android.os.Message obtainMessage(int, int, int)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what, arg1, arg2;
        android.os.Message $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        arg1 := @parameter1: int;

        arg2 := @parameter2: int;

        $r0 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>(this, 9, arg1, 0);

        return $r0;
    }

    android.os.Message obtainMessage(int, int, int, java.lang.Object)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what, arg1, arg2;
        java.lang.Object obj;
        android.os.Message $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        arg1 := @parameter1: int;

        arg2 := @parameter2: int;

        obj := @parameter3: java.lang.Object;

        $r0 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>(this, 7, arg1, arg2, obj);

        return $r0;
    }

    boolean post(java.lang.Runnable)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable param0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        param0 := @parameter0: java.lang.Runnable;

        interfaceinvoke param0.<java.lang.Runnable: void run()>();

        return 1;
    }

    boolean postAtTime(java.lang.Runnable, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable param0;
        long param1;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        param0 := @parameter0: java.lang.Runnable;

        param1 := @parameter1: long;

        interfaceinvoke param0.<java.lang.Runnable: void run()>();

        return 1;
    }

    boolean postAtTime(java.lang.Runnable, java.lang.Object, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable param0;
        java.lang.Object param1;
        long param2;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        param0 := @parameter0: java.lang.Runnable;

        param1 := @parameter1: java.lang.Object;

        param2 := @parameter2: long;

        interfaceinvoke param0.<java.lang.Runnable: void run()>();

        return 1;
    }

    boolean postDelayed(java.lang.Runnable, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable param0;
        long param1;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        param0 := @parameter0: java.lang.Runnable;

        param1 := @parameter1: long;

        interfaceinvoke param0.<java.lang.Runnable: void run()>();

        return 1;
    }

    boolean postAtFrontOfQueue(java.lang.Runnable)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable param0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        param0 := @parameter0: java.lang.Runnable;

        interfaceinvoke param0.<java.lang.Runnable: void run()>();

        return 1;
    }

    boolean runWithScissors(java.lang.Runnable, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable r;
        long timeout;
        android.os.Handler$BlockingRunnable br, $r2;
        byte $b0;
        android.os.Looper $r0, $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r3, $r4;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        r := @parameter0: java.lang.Runnable;

        timeout := @parameter1: long;

        if r != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("runnable must not be null");

        throw $r4;

     label1:
        $b0 = timeout cmp 0L;

        if $b0 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeout must be non-negative");

        throw $r3;

     label2:
        $r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r1 = this.<android.os.Handler: android.os.Looper mLooper>;

        if $r0 != $r1 goto label3;

        interfaceinvoke r.<java.lang.Runnable: void run()>();

        return 1;

     label3:
        $r2 = new android.os.Handler$BlockingRunnable;

        specialinvoke $r2.<android.os.Handler$BlockingRunnable: void <init>(java.lang.Runnable)>(r);

        br = $r2;

        $z0 = virtualinvoke br.<android.os.Handler$BlockingRunnable: boolean postAndWait(android.os.Handler,long)>(this, timeout);

        return $z0;
    }

    void removeCallbacks(java.lang.Runnable)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable r;
        android.os.MessageQueue $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        r := @parameter0: java.lang.Runnable;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        virtualinvoke $r0.<android.os.MessageQueue: void removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)>(this, r, null);

        return;
    }

    void removeCallbacks(java.lang.Runnable, java.lang.Object)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable r;
        java.lang.Object token;
        android.os.MessageQueue $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        r := @parameter0: java.lang.Runnable;

        token := @parameter1: java.lang.Object;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        virtualinvoke $r0.<android.os.MessageQueue: void removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)>(this, r, token);

        return;
    }

    boolean sendMessage(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void dispatchMessage(android.os.Message)>(msg);

        return 1;
    }

    boolean sendEmptyMessage(int)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        $z0 = virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessageDelayed(int,long)>(what, 0L);

        return $z0;
    }

    boolean sendEmptyMessageDelayed(int, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        long delayMillis;
        android.os.Message msg;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        delayMillis := @parameter1: long;

        msg = staticinvoke <android.os.Message: android.os.Message obtain()>();

        msg.<android.os.Message: int what> = what;

        $z0 = virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessageDelayed(android.os.Message,long)>(msg, 0L);

        return $z0;
    }

    boolean sendEmptyMessageAtTime(int, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        long uptimeMillis;
        android.os.Message msg;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        uptimeMillis := @parameter1: long;

        msg = staticinvoke <android.os.Message: android.os.Message obtain()>();

        msg.<android.os.Message: int what> = what;

        $z0 = virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessageAtTime(android.os.Message,long)>(msg, uptimeMillis);

        return $z0;
    }

    boolean sendMessageDelayed(android.os.Message, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        long param1;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        param1 := @parameter1: long;

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void dispatchMessage(android.os.Message)>(msg);

        return 1;
    }

    boolean sendMessageAtTime(android.os.Message, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        long param1;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        param1 := @parameter1: long;

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void dispatchMessage(android.os.Message)>(msg);

        return 1;
    }

    boolean sendMessageAtFrontOfQueue(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void dispatchMessage(android.os.Message)>(msg);

        return 1;
    }

    boolean enqueueMessage(android.os.MessageQueue, android.os.Message, long)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.MessageQueue queue;
        android.os.Message msg;
        long uptimeMillis;
        boolean $z0, $z1;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        queue := @parameter0: android.os.MessageQueue;

        msg := @parameter1: android.os.Message;

        uptimeMillis := @parameter2: long;

        msg.<android.os.Message: android.os.Handler target> = this;

        $z0 = this.<android.os.Handler: boolean mAsynchronous>;

        if $z0 == 0 goto label1;

        virtualinvoke msg.<android.os.Message: void setAsynchronous(boolean)>(1);

     label1:
        $z1 = virtualinvoke queue.<android.os.MessageQueue: boolean enqueueMessage(android.os.Message,long)>(msg, uptimeMillis);

        return $z1;
    }

    void removeMessages(int)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        android.os.MessageQueue $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        virtualinvoke $r0.<android.os.MessageQueue: void removeMessages(android.os.Handler,int,java.lang.Object)>(this, what, null);

        return;
    }

    void removeMessages(int, java.lang.Object)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        java.lang.Object object;
        android.os.MessageQueue $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        object := @parameter1: java.lang.Object;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        virtualinvoke $r0.<android.os.MessageQueue: void removeMessages(android.os.Handler,int,java.lang.Object)>(this, what, object);

        return;
    }

    void removeCallbacksAndMessages(java.lang.Object)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Object token;
        android.os.MessageQueue $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        token := @parameter0: java.lang.Object;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        virtualinvoke $r0.<android.os.MessageQueue: void removeCallbacksAndMessages(android.os.Handler,java.lang.Object)>(this, token);

        return;
    }

    boolean hasMessages(int)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        android.os.MessageQueue $r0;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        $z0 = virtualinvoke $r0.<android.os.MessageQueue: boolean hasMessages(android.os.Handler,int,java.lang.Object)>(this, what, null);

        return $z0;
    }

    boolean hasMessages(int, java.lang.Object)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        int what;
        java.lang.Object object;
        android.os.MessageQueue $r0;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        what := @parameter0: int;

        object := @parameter1: java.lang.Object;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        $z0 = virtualinvoke $r0.<android.os.MessageQueue: boolean hasMessages(android.os.Handler,int,java.lang.Object)>(this, what, object);

        return $z0;
    }

    boolean hasCallbacks(java.lang.Runnable)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.Runnable r;
        android.os.MessageQueue $r0;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        r := @parameter0: java.lang.Runnable;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        $z0 = virtualinvoke $r0.<android.os.MessageQueue: boolean hasMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)>(this, r, null);

        return $z0;
    }

    android.os.Looper getLooper()
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Looper $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        $r0 = this.<android.os.Handler: android.os.Looper mLooper>;

        return $r0;
    }

    void dump(android.util.Printer, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.util.Printer pw;
        java.lang.String prefix, $r5, $r11, $r14;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r7, $r9, $r10, $r12, $r13, $r15;
        long $l0;
        android.os.Looper $r6, $r8;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        pw := @parameter0: android.util.Printer;

        prefix := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke pw.<android.util.Printer: void println(java.lang.String)>($r5);

        $r6 = this.<android.os.Handler: android.os.Looper mLooper>;

        if $r6 != null goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("looper uninitialized");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke pw.<android.util.Printer: void println(java.lang.String)>($r14);

        goto label2;

     label1:
        $r8 = this.<android.os.Handler: android.os.Looper mLooper>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<android.os.Looper: void dump(android.util.Printer,java.lang.String)>(pw, $r11);

     label2:
        return;
    }

    java.lang.String toString()
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r9;
        int $i0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handler (");

        $r2 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") {");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(this);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    android.os.IMessenger getIMessenger()
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.MessageQueue l1, $r0;
        java.lang.Throwable l2, $r5;
        android.os.IMessenger $r1, $r3, $r4, tmp$1461720863;
        android.os.Handler$MessengerImpl tmp$1893588806;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        $r0 = this.<android.os.Handler: android.os.MessageQueue mQueue>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<android.os.Handler: android.os.IMessenger mMessenger>;

        if $r1 == null goto label3;

        $r4 = this.<android.os.Handler: android.os.IMessenger mMessenger>;

        exitmonitor l1;

     label2:
        return $r4;

     label3:
        tmp$1893588806 = new android.os.Handler$MessengerImpl;

        specialinvoke tmp$1893588806.<android.os.Handler$MessengerImpl: void <init>(android.os.Handler,android.os.Handler$1)>(this, null);

        tmp$1461720863 = (android.os.IMessenger) tmp$1893588806;

        this.<android.os.Handler: android.os.IMessenger mMessenger> = tmp$1461720863;

        $r3 = this.<android.os.Handler: android.os.IMessenger mMessenger>;

        exitmonitor l1;

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        l2 = $r5;

        exitmonitor l1;

     label6:
        throw l2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    android.os.Message getPostMessage(java.lang.Runnable)
    {
        java.lang.Runnable r;
        android.os.Message m;

        r := @parameter0: java.lang.Runnable;

        m = staticinvoke <android.os.Message: android.os.Message obtain()>();

        m.<android.os.Message: java.lang.Runnable callback> = r;

        return m;
    }

    android.os.Message getPostMessage(java.lang.Runnable, java.lang.Object)
    {
        java.lang.Runnable r;
        java.lang.Object token;
        android.os.Message m;

        r := @parameter0: java.lang.Runnable;

        token := @parameter1: java.lang.Object;

        m = staticinvoke <android.os.Message: android.os.Message obtain()>();

        m.<android.os.Message: java.lang.Object obj> = token;

        m.<android.os.Message: java.lang.Runnable callback> = r;

        return m;
    }

    void handleCallback(android.os.Message)
    {
        android.os.Message message;
        java.lang.Runnable $r0;

        message := @parameter0: android.os.Message;

        $r0 = message.<android.os.Message: java.lang.Runnable callback>;

        interfaceinvoke $r0.<java.lang.Runnable: void run()>();

        return;
    }

    void doHandleMessage_PackageManagerService__PackageHandler_13(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this, $r3, $r39, $r57, $r152, $r165;
        android.os.Message msg, idx#6;
        int userId, $i0, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i53, $i54, $i56, $i57, $i58, $i62, idx#2, size#11, i#15, n#16, packageUserId#17, $i64, size#22, i#24, idx#26, n#32, packageUserId#33, it#34, it#44, ent#45, j#47, j#56, i$#57, size#70, params#71, i#75, params#77, i#82, params#85;
        java.lang.Throwable l17, l16, l19, l18, $r206, $r208, $r209, $r212, $r221, $r222, j#23, i$#35;
        java.lang.Object $r0, $r6, $r9, $r15, $r19, $r46, $r47, $r69, $r77, $r79, $r93, $r103, $r111, $r158, $r172, $r177, $r186, $r197, $r198, $r216, $r217, $r219, $r223, i#58;
        java.util.ArrayList $r1, $r2, $r5, $r89, $r90, $r94, $r96, $r127, $r150, $r151, $r166, $r168, $r169, $r175, $r176, $r178, $r179, $r184, $r220, ps#53;
        boolean $z0, $z1, $z4, $z5, $z6, $z10, $z12, $z13, $z14, $z15, $z16, $z18, $z20, $z22, $z25, $z27, $z28, $z29, $z30, $z31, size#9, $z32, size#28, idx#37, ps#46, $z33, it#51, $z34, params#62, $z35, idx#64;
        com.android.server.pm.PackageManagerService $r4, $r7, $r10, $r21, $r22, $r27, $r32, $r34, $r35, $r40, $r43, $r45, $r48, $r53, $r56, $r58, $r59, $r64, $r66, $r70, $r73, $r74, $r80, $r83, $r85, $r87, $r92, $r99, $r104, $r112, $r118, $r119, $r121, $r125, $r132, $r133, $r135, $r137, $r142, $r145, $r149, $r153, $r155, $r160, $r162, $r164, $r170, $r173, $r181, $r182, $r190, $r192, $r194, $r196, $r199, $r200, $r204, $r213;
        android.util.SparseArray $r8, $r20, $r33, $r49, $r54, $r91, $r102, $r171;
        com.android.server.pm.PackageManagerService$IntentFilterVerifier $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r17, $r25, $r28, $r29, $r36, $r38, $r41, $r60, $r61, $r62, $r72, $r97, $r105, $r106;
        java.lang.String $r16, $r26, $r37, $r71, $r98, $r115, $r117, $r120, $r183, $r218, params#25, i#40;
        android.content.pm.PackageParser$Package $r18, $r110, $r129, $r131, $r143, $r156;
        java.io.File $r23, $r51;
        com.android.server.pm.PackageManagerService$OriginInfo $r24, $r52;
        com.android.server.pm.PackageManagerService$InstallArgs $r30, $r42, $r55, $r113, $r123, size#38, size#73, uids#80;
        android.os.UserHandle $r31, $r44, $r65, $r157;
        com.android.internal.app.IMediaContainerService $r50, $r63, $r174, $r195;
        android.util.ArraySet $r67, $r76, $r88;
        java.lang.Integer $r68;
        android.util.ArrayMap $r75, $r84, $r136, $r163, $r188, $r191, $r215, i#10, uids#29, ent#54, params#67, params#68;
        android.os.storage.IMountService $r78;
        java.lang.Runtime $r81, $r100;
        com.android.server.pm.Settings $r82, $r86, $r134, $r146, $r147, $r214;
        android.content.pm.IPackageInstallObserver2 $r101, $r116;
        android.os.Bundle $r107, i#41, i#59;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r108, $r114, $r122, $r126;
        android.content.pm.ApplicationInfo $r109, $r128;
        int[] $r124, $r130, $r138, $r139, $r140, $r141, $r154, uids#14, i#30, i#31, packageUserId#42, n#43, j#48, j#49, ent#52, ps#55;
        com.android.server.pm.UserManagerService $r144;
        android.content.pm.PackageCleanItem $r148, $r161;
        java.lang.String[] $r159, params#12;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r180, $r185, $r189, $r201, $r202, $r203;
        java.util.Set $r187, size#65;
        android.os.RemoteException $r205, $r207, $r210, $r211, i#60, size#66, i#76, n#83;
        com.android.server.pm.PackageManagerService$HandlerParams params#1, idx#4, params#5, idx#8;
        java.util.Iterator params#3, params#7, it#18, idx#69;
        java.util.ArrayList[] idx#13;
        java.util.Map$Entry ent#19;
        com.android.server.pm.PackageSetting ps#20;
        com.android.server.pm.PackageManagerService$PostInstallData params#36;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo uids#39;
        com.android.server.pm.PackageVerificationState idx#72, idx#78;
        android.net.Uri uids#74, i#81;
        com.android.server.pm.PackageVerificationResponse size#79;
        com.android.server.pm.PackageManagerService$IFVerificationParams params#84;
        com.android.server.pm.IntentFilterVerificationState idx#86;
        com.android.server.pm.IntentFilterVerificationResponse uids#88;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $i0 = msg.<android.os.Message: int what>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r83 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r84 = $r83.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        params#67 = $r84;

        entermonitor $r84;

     label1:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void removeMessages(int)>(13);

        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void removeMessages(int)>(14);

        $r85 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r86 = $r85.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        virtualinvoke $r86.<com.android.server.pm.Settings: void writeLPr()>();

        $r87 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r88 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$1500(com.android.server.pm.PackageManagerService)>($r87);

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        virtualinvoke $r88.<android.util.ArraySet: void clear()>();

        exitmonitor params#67;

     label2:
        goto label3;

     label3:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label4;

     label4:
        return;

     label5:
        $r212 := @caughtexception;

        l18 = $r212;

        exitmonitor params#67;

     label6:
        throw l18;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void handleMessage_PackageManagerService__PackageHandler_13(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Throwable l2, $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

     label1:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void doHandleMessage_PackageManagerService__PackageHandler_13(android.os.Message)>(msg);

     label2:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label5;

     label3:
        $r0 := @caughtexception;

        l2 = $r0;

     label4:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        throw l2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void dispatchMessage_PackageManagerService__PackageHandler_13(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Runnable $r0;
        android.os.Handler$Callback $r1, $r2;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $r0 = msg.<android.os.Message: java.lang.Runnable callback>;

        if $r0 == null goto label1;

        staticinvoke <android.os.Handler: void handleCallback(android.os.Message)>(msg);

        goto label3;

     label1:
        $r1 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        if $r1 == null goto label2;

        $r2 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<android.os.Handler$Callback: boolean handleMessage(android.os.Message)>(msg);

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void handleMessage_PackageManagerService__PackageHandler_13(android.os.Message)>(msg);

     label3:
        return;
    }

    void doHandleMessage_PackageManagerService__PackageHandler_14(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this, $r3, $r39, $r57, $r152, $r165;
        android.os.Message msg, idx#6;
        int userId, $i0, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i53, $i54, $i56, $i57, $i58, $i62, idx#2, size#11, i#15, n#16, packageUserId#17, $i64, size#22, i#24, idx#26, n#32, packageUserId#33, it#34, it#44, ent#45, j#47, j#56, i$#57, size#70, params#71, i#75, params#77, i#82, params#85;
        java.lang.Throwable l17, l16, l19, l18, $r206, $r208, $r209, $r212, $r221, $r222, j#23, i$#35;
        java.lang.Object $r0, $r6, $r9, $r15, $r19, $r46, $r47, $r69, $r77, $r79, $r93, $r103, $r111, $r158, $r172, $r177, $r186, $r197, $r198, $r216, $r217, $r219, $r223, i#58;
        java.util.ArrayList $r1, $r2, $r5, $r89, $r90, $r94, $r96, $r127, $r150, $r151, $r166, $r168, $r169, $r175, $r176, $r178, $r179, $r184, $r220, ps#53;
        boolean $z0, $z1, $z4, $z5, $z6, $z10, $z12, $z13, $z14, $z15, $z16, $z18, $z20, $z22, $z25, $z27, $z28, $z29, $z30, $z31, size#9, $z32, size#28, idx#37, ps#46, $z33, it#51, $z34, params#62, $z35, idx#64;
        com.android.server.pm.PackageManagerService $r4, $r7, $r10, $r21, $r22, $r27, $r32, $r34, $r35, $r40, $r43, $r45, $r48, $r53, $r56, $r58, $r59, $r64, $r66, $r70, $r73, $r74, $r80, $r83, $r85, $r87, $r92, $r99, $r104, $r112, $r118, $r119, $r121, $r125, $r132, $r133, $r135, $r137, $r142, $r145, $r149, $r153, $r155, $r160, $r162, $r164, $r170, $r173, $r181, $r182, $r190, $r192, $r194, $r196, $r199, $r200, $r204, $r213;
        android.util.SparseArray $r8, $r20, $r33, $r49, $r54, $r91, $r102, $r171;
        com.android.server.pm.PackageManagerService$IntentFilterVerifier $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r17, $r25, $r28, $r29, $r36, $r38, $r41, $r60, $r61, $r62, $r72, $r97, $r105, $r106;
        java.lang.String $r16, $r26, $r37, $r71, $r98, $r115, $r117, $r120, $r183, $r218, params#25, i#40;
        android.content.pm.PackageParser$Package $r18, $r110, $r129, $r131, $r143, $r156;
        java.io.File $r23, $r51;
        com.android.server.pm.PackageManagerService$OriginInfo $r24, $r52;
        com.android.server.pm.PackageManagerService$InstallArgs $r30, $r42, $r55, $r113, $r123, size#38, size#73, uids#80;
        android.os.UserHandle $r31, $r44, $r65, $r157;
        com.android.internal.app.IMediaContainerService $r50, $r63, $r174, $r195;
        android.util.ArraySet $r67, $r76, $r88;
        java.lang.Integer $r68;
        android.util.ArrayMap $r75, $r84, $r136, $r163, $r188, $r191, $r215, i#10, uids#29, ent#54, params#67, params#68;
        android.os.storage.IMountService $r78;
        java.lang.Runtime $r81, $r100;
        com.android.server.pm.Settings $r82, $r86, $r134, $r146, $r147, $r214;
        android.content.pm.IPackageInstallObserver2 $r101, $r116;
        android.os.Bundle $r107, i#41, i#59;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r108, $r114, $r122, $r126;
        android.content.pm.ApplicationInfo $r109, $r128;
        int[] $r124, $r130, $r138, $r139, $r140, $r141, $r154, uids#14, i#30, i#31, packageUserId#42, n#43, j#48, j#49, ent#52, ps#55;
        com.android.server.pm.UserManagerService $r144;
        android.content.pm.PackageCleanItem $r148, $r161;
        java.lang.String[] $r159, params#12;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r180, $r185, $r189, $r201, $r202, $r203;
        java.util.Set $r187, size#65;
        android.os.RemoteException $r205, $r207, $r210, $r211, i#60, size#66, i#76, n#83;
        com.android.server.pm.PackageManagerService$HandlerParams params#1, idx#4, params#5, idx#8;
        java.util.Iterator params#3, params#7, it#18, idx#69;
        java.util.ArrayList[] idx#13;
        java.util.Map$Entry ent#19;
        com.android.server.pm.PackageSetting ps#20;
        com.android.server.pm.PackageManagerService$PostInstallData params#36;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo uids#39;
        com.android.server.pm.PackageVerificationState idx#72, idx#78;
        android.net.Uri uids#74, i#81;
        com.android.server.pm.PackageVerificationResponse size#79;
        com.android.server.pm.PackageManagerService$IFVerificationParams params#84;
        com.android.server.pm.IntentFilterVerificationState idx#86;
        com.android.server.pm.IntentFilterVerificationResponse uids#88;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $i0 = msg.<android.os.Message: int what>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r73 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r75 = $r73.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        params#68 = $r75;

        entermonitor $r75;

     label1:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void removeMessages(int)>(14);

        $r74 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r76 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$1500(com.android.server.pm.PackageManagerService)>($r74);

        idx#69 = virtualinvoke $r76.<android.util.ArraySet: java.util.Iterator iterator()>();

     label2:
        $z13 = interfaceinvoke idx#69.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label3;

        $r69 = interfaceinvoke idx#69.<java.util.Iterator: java.lang.Object next()>();

        $r68 = (java.lang.Integer) $r69;

        size#70 = virtualinvoke $r68.<java.lang.Integer: int intValue()>();

        $r70 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r82 = $r70.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r82.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(size#70);

        goto label2;

     label3:
        $r66 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r67 = staticinvoke <com.android.server.pm.PackageManagerService: android.util.ArraySet access$1500(com.android.server.pm.PackageManagerService)>($r66);

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        virtualinvoke $r67.<android.util.ArraySet: void clear()>();

        exitmonitor params#68;

     label4:
        goto label5;

     label5:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label6;

     label6:
        return;

     label7:
        $r206 := @caughtexception;

        l19 = $r206;

        exitmonitor params#68;

     label8:
        throw l19;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    void handleMessage_PackageManagerService__PackageHandler_14(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Throwable l2, $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

     label1:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void doHandleMessage_PackageManagerService__PackageHandler_14(android.os.Message)>(msg);

     label2:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label5;

     label3:
        $r0 := @caughtexception;

        l2 = $r0;

     label4:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        throw l2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void dispatchMessage_PackageManagerService__PackageHandler_14(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Runnable $r0;
        android.os.Handler$Callback $r1, $r2;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $r0 = msg.<android.os.Message: java.lang.Runnable callback>;

        if $r0 == null goto label1;

        staticinvoke <android.os.Handler: void handleCallback(android.os.Message)>(msg);

        goto label3;

     label1:
        $r1 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        if $r1 == null goto label2;

        $r2 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<android.os.Handler$Callback: boolean handleMessage(android.os.Message)>(msg);

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void handleMessage_PackageManagerService__PackageHandler_14(android.os.Message)>(msg);

     label3:
        return;
    }

    void doHandleMessage_PackageManagerService__PackageHandler_7(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this, $r3, $r39, $r57, $r152, $r165;
        android.os.Message msg, idx#6;
        int userId, $i0, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i53, $i54, $i56, $i57, $i58, $i62, idx#2, size#11, i#15, n#16, packageUserId#17, $i64, size#22, i#24, idx#26, n#32, packageUserId#33, it#34, it#44, ent#45, j#47, j#56, i$#57, size#70, params#71, i#75, params#77, i#82, params#85;
        java.lang.Throwable l17, l16, l19, l18, $r206, $r208, $r209, $r212, $r221, $r222, j#23, i$#35;
        java.lang.Object $r0, $r6, $r9, $r15, $r19, $r46, $r47, $r69, $r77, $r79, $r93, $r103, $r111, $r158, $r172, $r177, $r186, $r197, $r198, $r216, $r217, $r219, $r223, i#58;
        java.util.ArrayList $r1, $r2, $r5, $r89, $r90, $r94, $r96, $r127, $r150, $r151, $r166, $r168, $r169, $r175, $r176, $r178, $r179, $r184, $r220, ps#53;
        boolean $z0, $z1, $z4, $z5, $z6, $z10, $z12, $z13, $z14, $z15, $z16, $z18, $z20, $z22, $z25, $z27, $z28, $z29, $z30, $z31, size#9, $z32, size#28, idx#37, ps#46, $z33, it#51, $z34, params#62, $z35, idx#64;
        com.android.server.pm.PackageManagerService $r4, $r7, $r10, $r21, $r22, $r27, $r32, $r34, $r35, $r40, $r43, $r45, $r48, $r53, $r56, $r58, $r59, $r64, $r66, $r70, $r73, $r74, $r80, $r83, $r85, $r87, $r92, $r99, $r104, $r112, $r118, $r119, $r121, $r125, $r132, $r133, $r135, $r137, $r142, $r145, $r149, $r153, $r155, $r160, $r162, $r164, $r170, $r173, $r181, $r182, $r190, $r192, $r194, $r196, $r199, $r200, $r204, $r213;
        android.util.SparseArray $r8, $r20, $r33, $r49, $r54, $r91, $r102, $r171;
        com.android.server.pm.PackageManagerService$IntentFilterVerifier $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r17, $r25, $r28, $r29, $r36, $r38, $r41, $r60, $r61, $r62, $r72, $r97, $r105, $r106;
        java.lang.String $r16, $r26, $r37, $r71, $r98, $r115, $r117, $r120, $r183, $r218, params#25, i#40;
        android.content.pm.PackageParser$Package $r18, $r110, $r129, $r131, $r143, $r156;
        java.io.File $r23, $r51;
        com.android.server.pm.PackageManagerService$OriginInfo $r24, $r52;
        com.android.server.pm.PackageManagerService$InstallArgs $r30, $r42, $r55, $r113, $r123, size#38, size#73, uids#80;
        android.os.UserHandle $r31, $r44, $r65, $r157;
        com.android.internal.app.IMediaContainerService $r50, $r63, $r174, $r195;
        android.util.ArraySet $r67, $r76, $r88;
        java.lang.Integer $r68;
        android.util.ArrayMap $r75, $r84, $r136, $r163, $r188, $r191, $r215, i#10, uids#29, ent#54, params#67, params#68;
        android.os.storage.IMountService $r78;
        java.lang.Runtime $r81, $r100;
        com.android.server.pm.Settings $r82, $r86, $r134, $r146, $r147, $r214;
        android.content.pm.IPackageInstallObserver2 $r101, $r116;
        android.os.Bundle $r107, i#41, i#59;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r108, $r114, $r122, $r126;
        android.content.pm.ApplicationInfo $r109, $r128;
        int[] $r124, $r130, $r138, $r139, $r140, $r141, $r154, uids#14, i#30, i#31, packageUserId#42, n#43, j#48, j#49, ent#52, ps#55;
        com.android.server.pm.UserManagerService $r144;
        android.content.pm.PackageCleanItem $r148, $r161;
        java.lang.String[] $r159, params#12;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r180, $r185, $r189, $r201, $r202, $r203;
        java.util.Set $r187, size#65;
        android.os.RemoteException $r205, $r207, $r210, $r211, i#60, size#66, i#76, n#83;
        com.android.server.pm.PackageManagerService$HandlerParams params#1, idx#4, params#5, idx#8;
        java.util.Iterator params#3, params#7, it#18, idx#69;
        java.util.ArrayList[] idx#13;
        java.util.Map$Entry ent#19;
        com.android.server.pm.PackageSetting ps#20;
        com.android.server.pm.PackageManagerService$PostInstallData params#36;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo uids#39;
        com.android.server.pm.PackageVerificationState idx#72, idx#78;
        android.net.Uri uids#74, i#81;
        com.android.server.pm.PackageVerificationResponse size#79;
        com.android.server.pm.PackageManagerService$IFVerificationParams params#84;
        com.android.server.pm.IntentFilterVerificationState idx#86;
        com.android.server.pm.IntentFilterVerificationResponse uids#88;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $i0 = msg.<android.os.Message: int what>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(0);

        $r158 = msg.<android.os.Message: java.lang.Object obj>;

        params#25 = (java.lang.String) $r158;

        idx#26 = msg.<android.os.Message: int arg1>;

        $i48 = msg.<android.os.Message: int arg2>;

        if $i48 == 0 goto label01;

        $z32 = 1;

        goto label02;

     label01:
        $z32 = 0;

     label02:
        size#28 = $z32;

        $r162 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r163 = $r162.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mPackages>;

        uids#29 = $r163;

        entermonitor $r163;

     label03:
        if idx#26 != -1 goto label05;

        $r144 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        i#30 = virtualinvoke $r144.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i#31 = i#30;

        n#32 = lengthof i#31;

        packageUserId#33 = 0;

     label04:
        if packageUserId#33 >= n#32 goto label10;

        it#34 = i#31[packageUserId#33];

        $r149 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r147 = $r149.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r148 = new android.content.pm.PackageCleanItem;

        specialinvoke $r148.<android.content.pm.PackageCleanItem: void <init>(int,java.lang.String,boolean)>(it#34, params#25, size#28);

        virtualinvoke $r147.<com.android.server.pm.Settings: void addPackageToCleanLPw(android.content.pm.PackageCleanItem)>($r148);

        packageUserId#33 = packageUserId#33 + 1;

        goto label04;

     label05:
        $r160 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        $r146 = $r160.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r161 = new android.content.pm.PackageCleanItem;

        specialinvoke $r161.<android.content.pm.PackageCleanItem: void <init>(int,java.lang.String,boolean)>(idx#26, params#25, size#28);

        virtualinvoke $r146.<com.android.server.pm.Settings: void addPackageToCleanLPw(android.content.pm.PackageCleanItem)>($r161);

     label06:
        exitmonitor uids#29;

     label07:
        goto label08;

     label08:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $r145 = this.<com.android.server.pm.PackageManagerService$PackageHandler: com.android.server.pm.PackageManagerService this$0>;

        virtualinvoke $r145.<com.android.server.pm.PackageManagerService: void startCleaningPackages()>();

        goto label09;

     label09:
        return;

     label10:
        goto label06;

     label11:
        $r208 := @caughtexception;

        i$#35 = $r208;

        exitmonitor uids#29;

     label12:
        throw i$#35;

        catch java.lang.Throwable from label03 to label07 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    void handleMessage_PackageManagerService__PackageHandler_7(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Throwable l2, $r0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

     label1:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void doHandleMessage_PackageManagerService__PackageHandler_7(android.os.Message)>(msg);

     label2:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        goto label5;

     label3:
        $r0 := @caughtexception;

        l2 = $r0;

     label4:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        throw l2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void dispatchMessage_PackageManagerService__PackageHandler_7(android.os.Message)
    {
        com.android.server.pm.PackageManagerService$PackageHandler this;
        android.os.Message msg;
        java.lang.Runnable $r0;
        android.os.Handler$Callback $r1, $r2;
        boolean $z0;

        this := @this: com.android.server.pm.PackageManagerService$PackageHandler;

        msg := @parameter0: android.os.Message;

        $r0 = msg.<android.os.Message: java.lang.Runnable callback>;

        if $r0 == null goto label1;

        staticinvoke <android.os.Handler: void handleCallback(android.os.Message)>(msg);

        goto label3;

     label1:
        $r1 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        if $r1 == null goto label2;

        $r2 = this.<android.os.Handler: android.os.Handler$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<android.os.Handler$Callback: boolean handleMessage(android.os.Message)>(msg);

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke this.<com.android.server.pm.PackageManagerService$PackageHandler: void handleMessage_PackageManagerService__PackageHandler_7(android.os.Message)>(msg);

     label3:
        return;
    }
}
