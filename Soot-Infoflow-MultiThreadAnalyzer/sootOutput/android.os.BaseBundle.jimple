public class android.os.BaseBundle extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final boolean DEBUG;
    static final int BUNDLE_MAGIC;
    static final android.os.Parcel EMPTY_PARCEL;
    android.util.ArrayMap mMap;
    android.os.Parcel mParcelledData;
    private java.lang.ClassLoader mClassLoader;

    void <init>(java.lang.ClassLoader, int)
    {
        android.os.BaseBundle this;
        java.lang.ClassLoader loader, $r2;
        int capacity;
        java.lang.Class $r0;
        android.util.ArrayMap $r1;

        this := @this: android.os.BaseBundle;

        loader := @parameter0: java.lang.ClassLoader;

        capacity := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        if capacity <= 0 goto label1;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>(int)>(capacity);

        goto label2;

     label1:
        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

     label2:
        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r1;

        if loader != null goto label3;

        $r0 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label4;

     label3:
        $r2 = loader;

     label4:
        this.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = $r2;

        return;
    }

    void <init>()
    {
        android.os.BaseBundle this;
        java.lang.ClassLoader $r0;

        this := @this: android.os.BaseBundle;

        $r0 = (java.lang.ClassLoader) null;

        specialinvoke this.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>($r0, 0);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.os.BaseBundle this;
        android.os.Parcel parcelledData;

        this := @this: android.os.BaseBundle;

        parcelledData := @parameter0: android.os.Parcel;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        virtualinvoke this.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel)>(parcelledData);

        return;
    }

    void <init>(android.os.Parcel, int)
    {
        android.os.BaseBundle this;
        android.os.Parcel parcelledData;
        int length;

        this := @this: android.os.BaseBundle;

        parcelledData := @parameter0: android.os.Parcel;

        length := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        specialinvoke this.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel,int)>(parcelledData, length);

        return;
    }

    void <init>(java.lang.ClassLoader)
    {
        android.os.BaseBundle this;
        java.lang.ClassLoader loader;

        this := @this: android.os.BaseBundle;

        loader := @parameter0: java.lang.ClassLoader;

        specialinvoke this.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>(loader, 0);

        return;
    }

    void <init>(int)
    {
        android.os.BaseBundle this;
        int capacity;
        java.lang.ClassLoader $r0;

        this := @this: android.os.BaseBundle;

        capacity := @parameter0: int;

        $r0 = (java.lang.ClassLoader) null;

        specialinvoke this.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>($r0, capacity);

        return;
    }

    void <init>(android.os.BaseBundle)
    {
        android.os.BaseBundle this, b;
        android.os.Parcel $r0, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        android.util.ArrayMap $r1, $r3, $r4;
        java.lang.ClassLoader $r2;
        int $i0;

        this := @this: android.os.BaseBundle;

        b := @parameter0: android.os.BaseBundle;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        $r0 = b.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r0 == null goto label2;

        $r6 = b.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r5 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r6 != $r5 goto label1;

        $r12 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r12;

        goto label3;

     label1:
        $r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r7;

        $r9 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r10 = b.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r8 = b.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r8.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r9.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r10, 0, $i0);

        $r11 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r11.<android.os.Parcel: void setDataPosition(int)>(0);

        goto label3;

     label2:
        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

     label3:
        $r1 = b.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r1 == null goto label4;

        $r3 = new android.util.ArrayMap;

        $r4 = b.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r4);

        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r3;

        goto label5;

     label4:
        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

     label5:
        $r2 = b.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        this.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = $r2;

        return;
    }

    public java.lang.String getPairValue()
    {
        android.os.BaseBundle this;
        int size;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0, $r1;
        java.lang.String $r2;

        this := @this: android.os.BaseBundle;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        size = virtualinvoke $r0.<android.util.ArrayMap: int size()>();

        if size <= 1 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Bundle", "getPairValue() used on Bundle with multiple pairs.");

     label1:
        if size != 0 goto label2;

        return null;

     label2:
        $r1 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(0);

     label3:
        $r2 = (java.lang.String) o;

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>("getPairValue()", o, "String", e);

        return null;

        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    void setClassLoader(java.lang.ClassLoader)
    {
        android.os.BaseBundle this;
        java.lang.ClassLoader loader;

        this := @this: android.os.BaseBundle;

        loader := @parameter0: java.lang.ClassLoader;

        this.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = loader;

        return;
    }

    java.lang.ClassLoader getClassLoader()
    {
        android.os.BaseBundle this;
        java.lang.ClassLoader $r0;

        this := @this: android.os.BaseBundle;

        $r0 = this.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        return $r0;
    }

    synchronized void unparcel()
    {
        android.os.BaseBundle this;
        int N;
        android.os.Parcel $r0, $r1, $r2, $r3, $r9, $r10;
        android.util.ArrayMap $r4, $r5, $r6, $r8, $r11, $r12, $r13, $r14;
        java.lang.ClassLoader $r7;

        this := @this: android.os.BaseBundle;

        $r0 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r0 != null goto label1;

        return;

     label1:
        $r2 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r1 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r2 != $r1 goto label4;

        $r12 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r12 != null goto label2;

        $r13 = new android.util.ArrayMap;

        specialinvoke $r13.<android.util.ArrayMap: void <init>(int)>(1);

        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r13;

        goto label3;

     label2:
        $r14 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r14.<android.util.ArrayMap: void erase()>();

     label3:
        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        return;

     label4:
        $r3 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        N = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        if N >= 0 goto label5;

        return;

     label5:
        $r4 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r4 != null goto label6;

        $r11 = new android.util.ArrayMap;

        specialinvoke $r11.<android.util.ArrayMap: void <init>(int)>(N);

        this.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r11;

        goto label7;

     label6:
        $r5 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r5.<android.util.ArrayMap: void erase()>();

        $r6 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r6.<android.util.ArrayMap: void ensureCapacity(int)>(N);

     label7:
        $r9 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r8 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r7 = this.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        virtualinvoke $r9.<android.os.Parcel: void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader)>($r8, N, $r7);

        $r10 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r10.<android.os.Parcel: void recycle()>();

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        return;
    }

    public boolean isParcelled()
    {
        android.os.BaseBundle this;
        android.os.Parcel $r0;
        boolean $z0;

        this := @this: android.os.BaseBundle;

        $r0 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int size()
    {
        android.os.BaseBundle this;
        android.util.ArrayMap $r0;
        int $i0;

        this := @this: android.os.BaseBundle;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $i0 = virtualinvoke $r0.<android.util.ArrayMap: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        android.os.BaseBundle this;
        android.util.ArrayMap $r0;
        boolean $z0;

        this := @this: android.os.BaseBundle;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $z0 = virtualinvoke $r0.<android.util.ArrayMap: boolean isEmpty()>();

        return $z0;
    }

    public void clear()
    {
        android.os.BaseBundle this;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        android.util.ArrayMap $r0;
        boolean $z0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $z0 = virtualinvoke $r0.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(key);

        return $z0;
    }

    public java.lang.Object get(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        return $r1;
    }

    public void remove(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(key);

        return;
    }

    public void putAll(android.os.PersistableBundle)
    {
        android.os.BaseBundle this;
        android.os.PersistableBundle bundle;
        android.util.ArrayMap $r0, $r1;

        this := @this: android.os.BaseBundle;

        bundle := @parameter0: android.os.PersistableBundle;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        virtualinvoke bundle.<android.os.PersistableBundle: void unparcel()>();

        $r1 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r0 = bundle.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r1.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r0);

        return;
    }

    void putAll(android.util.ArrayMap)
    {
        android.os.BaseBundle this;
        android.util.ArrayMap map, $r0;

        this := @this: android.os.BaseBundle;

        map := @parameter0: android.util.ArrayMap;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>(map);

        return;
    }

    public java.util.Set keySet()
    {
        android.os.BaseBundle this;
        android.util.ArrayMap $r0;
        java.util.Set $r1;

        this := @this: android.os.BaseBundle;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.util.Set keySet()>();

        return $r1;
    }

    public void putBoolean(java.lang.String, boolean)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        boolean value;
        android.util.ArrayMap $r0;
        java.lang.Boolean $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: boolean;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    void putByte(java.lang.String, byte)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        byte value;
        android.util.ArrayMap $r0;
        java.lang.Byte $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: byte;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    void putChar(java.lang.String, char)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        char value;
        android.util.ArrayMap $r0;
        java.lang.Character $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: char;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    void putShort(java.lang.String, short)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        short value;
        android.util.ArrayMap $r0;
        java.lang.Short $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: short;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    public void putInt(java.lang.String, int)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        int value;
        android.util.ArrayMap $r0;
        java.lang.Integer $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: int;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    public void putLong(java.lang.String, long)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        long value;
        android.util.ArrayMap $r0;
        java.lang.Long $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: long;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    void putFloat(java.lang.String, float)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        float value;
        android.util.ArrayMap $r0;
        java.lang.Float $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: float;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    public void putDouble(java.lang.String, double)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        double value;
        android.util.ArrayMap $r0;
        java.lang.Double $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: double;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(value);

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $r1);

        return;
    }

    public void putString(java.lang.String, java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key, value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putCharSequence(java.lang.String, java.lang.CharSequence)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.CharSequence value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.CharSequence;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putIntegerArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.util.ArrayList value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.util.ArrayList;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putStringArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.util.ArrayList value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.util.ArrayList;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putCharSequenceArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.util.ArrayList value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.util.ArrayList;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putSerializable(java.lang.String, java.io.Serializable)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.io.Serializable value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.io.Serializable;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public void putBooleanArray(java.lang.String, boolean[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        boolean[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: boolean[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putByteArray(java.lang.String, byte[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        byte[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: byte[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putShortArray(java.lang.String, short[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        short[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: short[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putCharArray(java.lang.String, char[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        char[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: char[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public void putIntArray(java.lang.String, int[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        int[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: int[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public void putLongArray(java.lang.String, long[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        long[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: long[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putFloatArray(java.lang.String, float[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        float[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: float[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public void putDoubleArray(java.lang.String, double[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        double[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: double[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public void putStringArray(java.lang.String, java.lang.String[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.String[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    void putCharSequenceArray(java.lang.String, java.lang.CharSequence[])
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.CharSequence[] value;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.CharSequence[];

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public boolean getBoolean(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        boolean $z0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $z0 = virtualinvoke this.<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>(key, 0);

        return $z0;
    }

    void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.ClassCastException)
    {
        android.os.BaseBundle this;
        java.lang.String key, className, $r7, $r12;
        java.lang.Object value, defaultValue;
        java.lang.ClassCastException e;
        java.lang.StringBuilder sb, $r0;
        java.lang.Class $r6;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.Object;

        className := @parameter2: java.lang.String;

        defaultValue := @parameter3: java.lang.Object;

        e := @parameter4: java.lang.ClassCastException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        sb = $r0;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected ");

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but value was a ");

        $r6 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  The default value ");

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(defaultValue);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was returned.");

        $r12 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Bundle", $r12);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Bundle", "Attempt to cast generated internal exception:", e);

        return;
    }

    void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.ClassCastException)
    {
        android.os.BaseBundle this;
        java.lang.String key, className;
        java.lang.Object value;
        java.lang.ClassCastException e;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.Object;

        className := @parameter2: java.lang.String;

        e := @parameter3: java.lang.ClassCastException;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, value, className, "<null>", e);

        return;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        boolean defaultValue, $z0;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.Boolean $r1, $r3;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: boolean;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return defaultValue;

     label1:
        $r1 = (java.lang.Boolean) o;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Boolean", $r3, e);

        return defaultValue;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    byte getByte(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Byte $r0;
        byte $b0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = virtualinvoke this.<android.os.BaseBundle: java.lang.Byte getByte(java.lang.String,byte)>(key, 0);

        $b0 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>();

        return $b0;
    }

    java.lang.Byte getByte(java.lang.String, byte)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        byte defaultValue;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        java.lang.Byte $r1, $r2, $r4, $r5;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: byte;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(defaultValue);

        return $r2;

     label1:
        $r1 = (java.lang.Byte) o;

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Byte", $r4, e);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(defaultValue);

        return $r5;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    char getChar(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        char $c0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $c0 = virtualinvoke this.<android.os.BaseBundle: char getChar(java.lang.String,char)>(key, 0);

        return $c0;
    }

    char getChar(java.lang.String, char)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        char defaultValue, $c0;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.Character $r1, $r3;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: char;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return defaultValue;

     label1:
        $r1 = (java.lang.Character) o;

        $c0 = virtualinvoke $r1.<java.lang.Character: char charValue()>();

     label2:
        return $c0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Character", $r3, e);

        return defaultValue;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    short getShort(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        short $s0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $s0 = virtualinvoke this.<android.os.BaseBundle: short getShort(java.lang.String,short)>(key, 0);

        return $s0;
    }

    short getShort(java.lang.String, short)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        short defaultValue, $s0;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.Short $r1, $r3;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: short;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return defaultValue;

     label1:
        $r1 = (java.lang.Short) o;

        $s0 = virtualinvoke $r1.<java.lang.Short: short shortValue()>();

     label2:
        return $s0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Short", $r3, e);

        return defaultValue;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int getInt(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        int $i0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $i0 = virtualinvoke this.<android.os.BaseBundle: int getInt(java.lang.String,int)>(key, 0);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        int defaultValue, $i0;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.Integer $r1, $r3;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: int;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return defaultValue;

     label1:
        $r1 = (java.lang.Integer) o;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Integer", $r3, e);

        return defaultValue;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long getLong(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        long $l0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $l0 = virtualinvoke this.<android.os.BaseBundle: long getLong(java.lang.String,long)>(key, 0L);

        return $l0;
    }

    public long getLong(java.lang.String, long)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        long defaultValue, $l0;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.Long $r1, $r3;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: long;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return defaultValue;

     label1:
        $r1 = (java.lang.Long) o;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Long", $r3, e);

        return defaultValue;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    float getFloat(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        float $f0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $f0 = virtualinvoke this.<android.os.BaseBundle: float getFloat(java.lang.String,float)>(key, 0.0F);

        return $f0;
    }

    float getFloat(java.lang.String, float)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        float defaultValue, $f0;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.Float $r1, $r3;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: float;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return defaultValue;

     label1:
        $r1 = (java.lang.Float) o;

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

     label2:
        return $f0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Float", $r3, e);

        return defaultValue;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public double getDouble(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        double $d0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $d0 = virtualinvoke this.<android.os.BaseBundle: double getDouble(java.lang.String,double)>(key, 0.0);

        return $d0;
    }

    public double getDouble(java.lang.String, double)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        double defaultValue, $d0;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.Double $r1, $r3;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: double;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return defaultValue;

     label1:
        $r1 = (java.lang.Double) o;

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(defaultValue);

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(key, o, "Double", $r3, e);

        return defaultValue;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getString(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key, $r1;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

     label1:
        $r1 = (java.lang.String) o;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "String", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key, defaultValue, s, $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: java.lang.String;

        s = virtualinvoke this.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>(key);

        if s != null goto label1;

        $r0 = defaultValue;

        goto label2;

     label1:
        $r0 = s;

     label2:
        return $r0;
    }

    java.lang.CharSequence getCharSequence(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.lang.CharSequence $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

     label1:
        $r1 = (java.lang.CharSequence) o;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "CharSequence", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.lang.CharSequence getCharSequence(java.lang.String, java.lang.CharSequence)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.CharSequence defaultValue, cs, $r0;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        defaultValue := @parameter1: java.lang.CharSequence;

        cs = virtualinvoke this.<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String)>(key);

        if cs != null goto label1;

        $r0 = defaultValue;

        goto label2;

     label1:
        $r0 = cs;

     label2:
        return $r0;
    }

    java.io.Serializable getSerializable(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.io.Serializable $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (java.io.Serializable) o;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "Serializable", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getIntegerArrayList(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.util.ArrayList $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (java.util.ArrayList) o;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "ArrayList<Integer>", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getStringArrayList(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.util.ArrayList $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (java.util.ArrayList) o;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "ArrayList<String>", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getCharSequenceArrayList(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;
        java.util.ArrayList $r1;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (java.util.ArrayList) o;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "ArrayList<CharSequence>", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean[] getBooleanArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        boolean[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (boolean[]) o;

        $r2 = (boolean[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "byte[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    byte[] getByteArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        byte[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (byte[]) o;

        $r2 = (byte[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "byte[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    short[] getShortArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        short[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (short[]) o;

        $r2 = (short[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "short[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    char[] getCharArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        char[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (char[]) o;

        $r2 = (char[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "char[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int[] getIntArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        int[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (int[]) o;

        $r2 = (int[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "int[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long[] getLongArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        long[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (long[]) o;

        $r2 = (long[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "long[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    float[] getFloatArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        float[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (float[]) o;

        $r2 = (float[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "float[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        double[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (double[]) o;

        $r2 = (double[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "double[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        java.lang.String[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (java.lang.String[]) o;

        $r2 = (java.lang.String[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "String[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.lang.CharSequence[] getCharSequenceArray(java.lang.String)
    {
        android.os.BaseBundle this;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r3;
        android.util.ArrayMap $r0;
        java.lang.CharSequence[] $r1, $r2;

        this := @this: android.os.BaseBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.BaseBundle: void unparcel()>();

        $r0 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (java.lang.CharSequence[]) o;

        $r2 = (java.lang.CharSequence[]) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        virtualinvoke this.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "CharSequence[]", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    void writeToParcelInner(android.os.Parcel, int)
    {
        android.os.BaseBundle this;
        android.os.Parcel parcel, $r0, $r4, $r5, $r6, $r7;
        int flags, startPos, endPos, length, $i0, length#1, length#2;
        android.util.ArrayMap $r1, $r2, $r3;

        this := @this: android.os.BaseBundle;

        parcel := @parameter0: android.os.Parcel;

        flags := @parameter1: int;

        $r0 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r0 == null goto label2;

        $r6 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r4 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r6 != $r4 goto label1;

        virtualinvoke parcel.<android.os.Parcel: void writeInt(int)>(0);

        goto label5;

     label1:
        $r5 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        length#1 = virtualinvoke $r5.<android.os.Parcel: int dataSize()>();

        virtualinvoke parcel.<android.os.Parcel: void writeInt(int)>(length#1);

        virtualinvoke parcel.<android.os.Parcel: void writeInt(int)>(1279544898);

        $r7 = this.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke parcel.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r7, 0, length#1);

        goto label5;

     label2:
        $r1 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r1 == null goto label3;

        $r2 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        if $i0 > 0 goto label4;

     label3:
        virtualinvoke parcel.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label4:
        length#2 = virtualinvoke parcel.<android.os.Parcel: int dataPosition()>();

        virtualinvoke parcel.<android.os.Parcel: void writeInt(int)>(-1);

        virtualinvoke parcel.<android.os.Parcel: void writeInt(int)>(1279544898);

        startPos = virtualinvoke parcel.<android.os.Parcel: int dataPosition()>();

        $r3 = this.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke parcel.<android.os.Parcel: void writeArrayMapInternal(android.util.ArrayMap)>($r3);

        endPos = virtualinvoke parcel.<android.os.Parcel: int dataPosition()>();

        virtualinvoke parcel.<android.os.Parcel: void setDataPosition(int)>(length#2);

        length = endPos - startPos;

        virtualinvoke parcel.<android.os.Parcel: void writeInt(int)>(length);

        virtualinvoke parcel.<android.os.Parcel: void setDataPosition(int)>(endPos);

     label5:
        return;
    }

    void readFromParcelInner(android.os.Parcel)
    {
        android.os.BaseBundle this;
        android.os.Parcel parcel;
        int length;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        this := @this: android.os.BaseBundle;

        parcel := @parameter0: android.os.Parcel;

        length = virtualinvoke parcel.<android.os.Parcel: int readInt()>();

        if length >= 0 goto label1;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad length in parcel: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(length);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        specialinvoke this.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel,int)>(parcel, length);

        return;
    }

    private void readFromParcelInner(android.os.Parcel, int)
    {
        android.os.BaseBundle this;
        android.os.Parcel parcel, p, $r6;
        int length, magic, offset, $i0;
        java.lang.IllegalStateException $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        this := @this: android.os.BaseBundle;

        parcel := @parameter0: android.os.Parcel;

        length := @parameter1: int;

        if length != 0 goto label1;

        $r6 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r6;

        return;

     label1:
        magic = virtualinvoke parcel.<android.os.Parcel: int readInt()>();

        if magic == 1279544898 goto label2;

        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad magic number for Bundle: 0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(magic);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label2:
        offset = virtualinvoke parcel.<android.os.Parcel: int dataPosition()>();

        $i0 = offset + length;

        virtualinvoke parcel.<android.os.Parcel: void setDataPosition(int)>($i0);

        p = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke p.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke p.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>(parcel, offset, length);

        virtualinvoke p.<android.os.Parcel: void setDataPosition(int)>(0);

        this.<android.os.BaseBundle: android.os.Parcel mParcelledData> = p;

        return;
    }

    static void <clinit>()
    {
        android.os.Parcel $r0;

        <android.os.BaseBundle: int BUNDLE_MAGIC> = 1279544898;

        <android.os.BaseBundle: boolean DEBUG> = 0;

        <android.os.BaseBundle: java.lang.String TAG> = "Bundle";

        $r0 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL> = $r0;

        return;
    }
}
