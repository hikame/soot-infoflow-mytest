public final class android.os.MessageQueue extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private final boolean mQuitAllowed;
    private long mPtr;
    android.os.Message mMessages;
    private final java.util.ArrayList mIdleHandlers;
    private android.util.SparseArray mFileDescriptorRecords;
    private android.os.MessageQueue$IdleHandler[] mPendingIdleHandlers;
    private boolean mQuitting;
    private boolean mBlocked;
    private int mNextBarrierToken;

    private static native long nativeInit();

    private static native void nativeDestroy(long);

    private native void nativePollOnce(long, int);

    private static native void nativeWake(long);

    private static native boolean nativeIsPolling(long);

    private static native void nativeSetFileDescriptorEvents(long, int, int);

    void <init>(boolean)
    {
        android.os.MessageQueue this;
        boolean quitAllowed;
        java.util.ArrayList $r0;
        long $l0;

        this := @this: android.os.MessageQueue;

        quitAllowed := @parameter0: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<android.os.MessageQueue: java.util.ArrayList mIdleHandlers> = $r0;

        this.<android.os.MessageQueue: boolean mQuitAllowed> = quitAllowed;

        $l0 = staticinvoke <android.os.MessageQueue: long nativeInit()>();

        this.<android.os.MessageQueue: long mPtr> = $l0;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.MessageQueue this;
        java.lang.Throwable l1, $r0;

        this := @this: android.os.MessageQueue;

     label1:
        specialinvoke this.<android.os.MessageQueue: void dispose()>();

     label2:
        specialinvoke this.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r0 := @caughtexception;

        l1 = $r0;

     label4:
        specialinvoke this.<java.lang.Object: void finalize()>();

        throw l1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void dispose()
    {
        android.os.MessageQueue this;
        long $l0, $l2;
        byte $b1;

        this := @this: android.os.MessageQueue;

        $l0 = this.<android.os.MessageQueue: long mPtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = this.<android.os.MessageQueue: long mPtr>;

        staticinvoke <android.os.MessageQueue: void nativeDestroy(long)>($l2);

        this.<android.os.MessageQueue: long mPtr> = 0L;

     label1:
        return;
    }

    public boolean isIdle()
    {
        android.os.MessageQueue this, l1;
        long now, $l0;
        java.lang.Throwable l4, $r3;
        android.os.Message $r1, $r2;
        byte $b1;
        boolean $z0;

        this := @this: android.os.MessageQueue;

        l1 = this;

        entermonitor this;

     label1:
        now = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        if $r1 == null goto label2;

        $r2 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        $l0 = $r2.<android.os.Message: long when>;

        $b1 = now cmp $l0;

        if $b1 >= 0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        exitmonitor l1;

     label5:
        return $z0;

     label6:
        $r3 := @caughtexception;

        l4 = $r3;

        exitmonitor l1;

     label7:
        throw l4;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void addIdleHandler(android.os.MessageQueue$IdleHandler)
    {
        android.os.MessageQueue this, l2;
        android.os.MessageQueue$IdleHandler handler;
        java.lang.Throwable l3, $r3;
        java.util.ArrayList $r1;
        java.lang.NullPointerException $r2;

        this := @this: android.os.MessageQueue;

        handler := @parameter0: android.os.MessageQueue$IdleHandler;

        if handler != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can\'t add a null IdleHandler");

        throw $r2;

     label1:
        l2 = this;

        entermonitor this;

     label2:
        $r1 = this.<android.os.MessageQueue: java.util.ArrayList mIdleHandlers>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(handler);

        exitmonitor l2;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        l3 = $r3;

        exitmonitor l2;

     label5:
        throw l3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void removeIdleHandler(android.os.MessageQueue$IdleHandler)
    {
        android.os.MessageQueue this, l2;
        android.os.MessageQueue$IdleHandler handler;
        java.lang.Throwable l3, $r2;
        java.util.ArrayList $r1;

        this := @this: android.os.MessageQueue;

        handler := @parameter0: android.os.MessageQueue$IdleHandler;

        l2 = this;

        entermonitor this;

     label1:
        $r1 = this.<android.os.MessageQueue: java.util.ArrayList mIdleHandlers>;

        virtualinvoke $r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(handler);

        exitmonitor l2;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        l3 = $r2;

        exitmonitor l2;

     label4:
        throw l3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isPolling()
    {
        android.os.MessageQueue this, l1;
        java.lang.Throwable l2, $r1;
        boolean $z0;

        this := @this: android.os.MessageQueue;

        l1 = this;

        entermonitor this;

     label1:
        $z0 = specialinvoke this.<android.os.MessageQueue: boolean isPollingLocked()>();

        exitmonitor l1;

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

        l2 = $r1;

        exitmonitor l1;

     label4:
        throw l2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean isPollingLocked()
    {
        android.os.MessageQueue this;
        boolean $z0, $z1, $z2;
        long $l0;

        this := @this: android.os.MessageQueue;

        $z0 = this.<android.os.MessageQueue: boolean mQuitting>;

        if $z0 != 0 goto label1;

        $l0 = this.<android.os.MessageQueue: long mPtr>;

        $z1 = staticinvoke <android.os.MessageQueue: boolean nativeIsPolling(long)>($l0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void addOnFileDescriptorEventListener(java.io.FileDescriptor, int, android.os.MessageQueue$OnFileDescriptorEventListener)
    {
        android.os.MessageQueue this, l4;
        java.io.FileDescriptor fd;
        int events;
        android.os.MessageQueue$OnFileDescriptorEventListener listener;
        java.lang.Throwable l5, $r3;
        java.lang.IllegalArgumentException $r1, $r2;

        this := @this: android.os.MessageQueue;

        fd := @parameter0: java.io.FileDescriptor;

        events := @parameter1: int;

        listener := @parameter2: android.os.MessageQueue$OnFileDescriptorEventListener;

        if fd != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fd must not be null");

        throw $r2;

     label1:
        if listener != null goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener must not be null");

        throw $r1;

     label2:
        l4 = this;

        entermonitor this;

     label3:
        specialinvoke this.<android.os.MessageQueue: void updateOnFileDescriptorEventListenerLocked(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)>(fd, events, listener);

        exitmonitor l4;

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;

        l5 = $r3;

        exitmonitor l4;

     label6:
        throw l5;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void removeOnFileDescriptorEventListener(java.io.FileDescriptor)
    {
        android.os.MessageQueue this, l2;
        java.io.FileDescriptor fd;
        java.lang.Throwable l3, $r2;
        java.lang.IllegalArgumentException $r1;

        this := @this: android.os.MessageQueue;

        fd := @parameter0: java.io.FileDescriptor;

        if fd != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fd must not be null");

        throw $r1;

     label1:
        l2 = this;

        entermonitor this;

     label2:
        specialinvoke this.<android.os.MessageQueue: void updateOnFileDescriptorEventListenerLocked(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)>(fd, 0, null);

        exitmonitor l2;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        l3 = $r2;

        exitmonitor l2;

     label5:
        throw l3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void updateOnFileDescriptorEventListenerLocked(java.io.FileDescriptor, int, android.os.MessageQueue$OnFileDescriptorEventListener)
    {
        android.os.MessageQueue this;
        java.io.FileDescriptor fd;
        android.os.MessageQueue$OnFileDescriptorEventListener listener;
        int fdNum, $i0, $i1, $i3, events#1, index#2, events#4;
        android.util.SparseArray $r0, $r1, $r2, $r4, $r5, $r6, $r7;
        long $l2;
        android.os.MessageQueue$FileDescriptorRecord $r3, record#3, record#5;
        java.lang.Object $r8;

        this := @this: android.os.MessageQueue;

        fd := @parameter0: java.io.FileDescriptor;

        events#1 := @parameter1: int;

        listener := @parameter2: android.os.MessageQueue$OnFileDescriptorEventListener;

        fdNum = virtualinvoke fd.<java.io.FileDescriptor: int getInt$()>();

        index#2 = -1;

        record#3 = null;

        $r0 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        if $r0 == null goto label1;

        $r5 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        index#2 = virtualinvoke $r5.<android.util.SparseArray: int indexOfKey(int)>(fdNum);

        if index#2 < 0 goto label1;

        $r7 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(index#2);

        record#3 = (android.os.MessageQueue$FileDescriptorRecord) $r8;

        if record#3 == null goto label1;

        $i3 = record#3.<android.os.MessageQueue$FileDescriptorRecord: int mEvents>;

        if $i3 != events#1 goto label1;

        return;

     label1:
        if events#1 == 0 goto label5;

        events#4 = events#1 | 4;

        if record#3 != null goto label3;

        $r2 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        if $r2 != null goto label2;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords> = $r6;

     label2:
        $r3 = new android.os.MessageQueue$FileDescriptorRecord;

        specialinvoke $r3.<android.os.MessageQueue$FileDescriptorRecord: void <init>(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)>(fd, events#4, listener);

        record#5 = $r3;

        $r4 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(fdNum, record#5);

        goto label4;

     label3:
        record#3.<android.os.MessageQueue$FileDescriptorRecord: android.os.MessageQueue$OnFileDescriptorEventListener mListener> = listener;

        record#3.<android.os.MessageQueue$FileDescriptorRecord: int mEvents> = events#4;

        $i0 = record#3.<android.os.MessageQueue$FileDescriptorRecord: int mSeq>;

        $i1 = $i0 + 1;

        record#3.<android.os.MessageQueue$FileDescriptorRecord: int mSeq> = $i1;

     label4:
        $l2 = this.<android.os.MessageQueue: long mPtr>;

        staticinvoke <android.os.MessageQueue: void nativeSetFileDescriptorEvents(long,int,int)>($l2, fdNum, events#4);

        goto label6;

     label5:
        if record#3 == null goto label6;

        record#3.<android.os.MessageQueue$FileDescriptorRecord: int mEvents> = 0;

        $r1 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        virtualinvoke $r1.<android.util.SparseArray: void removeAt(int)>(index#2);

     label6:
        return;
    }

    private int dispatchEvents(int, int)
    {
        android.os.MessageQueue this, newWatchedEvents#2, l8#6;
        int fd, oldWatchedEvents, seq, index, $i0, events#1, events#3, newWatchedEvents#5;
        android.os.MessageQueue$FileDescriptorRecord record;
        android.os.MessageQueue$OnFileDescriptorEventListener listener;
        java.lang.Throwable l10, $r9, $r10, l8#4;
        android.util.SparseArray $r1, $r5, $r6, $r8;
        java.lang.Object $r2, $r7;
        java.io.FileDescriptor $r3;

        this := @this: android.os.MessageQueue;

        fd := @parameter0: int;

        events#1 := @parameter1: int;

        newWatchedEvents#2 = this;

        entermonitor this;

     label01:
        $r1 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(fd);

        record = (android.os.MessageQueue$FileDescriptorRecord) $r2;

        if record != null goto label03;

        exitmonitor newWatchedEvents#2;

     label02:
        return 0;

     label03:
        oldWatchedEvents = record.<android.os.MessageQueue$FileDescriptorRecord: int mEvents>;

        events#3 = events#1 & oldWatchedEvents;

        if events#3 != 0 goto label05;

        exitmonitor newWatchedEvents#2;

     label04:
        return oldWatchedEvents;

     label05:
        listener = record.<android.os.MessageQueue$FileDescriptorRecord: android.os.MessageQueue$OnFileDescriptorEventListener mListener>;

        seq = record.<android.os.MessageQueue$FileDescriptorRecord: int mSeq>;

        exitmonitor newWatchedEvents#2;

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

        l8#4 = $r9;

        exitmonitor newWatchedEvents#2;

     label08:
        throw l8#4;

     label09:
        $r3 = record.<android.os.MessageQueue$FileDescriptorRecord: java.io.FileDescriptor mDescriptor>;

        newWatchedEvents#5 = interfaceinvoke listener.<android.os.MessageQueue$OnFileDescriptorEventListener: int onFileDescriptorEvents(java.io.FileDescriptor,int)>($r3, events#3);

        if newWatchedEvents#5 == 0 goto label10;

        newWatchedEvents#5 = newWatchedEvents#5 | 4;

     label10:
        if newWatchedEvents#5 == oldWatchedEvents goto label16;

        l8#6 = this;

        entermonitor this;

     label11:
        $r5 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        index = virtualinvoke $r5.<android.util.SparseArray: int indexOfKey(int)>(fd);

        if index < 0 goto label12;

        $r6 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(index);

        if $r7 != record goto label12;

        $i0 = record.<android.os.MessageQueue$FileDescriptorRecord: int mSeq>;

        if $i0 != seq goto label12;

        record.<android.os.MessageQueue$FileDescriptorRecord: int mEvents> = newWatchedEvents#5;

        if newWatchedEvents#5 != 0 goto label12;

        $r8 = this.<android.os.MessageQueue: android.util.SparseArray mFileDescriptorRecords>;

        virtualinvoke $r8.<android.util.SparseArray: void removeAt(int)>(index);

     label12:
        exitmonitor l8#6;

     label13:
        goto label16;

     label14:
        $r10 := @caughtexception;

        l10 = $r10;

        exitmonitor l8#6;

     label15:
        throw l10;

     label16:
        return newWatchedEvents#5;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    android.os.Message next()
    {
        android.os.MessageQueue this, i#3, prevMsg#11;
        long ptr, $l2, $l3, $l6, $l7, $l8, now#4;
        java.lang.Throwable l10, l11, $r17, $r18, $r19, prevMsg#10;
        byte $b0, $b4, $b5;
        boolean $z0, $z2, keep#9;
        android.os.MessageQueue$IdleHandler[] $r1, $r2, $r5, $r6, $r7, $r10;
        java.lang.Object[] $r3;
        java.util.ArrayList $r4, $r9, $r13;
        int $i1, pendingIdleHandlerCount#1, nextPollTimeoutMillis#2, i#7;
        android.os.Message $r11, $r12, $r14, $r15, prevMsg#5, msg#6;
        android.os.Handler $r16;
        android.os.MessageQueue$IdleHandler now#8;

        this := @this: android.os.MessageQueue;

        ptr = this.<android.os.MessageQueue: long mPtr>;

        $b0 = ptr cmp 0L;

        if $b0 != 0 goto label01;

        return null;

     label01:
        pendingIdleHandlerCount#1 = -1;

        nextPollTimeoutMillis#2 = 0;

     label02:
        if nextPollTimeoutMillis#2 == 0 goto label03;

        staticinvoke <android.os.Binder: void flushPendingCommands()>();

     label03:
        specialinvoke this.<android.os.MessageQueue: void nativePollOnce(long,int)>(ptr, nextPollTimeoutMillis#2);

        i#3 = this;

        entermonitor this;

     label04:
        now#4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        prevMsg#5 = null;

        msg#6 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        if msg#6 == null goto label06;

        $r16 = msg#6.<android.os.Message: android.os.Handler target>;

        if $r16 != null goto label06;

     label05:
        prevMsg#5 = msg#6;

        msg#6 = msg#6.<android.os.Message: android.os.Message next>;

        if msg#6 == null goto label06;

        $z2 = virtualinvoke msg#6.<android.os.Message: boolean isAsynchronous()>();

        if $z2 == 0 goto label05;

     label06:
        if msg#6 == null goto label11;

        $l2 = msg#6.<android.os.Message: long when>;

        $b5 = now#4 cmp $l2;

        if $b5 >= 0 goto label07;

        $l7 = msg#6.<android.os.Message: long when>;

        $l8 = $l7 - now#4;

        $l6 = staticinvoke <java.lang.Math: long min(long,long)>($l8, 2147483647L);

        nextPollTimeoutMillis#2 = (int) $l6;

        goto label12;

     label07:
        this.<android.os.MessageQueue: boolean mBlocked> = 0;

        if prevMsg#5 == null goto label08;

        $r14 = msg#6.<android.os.Message: android.os.Message next>;

        prevMsg#5.<android.os.Message: android.os.Message next> = $r14;

        goto label09;

     label08:
        $r15 = msg#6.<android.os.Message: android.os.Message next>;

        this.<android.os.MessageQueue: android.os.Message mMessages> = $r15;

     label09:
        msg#6.<android.os.Message: android.os.Message next> = null;

        virtualinvoke msg#6.<android.os.Message: void markInUse()>();

        exitmonitor i#3;

     label10:
        return msg#6;

     label11:
        nextPollTimeoutMillis#2 = -1;

     label12:
        $z0 = this.<android.os.MessageQueue: boolean mQuitting>;

        if $z0 == 0 goto label14;

        specialinvoke this.<android.os.MessageQueue: void dispose()>();

        exitmonitor i#3;

     label13:
        return null;

     label14:
        if pendingIdleHandlerCount#1 >= 0 goto label16;

        $r12 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        if $r12 == null goto label15;

        $r11 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        $l3 = $r11.<android.os.Message: long when>;

        $b4 = now#4 cmp $l3;

        if $b4 >= 0 goto label16;

     label15:
        $r13 = this.<android.os.MessageQueue: java.util.ArrayList mIdleHandlers>;

        pendingIdleHandlerCount#1 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

     label16:
        if pendingIdleHandlerCount#1 > 0 goto label18;

        this.<android.os.MessageQueue: boolean mBlocked> = 1;

        exitmonitor i#3;

     label17:
        goto label02;

     label18:
        $r2 = this.<android.os.MessageQueue: android.os.MessageQueue$IdleHandler[] mPendingIdleHandlers>;

        if $r2 != null goto label19;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(pendingIdleHandlerCount#1, 4);

        $r10 = newarray (android.os.MessageQueue$IdleHandler)[$i1];

        this.<android.os.MessageQueue: android.os.MessageQueue$IdleHandler[] mPendingIdleHandlers> = $r10;

     label19:
        $r4 = this.<android.os.MessageQueue: java.util.ArrayList mIdleHandlers>;

        $r1 = this.<android.os.MessageQueue: android.os.MessageQueue$IdleHandler[] mPendingIdleHandlers>;

        $r3 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r5 = (android.os.MessageQueue$IdleHandler[]) $r3;

        this.<android.os.MessageQueue: android.os.MessageQueue$IdleHandler[] mPendingIdleHandlers> = $r5;

        exitmonitor i#3;

     label20:
        goto label23;

     label21:
        $r18 := @caughtexception;

        l10 = $r18;

        exitmonitor i#3;

     label22:
        throw l10;

     label23:
        i#7 = 0;

     label24:
        if i#7 >= pendingIdleHandlerCount#1 goto label34;

        $r7 = this.<android.os.MessageQueue: android.os.MessageQueue$IdleHandler[] mPendingIdleHandlers>;

        now#8 = $r7[i#7];

        $r6 = this.<android.os.MessageQueue: android.os.MessageQueue$IdleHandler[] mPendingIdleHandlers>;

        $r6[i#7] = null;

        keep#9 = 0;

     label25:
        keep#9 = interfaceinvoke now#8.<android.os.MessageQueue$IdleHandler: boolean queueIdle()>();

     label26:
        goto label28;

     label27:
        $r17 := @caughtexception;

        prevMsg#10 = $r17;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("MessageQueue", "IdleHandler threw exception", prevMsg#10);

     label28:
        if keep#9 != 0 goto label33;

        prevMsg#11 = this;

        entermonitor this;

     label29:
        $r9 = this.<android.os.MessageQueue: java.util.ArrayList mIdleHandlers>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(now#8);

        exitmonitor prevMsg#11;

     label30:
        goto label33;

     label31:
        $r19 := @caughtexception;

        l11 = $r19;

        exitmonitor prevMsg#11;

     label32:
        throw l11;

     label33:
        i#7 = i#7 + 1;

        goto label24;

     label34:
        pendingIdleHandlerCount#1 = 0;

        nextPollTimeoutMillis#2 = 0;

        goto label02;

        catch java.lang.Throwable from label04 to label10 with label21;
        catch java.lang.Throwable from label11 to label13 with label21;
        catch java.lang.Throwable from label14 to label17 with label21;
        catch java.lang.Throwable from label18 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
    }

    void quit(boolean)
    {
        android.os.MessageQueue this, l2;
        boolean safe, $z0, $z1;
        java.lang.Throwable l3, $r2;
        long $l0;
        java.lang.IllegalStateException $r1;

        this := @this: android.os.MessageQueue;

        safe := @parameter0: boolean;

        $z0 = this.<android.os.MessageQueue: boolean mQuitAllowed>;

        if $z0 != 0 goto label01;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Main thread not allowed to quit.");

        throw $r1;

     label01:
        l2 = this;

        entermonitor this;

     label02:
        $z1 = this.<android.os.MessageQueue: boolean mQuitting>;

        if $z1 == 0 goto label04;

        exitmonitor l2;

     label03:
        return;

     label04:
        this.<android.os.MessageQueue: boolean mQuitting> = 1;

        if safe == 0 goto label05;

        specialinvoke this.<android.os.MessageQueue: void removeAllFutureMessagesLocked()>();

        goto label06;

     label05:
        specialinvoke this.<android.os.MessageQueue: void removeAllMessagesLocked()>();

     label06:
        $l0 = this.<android.os.MessageQueue: long mPtr>;

        staticinvoke <android.os.MessageQueue: void nativeWake(long)>($l0);

        exitmonitor l2;

     label07:
        goto label10;

     label08:
        $r2 := @caughtexception;

        l3 = $r2;

        exitmonitor l2;

     label09:
        throw l3;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public int postSyncBarrier()
    {
        android.os.MessageQueue this;
        long $l0;
        int $i1;

        this := @this: android.os.MessageQueue;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = specialinvoke this.<android.os.MessageQueue: int postSyncBarrier(long)>($l0);

        return $i1;
    }

    private int postSyncBarrier(long)
    {
        android.os.MessageQueue this, l3;
        long when, $l3;
        int token, $i0, $i1;
        android.os.Message msg, prev#1, p#2;
        java.lang.Throwable l8, $r1;
        byte $b2, $b4;

        this := @this: android.os.MessageQueue;

        when := @parameter0: long;

        l3 = this;

        entermonitor this;

     label1:
        $i0 = this.<android.os.MessageQueue: int mNextBarrierToken>;

        $i1 = $i0 + 1;

        this.<android.os.MessageQueue: int mNextBarrierToken> = $i1;

        token = $i0;

        msg = staticinvoke <android.os.Message: android.os.Message obtain()>();

        virtualinvoke msg.<android.os.Message: void markInUse()>();

        msg.<android.os.Message: long when> = when;

        msg.<android.os.Message: int arg1> = token;

        prev#1 = null;

        p#2 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        $b2 = when cmp 0L;

        if $b2 == 0 goto label3;

     label2:
        if p#2 == null goto label3;

        $l3 = p#2.<android.os.Message: long when>;

        $b4 = $l3 cmp when;

        if $b4 > 0 goto label3;

        prev#1 = p#2;

        p#2 = p#2.<android.os.Message: android.os.Message next>;

        goto label2;

     label3:
        if prev#1 == null goto label4;

        msg.<android.os.Message: android.os.Message next> = p#2;

        prev#1.<android.os.Message: android.os.Message next> = msg;

        goto label5;

     label4:
        msg.<android.os.Message: android.os.Message next> = p#2;

        this.<android.os.MessageQueue: android.os.Message mMessages> = msg;

     label5:
        exitmonitor l3;

     label6:
        return token;

     label7:
        $r1 := @caughtexception;

        l8 = $r1;

        exitmonitor l3;

     label8:
        throw l8;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void removeSyncBarrier(int)
    {
        android.os.MessageQueue this, l2;
        int token, $i1;
        java.lang.Throwable l6, $r8;
        android.os.Message $r1, $r2, $r3, $r6, prev#1, p#2;
        boolean $z0, needWake#3, $z1;
        long $l0;
        android.os.Handler $r4, $r7;
        java.lang.IllegalStateException $r5;

        this := @this: android.os.MessageQueue;

        token := @parameter0: int;

        l2 = this;

        entermonitor this;

     label01:
        prev#1 = null;

        p#2 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label02:
        if p#2 == null goto label04;

        $r7 = p#2.<android.os.Message: android.os.Handler target>;

        if $r7 != null goto label03;

        $i1 = p#2.<android.os.Message: int arg1>;

        if $i1 == token goto label04;

     label03:
        prev#1 = p#2;

        p#2 = p#2.<android.os.Message: android.os.Message next>;

        goto label02;

     label04:
        if p#2 != null goto label05;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The specified message queue synchronization  barrier token has not been posted or has already been removed.");

        throw $r5;

     label05:
        if prev#1 == null goto label06;

        $r6 = p#2.<android.os.Message: android.os.Message next>;

        prev#1.<android.os.Message: android.os.Message next> = $r6;

        needWake#3 = 0;

        goto label10;

     label06:
        $r1 = p#2.<android.os.Message: android.os.Message next>;

        this.<android.os.MessageQueue: android.os.Message mMessages> = $r1;

        $r2 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        if $r2 == null goto label07;

        $r3 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        $r4 = $r3.<android.os.Message: android.os.Handler target>;

        if $r4 == null goto label08;

     label07:
        $z1 = 1;

        goto label09;

     label08:
        $z1 = 0;

     label09:
        needWake#3 = $z1;

     label10:
        virtualinvoke p#2.<android.os.Message: void recycleUnchecked()>();

        if needWake#3 == 0 goto label11;

        $z0 = this.<android.os.MessageQueue: boolean mQuitting>;

        if $z0 != 0 goto label11;

        $l0 = this.<android.os.MessageQueue: long mPtr>;

        staticinvoke <android.os.MessageQueue: void nativeWake(long)>($l0);

     label11:
        exitmonitor l2;

     label12:
        goto label15;

     label13:
        $r8 := @caughtexception;

        l6 = $r8;

        exitmonitor l2;

     label14:
        throw l6;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    boolean enqueueMessage(android.os.Message, long)
    {
        android.os.MessageQueue this, l4;
        android.os.Message msg, prev, e#2;
        long when, $l0, $l3, $l4;
        java.lang.Throwable l8, $r16;
        android.os.Handler $r0, $r2, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, needWake#3, $z5;
        byte $b1, $b2, $b5;
        java.lang.IllegalStateException $r3, $r9, e#1;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r13, $r14;
        java.lang.String $r8, $r10, $r12;
        java.lang.IllegalArgumentException $r15;

        this := @this: android.os.MessageQueue;

        msg := @parameter0: android.os.Message;

        when := @parameter1: long;

        $r0 = msg.<android.os.Message: android.os.Handler target>;

        if $r0 != null goto label01;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Message must have a target.");

        throw $r15;

     label01:
        $z0 = virtualinvoke msg.<android.os.Message: boolean isInUse()>();

        if $z0 == 0 goto label02;

        $r9 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(msg);

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" This message is already in use.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label02:
        l4 = this;

        entermonitor this;

     label03:
        $z1 = this.<android.os.MessageQueue: boolean mQuitting>;

        if $z1 == 0 goto label05;

        $r3 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = msg.<android.os.Message: android.os.Handler target>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sending message to a Handler on a dead thread");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        e#1 = $r3;

        $r10 = virtualinvoke e#1.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MessageQueue", $r10, e#1);

        virtualinvoke msg.<android.os.Message: void recycle()>();

        exitmonitor l4;

     label04:
        return 0;

     label05:
        virtualinvoke msg.<android.os.Message: void markInUse()>();

        msg.<android.os.Message: long when> = when;

        e#2 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        if e#2 == null goto label06;

        $b1 = when cmp 0L;

        if $b1 == 0 goto label06;

        $l3 = e#2.<android.os.Message: long when>;

        $b2 = when cmp $l3;

        if $b2 >= 0 goto label07;

     label06:
        msg.<android.os.Message: android.os.Message next> = e#2;

        this.<android.os.MessageQueue: android.os.Message mMessages> = msg;

        needWake#3 = this.<android.os.MessageQueue: boolean mBlocked>;

        goto label13;

     label07:
        $z2 = this.<android.os.MessageQueue: boolean mBlocked>;

        if $z2 == 0 goto label08;

        $r2 = e#2.<android.os.Message: android.os.Handler target>;

        if $r2 != null goto label08;

        $z4 = virtualinvoke msg.<android.os.Message: boolean isAsynchronous()>();

        if $z4 == 0 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        needWake#3 = $z5;

     label10:
        prev = e#2;

        e#2 = e#2.<android.os.Message: android.os.Message next>;

        if e#2 == null goto label12;

        $l4 = e#2.<android.os.Message: long when>;

        $b5 = when cmp $l4;

        if $b5 >= 0 goto label11;

        goto label12;

     label11:
        if needWake#3 == 0 goto label10;

        $z3 = virtualinvoke e#2.<android.os.Message: boolean isAsynchronous()>();

        if $z3 == 0 goto label10;

        needWake#3 = 0;

        goto label10;

     label12:
        msg.<android.os.Message: android.os.Message next> = e#2;

        prev.<android.os.Message: android.os.Message next> = msg;

     label13:
        if needWake#3 == 0 goto label14;

        $l0 = this.<android.os.MessageQueue: long mPtr>;

        staticinvoke <android.os.MessageQueue: void nativeWake(long)>($l0);

     label14:
        exitmonitor l4;

     label15:
        goto label18;

     label16:
        $r16 := @caughtexception;

        l8 = $r16;

        exitmonitor l4;

     label17:
        throw l8;

     label18:
        return 1;

        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    boolean hasMessages(android.os.Handler, int, java.lang.Object)
    {
        android.os.MessageQueue this, l4;
        android.os.Handler h, $r1;
        int what, $i0;
        java.lang.Object object, $r2;
        java.lang.Throwable l6, $r3;
        android.os.Message p#1;

        this := @this: android.os.MessageQueue;

        h := @parameter0: android.os.Handler;

        what := @parameter1: int;

        object := @parameter2: java.lang.Object;

        if h != null goto label1;

        return 0;

     label1:
        l4 = this;

        entermonitor this;

        p#1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label2:
        if p#1 == null goto label5;

        $r1 = p#1.<android.os.Message: android.os.Handler target>;

        if $r1 != h goto label4;

        $i0 = p#1.<android.os.Message: int what>;

        if $i0 != what goto label4;

        if object == null goto label3;

        $r2 = p#1.<android.os.Message: java.lang.Object obj>;

        if $r2 != object goto label4;

     label3:
        exitmonitor l4;

        return 1;

     label4:
        p#1 = p#1.<android.os.Message: android.os.Message next>;

        goto label2;

     label5:
        exitmonitor l4;

        return 0;
    }

    boolean hasMessages(android.os.Handler, java.lang.Runnable, java.lang.Object)
    {
        android.os.MessageQueue this, l4;
        android.os.Handler h, $r1;
        java.lang.Runnable r, $r2;
        java.lang.Object object, $r3;
        java.lang.Throwable l6, $r4;
        android.os.Message p#1;

        this := @this: android.os.MessageQueue;

        h := @parameter0: android.os.Handler;

        r := @parameter1: java.lang.Runnable;

        object := @parameter2: java.lang.Object;

        if h != null goto label1;

        return 0;

     label1:
        l4 = this;

        entermonitor this;

        p#1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label2:
        if p#1 == null goto label5;

        $r1 = p#1.<android.os.Message: android.os.Handler target>;

        if $r1 != h goto label4;

        $r2 = p#1.<android.os.Message: java.lang.Runnable callback>;

        if $r2 != r goto label4;

        if object == null goto label3;

        $r3 = p#1.<android.os.Message: java.lang.Object obj>;

        if $r3 != object goto label4;

     label3:
        exitmonitor l4;

        return 1;

     label4:
        p#1 = p#1.<android.os.Message: android.os.Message next>;

        goto label2;

     label5:
        exitmonitor l4;

        return 0;
    }

    void removeMessages(android.os.Handler, int, java.lang.Object)
    {
        android.os.MessageQueue this, l4;
        android.os.Handler h, $r1, $r3;
        int what, $i0, $i1;
        java.lang.Object object, $r2, $r5;
        android.os.Message nn, p#1, n#2, n#3;
        java.lang.Throwable l8, $r4;

        this := @this: android.os.MessageQueue;

        h := @parameter0: android.os.Handler;

        what := @parameter1: int;

        object := @parameter2: java.lang.Object;

        if h != null goto label01;

        return;

     label01:
        l4 = this;

        entermonitor this;

     label02:
        p#1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label03:
        if p#1 == null goto label05;

        $r3 = p#1.<android.os.Message: android.os.Handler target>;

        if $r3 != h goto label05;

        $i1 = p#1.<android.os.Message: int what>;

        if $i1 != what goto label05;

        if object == null goto label04;

        $r5 = p#1.<android.os.Message: java.lang.Object obj>;

        if $r5 != object goto label05;

     label04:
        n#2 = p#1.<android.os.Message: android.os.Message next>;

        this.<android.os.MessageQueue: android.os.Message mMessages> = n#2;

        virtualinvoke p#1.<android.os.Message: void recycleUnchecked()>();

        p#1 = n#2;

        goto label03;

     label05:
        if p#1 == null goto label08;

        n#3 = p#1.<android.os.Message: android.os.Message next>;

        if n#3 == null goto label07;

        $r1 = n#3.<android.os.Message: android.os.Handler target>;

        if $r1 != h goto label07;

        $i0 = n#3.<android.os.Message: int what>;

        if $i0 != what goto label07;

        if object == null goto label06;

        $r2 = n#3.<android.os.Message: java.lang.Object obj>;

        if $r2 != object goto label07;

     label06:
        nn = n#3.<android.os.Message: android.os.Message next>;

        virtualinvoke n#3.<android.os.Message: void recycleUnchecked()>();

        p#1.<android.os.Message: android.os.Message next> = nn;

        goto label05;

     label07:
        p#1 = n#3;

        goto label05;

     label08:
        exitmonitor l4;

     label09:
        goto label12;

     label10:
        $r4 := @caughtexception;

        l8 = $r4;

        exitmonitor l4;

     label11:
        throw l8;

     label12:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void removeMessages(android.os.Handler, java.lang.Runnable, java.lang.Object)
    {
        android.os.MessageQueue this, l4;
        android.os.Handler h, $r1, $r4;
        java.lang.Runnable r, $r2, $r5;
        java.lang.Object object, $r3, $r7;
        android.os.Message nn, p#1, n#2, n#3;
        java.lang.Throwable l8, $r6;

        this := @this: android.os.MessageQueue;

        h := @parameter0: android.os.Handler;

        r := @parameter1: java.lang.Runnable;

        object := @parameter2: java.lang.Object;

        if h == null goto label01;

        if r != null goto label02;

     label01:
        return;

     label02:
        l4 = this;

        entermonitor this;

     label03:
        p#1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label04:
        if p#1 == null goto label06;

        $r4 = p#1.<android.os.Message: android.os.Handler target>;

        if $r4 != h goto label06;

        $r5 = p#1.<android.os.Message: java.lang.Runnable callback>;

        if $r5 != r goto label06;

        if object == null goto label05;

        $r7 = p#1.<android.os.Message: java.lang.Object obj>;

        if $r7 != object goto label06;

     label05:
        n#2 = p#1.<android.os.Message: android.os.Message next>;

        this.<android.os.MessageQueue: android.os.Message mMessages> = n#2;

        virtualinvoke p#1.<android.os.Message: void recycleUnchecked()>();

        p#1 = n#2;

        goto label04;

     label06:
        if p#1 == null goto label09;

        n#3 = p#1.<android.os.Message: android.os.Message next>;

        if n#3 == null goto label08;

        $r1 = n#3.<android.os.Message: android.os.Handler target>;

        if $r1 != h goto label08;

        $r2 = n#3.<android.os.Message: java.lang.Runnable callback>;

        if $r2 != r goto label08;

        if object == null goto label07;

        $r3 = n#3.<android.os.Message: java.lang.Object obj>;

        if $r3 != object goto label08;

     label07:
        nn = n#3.<android.os.Message: android.os.Message next>;

        virtualinvoke n#3.<android.os.Message: void recycleUnchecked()>();

        p#1.<android.os.Message: android.os.Message next> = nn;

        goto label06;

     label08:
        p#1 = n#3;

        goto label06;

     label09:
        exitmonitor l4;

     label10:
        goto label13;

     label11:
        $r6 := @caughtexception;

        l8 = $r6;

        exitmonitor l4;

     label12:
        throw l8;

     label13:
        return;

        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    void removeCallbacksAndMessages(android.os.Handler, java.lang.Object)
    {
        android.os.MessageQueue this, l3;
        android.os.Handler h, $r1, $r3;
        java.lang.Object object, $r2, $r4;
        android.os.Message nn, p#1, n#2, n#3;
        java.lang.Throwable l7, $r5;

        this := @this: android.os.MessageQueue;

        h := @parameter0: android.os.Handler;

        object := @parameter1: java.lang.Object;

        if h != null goto label01;

        return;

     label01:
        l3 = this;

        entermonitor this;

     label02:
        p#1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label03:
        if p#1 == null goto label05;

        $r3 = p#1.<android.os.Message: android.os.Handler target>;

        if $r3 != h goto label05;

        if object == null goto label04;

        $r4 = p#1.<android.os.Message: java.lang.Object obj>;

        if $r4 != object goto label05;

     label04:
        n#2 = p#1.<android.os.Message: android.os.Message next>;

        this.<android.os.MessageQueue: android.os.Message mMessages> = n#2;

        virtualinvoke p#1.<android.os.Message: void recycleUnchecked()>();

        p#1 = n#2;

        goto label03;

     label05:
        if p#1 == null goto label08;

        n#3 = p#1.<android.os.Message: android.os.Message next>;

        if n#3 == null goto label07;

        $r1 = n#3.<android.os.Message: android.os.Handler target>;

        if $r1 != h goto label07;

        if object == null goto label06;

        $r2 = n#3.<android.os.Message: java.lang.Object obj>;

        if $r2 != object goto label07;

     label06:
        nn = n#3.<android.os.Message: android.os.Message next>;

        virtualinvoke n#3.<android.os.Message: void recycleUnchecked()>();

        p#1.<android.os.Message: android.os.Message next> = nn;

        goto label05;

     label07:
        p#1 = n#3;

        goto label05;

     label08:
        exitmonitor l3;

     label09:
        goto label12;

     label10:
        $r5 := @caughtexception;

        l7 = $r5;

        exitmonitor l3;

     label11:
        throw l7;

     label12:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void removeAllMessagesLocked()
    {
        android.os.MessageQueue this;
        android.os.Message n, p#1;

        this := @this: android.os.MessageQueue;

        p#1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label1:
        if p#1 == null goto label2;

        n = p#1.<android.os.Message: android.os.Message next>;

        virtualinvoke p#1.<android.os.Message: void recycleUnchecked()>();

        p#1 = n;

        goto label1;

     label2:
        this.<android.os.MessageQueue: android.os.Message mMessages> = null;

        return;
    }

    private void removeAllFutureMessagesLocked()
    {
        android.os.MessageQueue this;
        long now, $l0, $l2;
        byte $b1, $b3;
        android.os.Message p#1, n#2, p#3;

        this := @this: android.os.MessageQueue;

        now = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        p#1 = this.<android.os.MessageQueue: android.os.Message mMessages>;

        if p#1 == null goto label6;

        $l0 = p#1.<android.os.Message: long when>;

        $b1 = $l0 cmp now;

        if $b1 <= 0 goto label1;

        specialinvoke this.<android.os.MessageQueue: void removeAllMessagesLocked()>();

        goto label6;

     label1:
        n#2 = p#1.<android.os.Message: android.os.Message next>;

        if n#2 != null goto label2;

        return;

     label2:
        $l2 = n#2.<android.os.Message: long when>;

        $b3 = $l2 cmp now;

        if $b3 <= 0 goto label3;

        goto label4;

     label3:
        p#1 = n#2;

        goto label1;

     label4:
        p#1.<android.os.Message: android.os.Message next> = null;

     label5:
        p#3 = n#2;

        n#2 = p#3.<android.os.Message: android.os.Message next>;

        virtualinvoke p#3.<android.os.Message: void recycleUnchecked()>();

        if n#2 != null goto label5;

     label6:
        return;
    }

    void dump(android.util.Printer, java.lang.String)
    {
        android.os.MessageQueue this, l3;
        android.util.Printer pw;
        java.lang.String prefix, $r10, $r15, $r17;
        long now;
        java.lang.Throwable l8, $r19;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r18;
        boolean $z0, $z1;
        int n#1;
        android.os.Message msg#2;

        this := @this: android.os.MessageQueue;

        pw := @parameter0: android.util.Printer;

        prefix := @parameter1: java.lang.String;

        l3 = this;

        entermonitor this;

     label1:
        now = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        n#1 = 0;

        msg#2 = this.<android.os.MessageQueue: android.os.Message mMessages>;

     label2:
        if msg#2 == null goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(n#1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r15 = virtualinvoke msg#2.<android.os.Message: java.lang.String toString(long)>(now);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke pw.<android.util.Printer: void println(java.lang.String)>($r17);

        n#1 = n#1 + 1;

        msg#2 = msg#2.<android.os.Message: android.os.Message next>;

        goto label2;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Total messages: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(n#1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", polling=");

        $z0 = specialinvoke this.<android.os.MessageQueue: boolean isPollingLocked()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", quitting=");

        $z1 = this.<android.os.MessageQueue: boolean mQuitting>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke pw.<android.util.Printer: void println(java.lang.String)>($r10);

        exitmonitor l3;

     label4:
        goto label7;

     label5:
        $r19 := @caughtexception;

        l8 = $r19;

        exitmonitor l3;

     label6:
        throw l8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void <clinit>()
    {
        <android.os.MessageQueue: boolean DEBUG> = 0;

        <android.os.MessageQueue: java.lang.String TAG> = "MessageQueue";

        return;
    }
}
