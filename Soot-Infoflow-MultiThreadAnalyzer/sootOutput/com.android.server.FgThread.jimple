public final class com.android.server.FgThread extends com.android.server.ServiceThread
{
    private static com.android.server.FgThread sInstance;
    private static android.os.Handler sHandler;

    private void <init>()
    {
        com.android.server.FgThread this;

        this := @this: com.android.server.FgThread;

        specialinvoke this.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("android.fg", 0, 1);

        return;
    }

    private static void ensureThreadLocked()
    {
        com.android.server.FgThread $r0, $r1, $r2, $r4;
        android.os.Handler $r3;
        android.os.Looper $r5;

        $r0 = <com.android.server.FgThread: com.android.server.FgThread sInstance>;

        if $r0 != null goto label1;

        $r1 = new com.android.server.FgThread;

        specialinvoke $r1.<com.android.server.FgThread: void <init>()>();

        <com.android.server.FgThread: com.android.server.FgThread sInstance> = $r1;

        $r2 = <com.android.server.FgThread: com.android.server.FgThread sInstance>;

        virtualinvoke $r2.<com.android.server.FgThread: void start()>();

        $r3 = new android.os.Handler;

        $r4 = <com.android.server.FgThread: com.android.server.FgThread sInstance>;

        $r5 = virtualinvoke $r4.<com.android.server.FgThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        <com.android.server.FgThread: android.os.Handler sHandler> = $r3;

     label1:
        return;
    }

    public static com.android.server.FgThread get()
    {
        java.lang.Class l0;
        java.lang.Throwable l1, $r1;
        com.android.server.FgThread $r0;

        l0 = class "com/android/server/UiThread";

        entermonitor class "com/android/server/UiThread";

     label1:
        staticinvoke <com.android.server.FgThread: void ensureThreadLocked()>();

        $r0 = <com.android.server.FgThread: com.android.server.FgThread sInstance>;

        exitmonitor l0;

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        l1 = $r1;

        exitmonitor l0;

     label4:
        throw l1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.os.Handler getHandler()
    {
        java.lang.Class l0;
        java.lang.Throwable l1, $r1;
        android.os.Handler $r0;

        l0 = class "com/android/server/UiThread";

        entermonitor class "com/android/server/UiThread";

     label1:
        staticinvoke <com.android.server.FgThread: void ensureThreadLocked()>();

        $r0 = <com.android.server.FgThread: android.os.Handler sHandler>;

        exitmonitor l0;

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        l1 = $r1;

        exitmonitor l0;

     label4:
        throw l1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
