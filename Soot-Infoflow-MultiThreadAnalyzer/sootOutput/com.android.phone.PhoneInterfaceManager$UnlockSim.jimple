class com.android.phone.PhoneInterfaceManager$UnlockSim extends java.lang.Thread
{
    private final com.android.internal.telephony.IccCard mSimCard;
    private boolean mDone;
    private int mResult;
    private int mRetryCount;
    private android.os.Handler mHandler;
    private static final int SUPPLY_PIN_COMPLETE;

    public void <init>(com.android.internal.telephony.IccCard)
    {
        com.android.phone.PhoneInterfaceManager$UnlockSim this;
        com.android.internal.telephony.IccCard simCard;

        this := @this: com.android.phone.PhoneInterfaceManager$UnlockSim;

        simCard := @parameter0: com.android.internal.telephony.IccCard;

        specialinvoke this.<java.lang.Thread: void <init>()>();

        this.<com.android.phone.PhoneInterfaceManager$UnlockSim: boolean mDone> = 0;

        this.<com.android.phone.PhoneInterfaceManager$UnlockSim: int mResult> = 2;

        this.<com.android.phone.PhoneInterfaceManager$UnlockSim: int mRetryCount> = -1;

        this.<com.android.phone.PhoneInterfaceManager$UnlockSim: com.android.internal.telephony.IccCard mSimCard> = simCard;

        return;
    }

    public void run()
    {
        com.android.phone.PhoneInterfaceManager$UnlockSim this, l1;
        java.lang.Throwable l2, $r2;
        com.android.phone.PhoneInterfaceManager$UnlockSim$1 $r1;

        this := @this: com.android.phone.PhoneInterfaceManager$UnlockSim;

        staticinvoke <android.os.Looper: void prepare()>();

        l1 = this;

        entermonitor this;

     label1:
        $r1 = new com.android.phone.PhoneInterfaceManager$UnlockSim$1;

        specialinvoke $r1.<com.android.phone.PhoneInterfaceManager$UnlockSim$1: void <init>(com.android.phone.PhoneInterfaceManager$UnlockSim)>(this);

        this.<com.android.phone.PhoneInterfaceManager$UnlockSim: android.os.Handler mHandler> = $r1;

        virtualinvoke this.<java.lang.Object: void notifyAll()>();

        exitmonitor l1;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        l2 = $r2;

        exitmonitor l1;

     label4:
        throw l2;

     label5:
        staticinvoke <android.os.Looper: void loop()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    synchronized int[] unlockSim(java.lang.String, java.lang.String)
    {
        com.android.phone.PhoneInterfaceManager$UnlockSim this;
        java.lang.String puk, pin;
        android.os.Handler $r0, $r1;
        com.android.internal.telephony.IccCard $r2, $r3;
        boolean $z0;
        int $i1, $i2;
        java.lang.InterruptedException $r4, $r5, e#1, e#3;
        java.lang.Thread $r6, $r7;
        android.os.Message e#2;
        int[] e#4;

        this := @this: com.android.phone.PhoneInterfaceManager$UnlockSim;

        puk := @parameter0: java.lang.String;

        pin := @parameter1: java.lang.String;

     label01:
        $r0 = this.<com.android.phone.PhoneInterfaceManager$UnlockSim: android.os.Handler mHandler>;

        if $r0 != null goto label05;

     label02:
        virtualinvoke this.<java.lang.Object: void wait()>();

     label03:
        goto label01;

     label04:
        $r5 := @caughtexception;

        e#1 = $r5;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

        goto label01;

     label05:
        $r1 = this.<com.android.phone.PhoneInterfaceManager$UnlockSim: android.os.Handler mHandler>;

        e#2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r1, 100);

        if puk != null goto label06;

        $r3 = this.<com.android.phone.PhoneInterfaceManager$UnlockSim: com.android.internal.telephony.IccCard mSimCard>;

        interfaceinvoke $r3.<com.android.internal.telephony.IccCard: void supplyPin(java.lang.String,android.os.Message)>(pin, e#2);

        goto label07;

     label06:
        $r2 = this.<com.android.phone.PhoneInterfaceManager$UnlockSim: com.android.internal.telephony.IccCard mSimCard>;

        interfaceinvoke $r2.<com.android.internal.telephony.IccCard: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>(puk, pin, e#2);

     label07:
        $z0 = this.<com.android.phone.PhoneInterfaceManager$UnlockSim: boolean mDone>;

        if $z0 != 0 goto label11;

     label08:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PhoneInterfaceManager", "wait for done");

        virtualinvoke this.<java.lang.Object: void wait()>();

     label09:
        goto label07;

     label10:
        $r4 := @caughtexception;

        e#3 = $r4;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void interrupt()>();

        goto label07;

     label11:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PhoneInterfaceManager", "done");

        e#4 = newarray (int)[2];

        $i1 = this.<com.android.phone.PhoneInterfaceManager$UnlockSim: int mResult>;

        e#4[0] = $i1;

        $i2 = this.<com.android.phone.PhoneInterfaceManager$UnlockSim: int mRetryCount>;

        e#4[1] = $i2;

        return e#4;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.InterruptedException from label08 to label09 with label10;
    }

    static int access$702(com.android.phone.PhoneInterfaceManager$UnlockSim, int)
    {
        com.android.phone.PhoneInterfaceManager$UnlockSim x0;
        int x1;

        x0 := @parameter0: com.android.phone.PhoneInterfaceManager$UnlockSim;

        x1 := @parameter1: int;

        x0.<com.android.phone.PhoneInterfaceManager$UnlockSim: int mRetryCount> = x1;

        return x1;
    }

    static int access$802(com.android.phone.PhoneInterfaceManager$UnlockSim, int)
    {
        com.android.phone.PhoneInterfaceManager$UnlockSim x0;
        int x1;

        x0 := @parameter0: com.android.phone.PhoneInterfaceManager$UnlockSim;

        x1 := @parameter1: int;

        x0.<com.android.phone.PhoneInterfaceManager$UnlockSim: int mResult> = x1;

        return x1;
    }

    static boolean access$902(com.android.phone.PhoneInterfaceManager$UnlockSim, boolean)
    {
        com.android.phone.PhoneInterfaceManager$UnlockSim x0;
        boolean x1;

        x0 := @parameter0: com.android.phone.PhoneInterfaceManager$UnlockSim;

        x1 := @parameter1: boolean;

        x0.<com.android.phone.PhoneInterfaceManager$UnlockSim: boolean mDone> = x1;

        return x1;
    }

    public static void <clinit>()
    {
        <com.android.phone.PhoneInterfaceManager$UnlockSim: int SUPPLY_PIN_COMPLETE> = 100;

        return;
    }
}
