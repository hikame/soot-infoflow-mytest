class android.os.ServiceManagerProxy extends java.lang.Object implements android.os.IServiceManager
{
    private android.os.IBinder mRemote;

    public void <init>(android.os.IBinder)
    {
        android.os.ServiceManagerProxy this;
        android.os.IBinder remote;

        this := @this: android.os.ServiceManagerProxy;

        remote := @parameter0: android.os.IBinder;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.ServiceManagerProxy: android.os.IBinder mRemote> = remote;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.ServiceManagerProxy this;
        android.os.IBinder $r0;

        this := @this: android.os.ServiceManagerProxy;

        $r0 = this.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        return $r0;
    }

    public android.os.IBinder getService(java.lang.String) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy this;
        java.lang.String name;
        android.os.Parcel data, reply;
        android.os.IBinder binder, $r0;

        this := @this: android.os.ServiceManagerProxy;

        name := @parameter0: java.lang.String;

        data = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        reply = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke data.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke data.<android.os.Parcel: void writeString(java.lang.String)>(name);

        $r0 = this.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r0.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, data, reply, 0);

        binder = virtualinvoke reply.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke reply.<android.os.Parcel: void recycle()>();

        virtualinvoke data.<android.os.Parcel: void recycle()>();

        return binder;
    }

    public android.os.IBinder checkService(java.lang.String) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy this;
        java.lang.String name;
        android.os.Parcel data, reply;
        android.os.IBinder binder, $r0;

        this := @this: android.os.ServiceManagerProxy;

        name := @parameter0: java.lang.String;

        data = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        reply = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke data.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke data.<android.os.Parcel: void writeString(java.lang.String)>(name);

        $r0 = this.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r0.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, data, reply, 0);

        binder = virtualinvoke reply.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke reply.<android.os.Parcel: void recycle()>();

        virtualinvoke data.<android.os.Parcel: void recycle()>();

        return binder;
    }

    public void addService(java.lang.String, android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy this;
        java.lang.String name;
        android.os.IBinder service, $r0;
        boolean allowIsolated;
        android.os.Parcel data, reply;
        byte $b0;

        this := @this: android.os.ServiceManagerProxy;

        name := @parameter0: java.lang.String;

        service := @parameter1: android.os.IBinder;

        allowIsolated := @parameter2: boolean;

        data = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        reply = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke data.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke data.<android.os.Parcel: void writeString(java.lang.String)>(name);

        virtualinvoke data.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(service);

        if allowIsolated == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke data.<android.os.Parcel: void writeInt(int)>($b0);

        $r0 = this.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r0.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, data, reply, 0);

        virtualinvoke reply.<android.os.Parcel: void recycle()>();

        virtualinvoke data.<android.os.Parcel: void recycle()>();

        return;
    }

    public java.lang.String[] listServices() throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy this;
        java.util.ArrayList services, $r0;
        android.os.Parcel reply, data#2;
        android.os.IBinder $r1;
        java.lang.String $r2;
        int $i0, n#1;
        java.lang.RuntimeException $r4, res#4;
        boolean res#3;
        java.lang.String[] data#5;

        this := @this: android.os.ServiceManagerProxy;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        services = $r0;

        n#1 = 0;

     label1:
        data#2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        reply = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke data#2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke data#2.<android.os.Parcel: void writeInt(int)>(n#1);

        n#1 = n#1 + 1;

     label2:
        $r1 = this.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        res#3 = interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, data#2, reply, 0);

        if res#3 != 0 goto label4;

     label3:
        goto label7;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        res#4 = $r4;

        goto label7;

     label6:
        $r2 = virtualinvoke reply.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke services.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        virtualinvoke reply.<android.os.Parcel: void recycle()>();

        virtualinvoke data#2.<android.os.Parcel: void recycle()>();

        goto label1;

     label7:
        $i0 = virtualinvoke services.<java.util.ArrayList: int size()>();

        data#5 = newarray (java.lang.String)[$i0];

        virtualinvoke services.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(data#5);

        return data#5;

        catch java.lang.RuntimeException from label2 to label3 with label5;
    }

    public void setPermissionController(android.os.IPermissionController) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy this;
        android.os.IPermissionController controller;
        android.os.Parcel data, reply;
        android.os.IBinder $r0, $r1;

        this := @this: android.os.ServiceManagerProxy;

        controller := @parameter0: android.os.IPermissionController;

        data = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        reply = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke data.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        $r0 = interfaceinvoke controller.<android.os.IPermissionController: android.os.IBinder asBinder()>();

        virtualinvoke data.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r0);

        $r1 = this.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, data, reply, 0);

        virtualinvoke reply.<android.os.Parcel: void recycle()>();

        virtualinvoke data.<android.os.Parcel: void recycle()>();

        return;
    }
}
