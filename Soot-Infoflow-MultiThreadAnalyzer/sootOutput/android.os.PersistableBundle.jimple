public final class android.os.PersistableBundle extends android.os.BaseBundle implements java.lang.Cloneable, android.os.Parcelable, com.android.internal.util.XmlUtils$WriteMapCallback
{
    private static final java.lang.String TAG_PERSISTABLEMAP;
    public static final android.os.PersistableBundle EMPTY;
    static final android.os.Parcel EMPTY_PARCEL;
    public static final android.os.Parcelable$Creator CREATOR;

    public static boolean isValidType(java.lang.Object)
    {
        java.lang.Object value;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        value := @parameter0: java.lang.Object;

        $z0 = value instanceof java.lang.Integer;

        if $z0 != 0 goto label1;

        $z1 = value instanceof java.lang.Long;

        if $z1 != 0 goto label1;

        $z2 = value instanceof java.lang.Double;

        if $z2 != 0 goto label1;

        $z3 = value instanceof java.lang.String;

        if $z3 != 0 goto label1;

        $z4 = value instanceof int[];

        if $z4 != 0 goto label1;

        $z5 = value instanceof long[];

        if $z5 != 0 goto label1;

        $z6 = value instanceof double[];

        if $z6 != 0 goto label1;

        $z7 = value instanceof java.lang.String[];

        if $z7 != 0 goto label1;

        $z8 = value instanceof android.os.PersistableBundle;

        if $z8 != 0 goto label1;

        if value == null goto label1;

        $z9 = value instanceof java.lang.Boolean;

        if $z9 != 0 goto label1;

        $z10 = value instanceof boolean[];

        if $z10 == 0 goto label2;

     label1:
        $z11 = 1;

        goto label3;

     label2:
        $z11 = 0;

     label3:
        return $z11;
    }

    public void <init>()
    {
        android.os.PersistableBundle this;

        this := @this: android.os.PersistableBundle;

        specialinvoke this.<android.os.BaseBundle: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        android.os.PersistableBundle this;
        int capacity;

        this := @this: android.os.PersistableBundle;

        capacity := @parameter0: int;

        specialinvoke this.<android.os.BaseBundle: void <init>(int)>(capacity);

        return;
    }

    public void <init>(android.os.PersistableBundle)
    {
        android.os.PersistableBundle this, b;

        this := @this: android.os.PersistableBundle;

        b := @parameter0: android.os.PersistableBundle;

        specialinvoke this.<android.os.BaseBundle: void <init>(android.os.BaseBundle)>(b);

        return;
    }

    private void <init>(android.util.ArrayMap)
    {
        android.os.PersistableBundle this, $r11;
        android.util.ArrayMap map, $r0, $r1, $r5, $r13, $r14;
        int N, i#1;
        java.lang.Object value, $r6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r7, $r9, $r10;
        java.lang.String $r8, $r12;

        this := @this: android.os.PersistableBundle;

        map := @parameter0: android.util.ArrayMap;

        specialinvoke this.<android.os.BaseBundle: void <init>()>();

        virtualinvoke this.<android.os.PersistableBundle: void putAll(android.util.ArrayMap)>(map);

        $r0 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        N = virtualinvoke $r0.<android.util.ArrayMap: int size()>();

        i#1 = 0;

     label1:
        if i#1 >= N goto label4;

        $r1 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        value = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i#1);

        $z0 = value instanceof android.util.ArrayMap;

        if $z0 == 0 goto label2;

        $r13 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r11 = new android.os.PersistableBundle;

        $r14 = (android.util.ArrayMap) value;

        specialinvoke $r11.<android.os.PersistableBundle: void <init>(android.util.ArrayMap)>($r14);

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>(i#1, $r11);

        goto label3;

     label2:
        $z1 = staticinvoke <android.os.PersistableBundle: boolean isValidType(java.lang.Object)>(value);

        if $z1 != 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad value in PersistableBundle key=");

        $r5 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i#1);

        $r8 = (java.lang.String) $r6;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r2;

     label3:
        i#1 = i#1 + 1;

        goto label1;

     label4:
        return;
    }

    void <init>(android.os.Parcel, int)
    {
        android.os.PersistableBundle this;
        android.os.Parcel parcelledData;
        int length;

        this := @this: android.os.PersistableBundle;

        parcelledData := @parameter0: android.os.Parcel;

        length := @parameter1: int;

        specialinvoke this.<android.os.BaseBundle: void <init>(android.os.Parcel,int)>(parcelledData, length);

        return;
    }

    public static android.os.PersistableBundle forPair(java.lang.String, java.lang.String)
    {
        java.lang.String key, value;
        android.os.PersistableBundle b, $r0;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = new android.os.PersistableBundle;

        specialinvoke $r0.<android.os.PersistableBundle: void <init>(int)>(1);

        b = $r0;

        virtualinvoke b.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>(key, value);

        return b;
    }

    public java.lang.Object clone()
    {
        android.os.PersistableBundle this, $r0;

        this := @this: android.os.PersistableBundle;

        $r0 = new android.os.PersistableBundle;

        specialinvoke $r0.<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>(this);

        return $r0;
    }

    public void putPersistableBundle(java.lang.String, android.os.PersistableBundle)
    {
        android.os.PersistableBundle this, value;
        java.lang.String key;
        android.util.ArrayMap $r0;

        this := @this: android.os.PersistableBundle;

        key := @parameter0: java.lang.String;

        value := @parameter1: android.os.PersistableBundle;

        virtualinvoke this.<android.os.PersistableBundle: void unparcel()>();

        $r0 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public android.os.PersistableBundle getPersistableBundle(java.lang.String)
    {
        android.os.PersistableBundle this, $r1;
        java.lang.String key;
        java.lang.Object o;
        java.lang.ClassCastException e, $r2;
        android.util.ArrayMap $r0;

        this := @this: android.os.PersistableBundle;

        key := @parameter0: java.lang.String;

        virtualinvoke this.<android.os.PersistableBundle: void unparcel()>();

        $r0 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        o = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        if o != null goto label1;

        return null;

     label1:
        $r1 = (android.os.PersistableBundle) o;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke this.<android.os.PersistableBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(key, o, "Bundle", e);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public void writeUnknownObject(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.os.PersistableBundle this, $r7;
        java.lang.Object v;
        java.lang.String name, $r4;
        org.xmlpull.v1.XmlSerializer out;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;

        this := @this: android.os.PersistableBundle;

        v := @parameter0: java.lang.Object;

        name := @parameter1: java.lang.String;

        out := @parameter2: org.xmlpull.v1.XmlSerializer;

        $z0 = v instanceof android.os.PersistableBundle;

        if $z0 == 0 goto label1;

        interfaceinvoke out.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pbundle_as_map");

        interfaceinvoke out.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", name);

        $r7 = (android.os.PersistableBundle) v;

        virtualinvoke $r7.<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>(out);

        interfaceinvoke out.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pbundle_as_map");

        goto label2;

     label1:
        $r0 = new org.xmlpull.v1.XmlPullParserException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Object o=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return;
    }

    public void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.os.PersistableBundle this;
        org.xmlpull.v1.XmlSerializer out;
        android.util.ArrayMap $r0;

        this := @this: android.os.PersistableBundle;

        out := @parameter0: org.xmlpull.v1.XmlSerializer;

        virtualinvoke this.<android.os.PersistableBundle: void unparcel()>();

        $r0 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>($r0, out, this);

        return;
    }

    public int describeContents()
    {
        android.os.PersistableBundle this;

        this := @this: android.os.PersistableBundle;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.PersistableBundle this;
        android.os.Parcel parcel;
        int flags;
        boolean oldAllowFds;
        java.lang.Throwable l4, $r0;

        this := @this: android.os.PersistableBundle;

        parcel := @parameter0: android.os.Parcel;

        flags := @parameter1: int;

        oldAllowFds = virtualinvoke parcel.<android.os.Parcel: boolean pushAllowFds(boolean)>(0);

     label1:
        virtualinvoke this.<android.os.PersistableBundle: void writeToParcelInner(android.os.Parcel,int)>(parcel, flags);

     label2:
        virtualinvoke parcel.<android.os.Parcel: void restoreAllowFds(boolean)>(oldAllowFds);

        goto label5;

     label3:
        $r0 := @caughtexception;

        l4 = $r0;

     label4:
        virtualinvoke parcel.<android.os.Parcel: void restoreAllowFds(boolean)>(oldAllowFds);

        throw l4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser in;
        int outerDepth, event, $i0, $i1;
        java.lang.String startTag;
        java.lang.String[] tagName;
        android.os.PersistableBundle $r0, $r1;
        android.os.PersistableBundle$MyReadMapCallback $r2;
        android.util.ArrayMap $r3;

        in := @parameter0: org.xmlpull.v1.XmlPullParser;

        outerDepth = interfaceinvoke in.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        startTag = interfaceinvoke in.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        tagName = newarray (java.lang.String)[1];

     label1:
        $i0 = interfaceinvoke in.<org.xmlpull.v1.XmlPullParser: int next()>();

        event = $i0;

        if $i0 == 1 goto label3;

        if event != 3 goto label2;

        $i1 = interfaceinvoke in.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 >= outerDepth goto label3;

     label2:
        if event != 2 goto label1;

        $r1 = new android.os.PersistableBundle;

        $r2 = new android.os.PersistableBundle$MyReadMapCallback;

        specialinvoke $r2.<android.os.PersistableBundle$MyReadMapCallback: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: android.util.ArrayMap readThisArrayMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(in, startTag, tagName, $r2);

        specialinvoke $r1.<android.os.PersistableBundle: void <init>(android.util.ArrayMap)>($r3);

        return $r1;

     label3:
        $r0 = <android.os.PersistableBundle: android.os.PersistableBundle EMPTY>;

        return $r0;
    }

    public synchronized java.lang.String toString()
    {
        android.os.PersistableBundle this;
        android.os.Parcel $r0, $r8, $r9, $r12;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r10, $r11, $r13, $r15;
        android.util.ArrayMap $r3;
        java.lang.String $r4, $r7, $r14;
        int $i0;

        this := @this: android.os.PersistableBundle;

        $r0 = this.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        if $r0 == null goto label2;

        $r9 = this.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        $r8 = <android.os.PersistableBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r9 != $r8 goto label1;

        return "PersistableBundle[EMPTY_PARCEL]";

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PersistableBundle[mParcelledData.dataSize=");

        $r12 = this.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r12.<android.os.Parcel: int dataSize()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PersistableBundle[");

        $r3 = this.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        android.os.PersistableBundle $r0, $r2;
        android.util.ArrayMap $r1;
        android.os.Parcel $r3;
        android.os.PersistableBundle$1 $r4;

        <android.os.PersistableBundle: java.lang.String TAG_PERSISTABLEMAP> = "pbundle_as_map";

        $r0 = new android.os.PersistableBundle;

        specialinvoke $r0.<android.os.PersistableBundle: void <init>()>();

        <android.os.PersistableBundle: android.os.PersistableBundle EMPTY> = $r0;

        $r2 = <android.os.PersistableBundle: android.os.PersistableBundle EMPTY>;

        $r1 = <android.util.ArrayMap: android.util.ArrayMap EMPTY>;

        $r2.<android.os.PersistableBundle: android.util.ArrayMap mMap> = $r1;

        $r3 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        <android.os.PersistableBundle: android.os.Parcel EMPTY_PARCEL> = $r3;

        $r4 = new android.os.PersistableBundle$1;

        specialinvoke $r4.<android.os.PersistableBundle$1: void <init>()>();

        <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR> = $r4;

        return;
    }
}
