public class com.android.server.pm.UserManagerService extends android.os.IUserManager$Stub
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DBG;
    private static final java.lang.String TAG_NAME;
    private static final java.lang.String ATTR_FLAGS;
    private static final java.lang.String ATTR_ICON_PATH;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_CREATION_TIME;
    private static final java.lang.String ATTR_LAST_LOGGED_IN_TIME;
    private static final java.lang.String ATTR_SERIAL_NO;
    private static final java.lang.String ATTR_NEXT_SERIAL_NO;
    private static final java.lang.String ATTR_PARTIAL;
    private static final java.lang.String ATTR_GUEST_TO_REMOVE;
    private static final java.lang.String ATTR_USER_VERSION;
    private static final java.lang.String ATTR_PROFILE_GROUP_ID;
    private static final java.lang.String TAG_GUEST_RESTRICTIONS;
    private static final java.lang.String TAG_USERS;
    private static final java.lang.String TAG_USER;
    private static final java.lang.String TAG_RESTRICTIONS;
    private static final java.lang.String TAG_ENTRY;
    private static final java.lang.String TAG_VALUE;
    private static final java.lang.String ATTR_KEY;
    private static final java.lang.String ATTR_VALUE_TYPE;
    private static final java.lang.String ATTR_MULTIPLE;
    private static final java.lang.String ATTR_TYPE_STRING_ARRAY;
    private static final java.lang.String ATTR_TYPE_STRING;
    private static final java.lang.String ATTR_TYPE_BOOLEAN;
    private static final java.lang.String ATTR_TYPE_INTEGER;
    private static final java.lang.String ATTR_TYPE_BUNDLE;
    private static final java.lang.String ATTR_TYPE_BUNDLE_ARRAY;
    private static final java.lang.String USER_INFO_DIR;
    private static final java.lang.String USER_LIST_FILENAME;
    private static final java.lang.String USER_PHOTO_FILENAME;
    private static final java.lang.String USER_PHOTO_FILENAME_TMP;
    private static final java.lang.String RESTRICTIONS_FILE_PREFIX;
    private static final java.lang.String XML_SUFFIX;
    private static final int MIN_USER_ID;
    private static final int USER_VERSION;
    private static final long EPOCH_PLUS_30_YEARS;
    private static final int MAX_MANAGED_PROFILES;
    private static final boolean CONFIG_PROFILES_SHARE_CREDENTIAL;
    private static final java.util.Set SYSTEM_CONTROLLED_RESTRICTIONS;
    static final int WRITE_USER_MSG;
    static final int WRITE_USER_DELAY;
    private static final java.lang.String XATTR_SERIAL;
    private final android.content.Context mContext;
    private final com.android.server.pm.PackageManagerService mPm;
    private final java.lang.Object mInstallLock;
    private final java.lang.Object mPackagesLock;
    private final android.os.Handler mHandler;
    private final java.io.File mUsersDir;
    private final java.io.File mUserListFile;
    private final android.util.SparseArray mUsers;
    private final android.util.SparseArray mUserRestrictions;
    private final android.os.Bundle mGuestRestrictions;
    private final android.util.SparseBooleanArray mRemovingUserIds;
    private int[] mUserIds;
    private int mNextSerialNumber;
    private int mUserVersion;
    private com.android.internal.app.IAppOpsService mAppOpsService;
    private static com.android.server.pm.UserManagerService sInstance;

    public static com.android.server.pm.UserManagerService getInstance()
    {
        java.lang.Class l0;
        java.lang.Throwable l1, $r1;
        com.android.server.pm.UserManagerService $r0;

        l0 = class "com/android/server/pm/UserManagerService";

        entermonitor class "com/android/server/pm/UserManagerService";

     label1:
        $r0 = <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance>;

        exitmonitor l0;

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        l1 = $r1;

        exitmonitor l0;

     label4:
        throw l1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void <init>(java.io.File, java.io.File)
    {
        com.android.server.pm.UserManagerService this;
        java.io.File dataDir, baseUserPath;
        java.lang.Object $r0, $r1;

        this := @this: com.android.server.pm.UserManagerService;

        dataDir := @parameter0: java.io.File;

        baseUserPath := @parameter1: java.io.File;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object,java.io.File,java.io.File)>(null, null, $r0, $r1, dataDir, baseUserPath);

        return;
    }

    void <init>(android.content.Context, com.android.server.pm.PackageManagerService, java.lang.Object, java.lang.Object)
    {
        com.android.server.pm.UserManagerService this;
        android.content.Context context;
        com.android.server.pm.PackageManagerService pm;
        java.lang.Object installLock, packagesLock;
        java.io.File $r0, $r1, $r2;

        this := @this: com.android.server.pm.UserManagerService;

        context := @parameter0: android.content.Context;

        pm := @parameter1: com.android.server.pm.PackageManagerService;

        installLock := @parameter2: java.lang.Object;

        packagesLock := @parameter3: java.lang.Object;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "user");

        specialinvoke this.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object,java.io.File,java.io.File)>(context, pm, installLock, packagesLock, $r0, $r1);

        return;
    }

    private void <init>(android.content.Context, com.android.server.pm.PackageManagerService, java.lang.Object, java.lang.Object, java.io.File, java.io.File)
    {
        com.android.server.pm.UserManagerService this;
        android.content.Context context;
        com.android.server.pm.PackageManagerService pm;
        java.lang.Object installLock, packagesLock, l7, l8, $r4, $r7;
        java.io.File dataDir, baseUserPath, userZeroDir, $r6, $r8, $r10, $r11, $r13, $r14, $r15;
        java.lang.Throwable l10, l11, $r16, $r17;
        android.util.SparseArray $r0, $r1;
        android.os.Bundle $r2;
        android.util.SparseBooleanArray $r3;
        com.android.server.pm.UserManagerService$MainHandler $r5;
        java.lang.String $r9, $r12;

        this := @this: com.android.server.pm.UserManagerService;

        context := @parameter0: android.content.Context;

        pm := @parameter1: com.android.server.pm.PackageManagerService;

        installLock := @parameter2: java.lang.Object;

        packagesLock := @parameter3: java.lang.Object;

        dataDir := @parameter4: java.io.File;

        baseUserPath := @parameter5: java.io.File;

        specialinvoke this.<android.os.IUserManager$Stub: void <init>()>();

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers> = $r0;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions> = $r1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions> = $r2;

        $r3 = new android.util.SparseBooleanArray;

        specialinvoke $r3.<android.util.SparseBooleanArray: void <init>()>();

        this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds> = $r3;

        this.<com.android.server.pm.UserManagerService: int mUserVersion> = 0;

        this.<com.android.server.pm.UserManagerService: android.content.Context mContext> = context;

        this.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm> = pm;

        this.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock> = installLock;

        this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock> = packagesLock;

        $r5 = new com.android.server.pm.UserManagerService$MainHandler;

        specialinvoke $r5.<com.android.server.pm.UserManagerService$MainHandler: void <init>(com.android.server.pm.UserManagerService)>(this);

        this.<com.android.server.pm.UserManagerService: android.os.Handler mHandler> = $r5;

        $r4 = this.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        l7 = $r4;

        entermonitor $r4;

     label01:
        $r7 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l8 = $r7;

        entermonitor $r7;

     label02:
        $r6 = new java.io.File;

        $r9 = <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(dataDir, $r9);

        this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir> = $r6;

        $r8 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        virtualinvoke $r8.<java.io.File: boolean mkdirs()>();

        $r10 = new java.io.File;

        $r11 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "0");

        userZeroDir = $r10;

        virtualinvoke userZeroDir.<java.io.File: boolean mkdirs()>();

        $r13 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r12 = virtualinvoke $r13.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r12, 509, -1, -1);

        $r14 = new java.io.File;

        $r15 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "userlist.xml");

        this.<com.android.server.pm.UserManagerService: java.io.File mUserListFile> = $r14;

        specialinvoke this.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void readUserListLocked()>();

        <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance> = this;

        exitmonitor l8;

     label03:
        goto label06;

     label04:
        $r17 := @caughtexception;

        l10 = $r17;

        exitmonitor l8;

     label05:
        throw l10;

     label06:
        exitmonitor l7;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        l11 = $r16;

        exitmonitor l7;

     label09:
        throw l11;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void systemReady()
    {
        com.android.server.pm.UserManagerService this;
        java.util.ArrayList partials, $r2;
        java.lang.Throwable l6, l7, $r24, $r25;
        java.lang.Object $r0, $r1, $r11, $r14, $r22, i#1, e#2;
        android.util.SparseArray $r3, $r9, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, i#3, i#5, i#7;
        com.android.internal.app.IAppOpsService $r4, $r8;
        android.os.IBinder $r5;
        int[] $r6, $r7, $r10;
        android.os.Bundle $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r18, $r20, $r21;
        java.lang.String $r17, $r19;
        boolean $z0, $z2;
        android.os.RemoteException $r26, e#8;
        android.content.pm.UserInfo ui#4, ui#6;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        i#1 = $r0;

        entermonitor $r0;

     label01:
        $r1 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        e#2 = $r1;

        entermonitor $r1;

     label02:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        partials = $r2;

        i#3 = 0;

     label03:
        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i#3 >= $i0 goto label06;

        $r23 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r22 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#3);

        ui#4 = (android.content.pm.UserInfo) $r22;

        $z0 = ui#4.<android.content.pm.UserInfo: boolean partial>;

        if $z0 != 0 goto label04;

        $z2 = ui#4.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z2 == 0 goto label05;

     label04:
        if i#3 == 0 goto label05;

        virtualinvoke partials.<java.util.ArrayList: boolean add(java.lang.Object)>(ui#4);

     label05:
        i#3 = i#3 + 1;

        goto label03;

     label06:
        i#5 = 0;

     label07:
        $i1 = virtualinvoke partials.<java.util.ArrayList: int size()>();

        if i#5 >= $i1 goto label08;

        $r14 = virtualinvoke partials.<java.util.ArrayList: java.lang.Object get(int)>(i#5);

        ui#6 = (android.content.pm.UserInfo) $r14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing partially created user ");

        $i5 = ui#6.<android.content.pm.UserInfo: int id>;

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (name=");

        $r17 = ui#6.<android.content.pm.UserInfo: java.lang.String name>;

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r19);

        $i7 = ui#6.<android.content.pm.UserInfo: int id>;

        specialinvoke this.<com.android.server.pm.UserManagerService: void removeUserStateLocked(int)>($i7);

        i#5 = i#5 + 1;

        goto label07;

     label08:
        exitmonitor e#2;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        l6 = $r24;

        exitmonitor e#2;

     label11:
        throw l6;

     label12:
        exitmonitor i#1;

     label13:
        goto label16;

     label14:
        $r25 := @caughtexception;

        l7 = $r25;

        exitmonitor i#1;

     label15:
        throw l7;

     label16:
        virtualinvoke this.<com.android.server.pm.UserManagerService: void onUserForeground(int)>(0);

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appops");

        $r4 = staticinvoke <com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)>($r5);

        this.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService> = $r4;

        i#7 = 0;

     label17:
        $r6 = this.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        $i2 = lengthof $r6;

        if i#7 >= $i2 goto label22;

     label18:
        $r8 = this.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        $r9 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r7 = this.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        $i3 = $r7[i#7];

        $r11 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        $r12 = (android.os.Bundle) $r11;

        $r10 = this.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        $i4 = $r10[i#7];

        interfaceinvoke $r8.<com.android.internal.app.IAppOpsService: void setUserRestrictions(android.os.Bundle,int)>($r12, $i4);

     label19:
        goto label21;

     label20:
        $r26 := @caughtexception;

        e#8 = $r26;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Unable to notify AppOpsService of UserRestrictions");

     label21:
        i#7 = i#7 + 1;

        goto label17;

     label22:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch android.os.RemoteException from label18 to label19 with label20;
    }

    public java.util.List getUsers(boolean)
    {
        com.android.server.pm.UserManagerService this;
        boolean excludeDying, $z1, $z2;
        java.lang.Object l2, $r0, $r5;
        java.util.ArrayList users, tmp$542221930;
        android.content.pm.UserInfo ui;
        java.lang.Throwable l6, $r7;
        android.util.SparseArray $r2, $r3, $r4;
        int $i0, $i1, $i2, i#1;
        android.util.SparseBooleanArray $r6;
        java.util.List tmp$255255818;

        this := @this: com.android.server.pm.UserManagerService;

        excludeDying := @parameter0: boolean;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("query users");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        tmp$542221930 = new java.util.ArrayList;

        $r2 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        specialinvoke tmp$542221930.<java.util.ArrayList: void <init>(int)>($i0);

        users = tmp$542221930;

        i#1 = 0;

     label2:
        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i#1 >= $i1 goto label6;

        $r4 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#1);

        ui = (android.content.pm.UserInfo) $r5;

        $z1 = ui.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label3;

        goto label5;

     label3:
        if excludeDying == 0 goto label4;

        $r6 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i2 = ui.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke $r6.<android.util.SparseBooleanArray: boolean get(int)>($i2);

        if $z2 != 0 goto label5;

     label4:
        virtualinvoke users.<java.util.ArrayList: boolean add(java.lang.Object)>(ui);

     label5:
        i#1 = i#1 + 1;

        goto label2;

     label6:
        exitmonitor l2;

     label7:
        tmp$255255818 = (java.util.List) users;

        return tmp$255255818;

     label8:
        $r7 := @caughtexception;

        l6 = $r7;

        exitmonitor l2;

     label9:
        throw l6;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.util.List getProfiles(int, boolean)
    {
        com.android.server.pm.UserManagerService this;
        int userId, $i0;
        boolean enabledOnly;
        long ident;
        java.lang.Object l5, $r0;
        java.util.List l6;
        java.lang.Throwable l7, l8, $r5, $r6;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        enabledOnly := @parameter1: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if userId == $i0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getting profiles related to user ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>($r3);

     label1:
        ident = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l5 = $r0;

        entermonitor $r0;

     label3:
        l6 = specialinvoke this.<com.android.server.pm.UserManagerService: java.util.List getProfilesLocked(int,boolean)>(userId, enabledOnly);

        exitmonitor l5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return l6;

     label5:
        $r5 := @caughtexception;

        l7 = $r5;

        exitmonitor l5;

     label6:
        throw l7;

     label7:
        $r6 := @caughtexception;

        l8 = $r6;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        throw l8;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label2 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    private java.util.List getProfilesLocked(int, boolean)
    {
        com.android.server.pm.UserManagerService this;
        int userId, $i0, $i1, $i2, i#1;
        boolean enabledOnly, $z0, $z2, $z3;
        android.content.pm.UserInfo user, profile;
        java.util.ArrayList users, tmp$1394724645;
        android.util.SparseArray $r1, $r2, $r3;
        java.lang.Object $r4;
        android.util.SparseBooleanArray $r5;
        java.util.List tmp$1629034577, tmp$144565238;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        enabledOnly := @parameter1: boolean;

        user = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userId);

        tmp$1394724645 = new java.util.ArrayList;

        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        specialinvoke tmp$1394724645.<java.util.ArrayList: void <init>(int)>($i0);

        users = tmp$1394724645;

        if user != null goto label1;

        tmp$1629034577 = (java.util.List) users;

        return tmp$1629034577;

     label1:
        i#1 = 0;

     label2:
        $r2 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i#1 >= $i1 goto label7;

        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#1);

        profile = (android.content.pm.UserInfo) $r4;

        $z0 = specialinvoke this.<com.android.server.pm.UserManagerService: boolean isProfileOf(android.content.pm.UserInfo,android.content.pm.UserInfo)>(user, profile);

        if $z0 != 0 goto label3;

        goto label6;

     label3:
        if enabledOnly == 0 goto label4;

        $z3 = virtualinvoke profile.<android.content.pm.UserInfo: boolean isEnabled()>();

        if $z3 != 0 goto label4;

        goto label6;

     label4:
        $r5 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i2 = profile.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>($i2);

        if $z2 == 0 goto label5;

        goto label6;

     label5:
        virtualinvoke users.<java.util.ArrayList: boolean add(java.lang.Object)>(profile);

     label6:
        i#1 = i#1 + 1;

        goto label2;

     label7:
        tmp$144565238 = (java.util.List) users;

        return tmp$144565238;
    }

    public int getCredentialOwnerProfile(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle, $i0;
        java.lang.Object l2, $r0;
        android.content.pm.UserInfo profileParent;
        java.lang.Throwable l4, $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the credential owner");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        profileParent = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLocked(int)>(userHandle);

        if profileParent == null goto label3;

        $i0 = profileParent.<android.content.pm.UserInfo: int id>;

        exitmonitor l2;

     label2:
        return $i0;

     label3:
        exitmonitor l2;

     label4:
        goto label7;

     label5:
        $r1 := @caughtexception;

        l4 = $r1;

        exitmonitor l2;

     label6:
        throw l4;

     label7:
        return userHandle;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.pm.UserInfo getProfileParent(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle;
        java.lang.Object l2, $r0;
        java.lang.Throwable l3, $r2;
        android.content.pm.UserInfo $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the profile parent");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLocked(int)>(userHandle);

        exitmonitor l2;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        l3 = $r2;

        exitmonitor l2;

     label4:
        throw l3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.content.pm.UserInfo getProfileParentLocked(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle, parentUserId;
        android.content.pm.UserInfo profile, $r0;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        profile = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userHandle);

        if profile != null goto label1;

        return null;

     label1:
        parentUserId = profile.<android.content.pm.UserInfo: int profileGroupId>;

        if parentUserId != -1 goto label2;

        return null;

     label2:
        $r0 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(parentUserId);

        return $r0;
    }

    private boolean isProfileOf(android.content.pm.UserInfo, android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService this;
        android.content.pm.UserInfo user, profile;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        user := @parameter0: android.content.pm.UserInfo;

        profile := @parameter1: android.content.pm.UserInfo;

        $i1 = user.<android.content.pm.UserInfo: int id>;

        $i0 = profile.<android.content.pm.UserInfo: int id>;

        if $i1 == $i0 goto label1;

        $i2 = user.<android.content.pm.UserInfo: int profileGroupId>;

        if $i2 == -1 goto label2;

        $i4 = user.<android.content.pm.UserInfo: int profileGroupId>;

        $i3 = profile.<android.content.pm.UserInfo: int profileGroupId>;

        if $i4 != $i3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void setUserEnabled(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId, $i0, $i1;
        java.lang.Object l2, $r0;
        android.content.pm.UserInfo info;
        java.lang.Throwable l4, $r1;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("enable user");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        info = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userId);

        if info == null goto label2;

        $z0 = virtualinvoke info.<android.content.pm.UserInfo: boolean isEnabled()>();

        if $z0 != 0 goto label2;

        $i0 = info.<android.content.pm.UserInfo: int flags>;

        $i1 = $i0 ^ 64;

        info.<android.content.pm.UserInfo: int flags> = $i1;

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(info);

     label2:
        exitmonitor l2;

     label3:
        goto label6;

     label4:
        $r1 := @caughtexception;

        l4 = $r1;

        exitmonitor l2;

     label5:
        throw l4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.pm.UserInfo getUserInfo(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        java.lang.Object l2, $r0;
        java.lang.Throwable l3, $r2;
        android.content.pm.UserInfo $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("query user");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userId);

        exitmonitor l2;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        l3 = $r2;

        exitmonitor l2;

     label4:
        throw l3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isRestricted()
    {
        com.android.server.pm.UserManagerService this;
        java.lang.Object l1, $r0;
        java.lang.Throwable l2, $r2;
        int $i0;
        android.content.pm.UserInfo $r1;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>($i0);

        $z0 = virtualinvoke $r1.<android.content.pm.UserInfo: boolean isRestricted()>();

        exitmonitor l1;

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        l2 = $r2;

        exitmonitor l1;

     label4:
        throw l2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.content.pm.UserInfo getUserInfoLocked(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        android.content.pm.UserInfo ui;
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        ui = (android.content.pm.UserInfo) $r1;

        if ui == null goto label1;

        $z0 = ui.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label1;

        $r2 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z1 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(userId);

        if $z1 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserInfo: unknown user #");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r6);

        return null;

     label1:
        return ui;
    }

    public boolean exists(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        java.lang.Object l2, $r0, $r2;
        java.lang.Throwable l3, $r3;
        android.util.SparseArray $r1;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        if $r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor l2;

     label4:
        return $z0;

     label5:
        $r3 := @caughtexception;

        l3 = $r3;

        exitmonitor l2;

     label6:
        throw l3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setUserName(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        java.lang.String name, $r6, $r7;
        java.lang.Object l4, $r0, $r2;
        android.content.pm.UserInfo info;
        java.lang.Throwable l6, $r8;
        android.util.SparseArray $r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        boolean $z0, $z1, changed#1;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        name := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("rename users");

        changed#1 = 0;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l4 = $r0;

        entermonitor $r0;

     label01:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        info = (android.content.pm.UserInfo) $r2;

        if info == null goto label02;

        $z0 = info.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label04;

     label02:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserName: unknown user #");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r6);

        exitmonitor l4;

     label03:
        return;

     label04:
        if name == null goto label05;

        $r7 = info.<android.content.pm.UserInfo: java.lang.String name>;

        $z1 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label05;

        info.<android.content.pm.UserInfo: java.lang.String name> = name;

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(info);

        changed#1 = 1;

     label05:
        exitmonitor l4;

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

        l6 = $r8;

        exitmonitor l4;

     label08:
        throw l6;

     label09:
        if changed#1 == 0 goto label10;

        specialinvoke this.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(userId);

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void setUserIcon(int, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        android.graphics.Bitmap bitmap;
        long ident;
        java.lang.Object l5, $r0, $r2;
        android.content.pm.UserInfo info;
        java.lang.Throwable l7, l8, $r7, $r8;
        android.util.SparseArray $r1;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        bitmap := @parameter1: android.graphics.Bitmap;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("update users");

        ident = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l5 = $r0;

        entermonitor $r0;

     label02:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        info = (android.content.pm.UserInfo) $r2;

        if info == null goto label03;

        $z0 = info.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label05;

     label03:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserIcon: unknown user #");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r5);

        exitmonitor l5;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return;

     label05:
        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBitmapLocked(android.content.pm.UserInfo,android.graphics.Bitmap)>(info, bitmap);

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(info);

        exitmonitor l5;

     label06:
        goto label09;

     label07:
        $r7 := @caughtexception;

        l7 = $r7;

        exitmonitor l5;

     label08:
        throw l7;

     label09:
        specialinvoke this.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(userId);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        goto label13;

     label11:
        $r8 := @caughtexception;

        l8 = $r8;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        throw l8;

     label13:
        return;

        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void sendUserInfoChangedBroadcast(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        android.content.Intent changedIntent, $r0;
        android.os.UserHandle $r3;
        android.content.Context $r4;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_INFO_CHANGED");

        changedIntent = $r0;

        virtualinvoke changedIntent.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", userId);

        virtualinvoke changedIntent.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r4 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r4.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(changedIntent, $r3);

        return;
    }

    public android.os.ParcelFileDescriptor getUserIcon(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId, callingGroupId, $i1, $i2;
        java.lang.String iconPath, $r6, $r10;
        android.content.pm.UserInfo info, $r8;
        java.lang.Throwable l6, $r14;
        java.lang.Object $r0, $r2, $r9, e#1;
        android.util.SparseArray $r1, $r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        boolean $z0;
        android.os.ParcelFileDescriptor $r11;
        java.io.File $r12;
        java.io.FileNotFoundException $r13, e#2;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        e#1 = $r0;

        entermonitor $r0;

     label01:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        info = (android.content.pm.UserInfo) $r2;

        if info == null goto label02;

        $z0 = info.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label04;

     label02:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserIcon: unknown user #");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r6);

        exitmonitor e#1;

     label03:
        return null;

     label04:
        $r7 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r9 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        $r8 = (android.content.pm.UserInfo) $r9;

        callingGroupId = $r8.<android.content.pm.UserInfo: int profileGroupId>;

        if callingGroupId == -1 goto label05;

        $i2 = info.<android.content.pm.UserInfo: int profileGroupId>;

        if callingGroupId == $i2 goto label06;

     label05:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the icon of a user who is not related");

     label06:
        $r10 = info.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r10 != null goto label08;

        exitmonitor e#1;

     label07:
        return null;

     label08:
        iconPath = info.<android.content.pm.UserInfo: java.lang.String iconPath>;

        exitmonitor e#1;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        l6 = $r14;

        exitmonitor e#1;

     label11:
        throw l6;

     label12:
        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(iconPath);

        $r11 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r12, 268435456);

     label13:
        return $r11;

     label14:
        $r13 := @caughtexception;

        e#2 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Couldn\'t find icon file", e#2);

        return null;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.io.FileNotFoundException from label12 to label13 with label14;
    }

    public void makeInitialized(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId, $i1, $i2, $i3, $i4;
        java.lang.Object l2, $r0, $r2;
        android.content.pm.UserInfo info;
        java.lang.Throwable l4, $r7;
        android.util.SparseArray $r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("makeInitialized");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        info = (android.content.pm.UserInfo) $r2;

        if info == null goto label2;

        $z0 = info.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label3;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeInitialized: unknown user #");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r6);

     label3:
        $i1 = info.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 & 16;

        if $i2 != 0 goto label4;

        $i3 = info.<android.content.pm.UserInfo: int flags>;

        $i4 = $i3 | 16;

        info.<android.content.pm.UserInfo: int flags> = $i4;

        specialinvoke this.<com.android.server.pm.UserManagerService: void scheduleWriteUserLocked(android.content.pm.UserInfo)>(info);

     label4:
        exitmonitor l2;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        l4 = $r7;

        exitmonitor l2;

     label7:
        throw l4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void initDefaultGuestRestrictions()
    {
        com.android.server.pm.UserManagerService this;
        android.os.Bundle $r0, $r1, $r2;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_outgoing_calls", 1);

        $r2 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_sms", 1);

     label1:
        return;
    }

    public android.os.Bundle getDefaultGuestRestrictions()
    {
        com.android.server.pm.UserManagerService this;
        java.lang.Object l1, $r0;
        java.lang.Throwable l2, $r3;
        android.os.Bundle $r1, $r2;

        this := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("getDefaultGuestRestrictions");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $r1 = new android.os.Bundle;

        $r2 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        specialinvoke $r1.<android.os.Bundle: void <init>(android.os.Bundle)>($r2);

        exitmonitor l1;

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        l2 = $r3;

        exitmonitor l1;

     label4:
        throw l2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setDefaultGuestRestrictions(android.os.Bundle)
    {
        com.android.server.pm.UserManagerService this;
        android.os.Bundle restrictions, $r1, $r2;
        java.lang.Object l2, $r0;
        java.lang.Throwable l3, $r3;

        this := @this: com.android.server.pm.UserManagerService;

        restrictions := @parameter0: android.os.Bundle;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setDefaultGuestRestrictions");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r1.<android.os.Bundle: void clear()>();

        $r2 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r2.<android.os.Bundle: void putAll(android.os.Bundle)>(restrictions);

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        exitmonitor l2;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        l3 = $r3;

        exitmonitor l2;

     label4:
        throw l3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean hasUserRestriction(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String restrictionKey;
        int userId;
        java.lang.Object l3, $r0, $r2;
        android.os.Bundle restrictions;
        java.lang.Throwable l5, $r3;
        android.util.SparseArray $r1;
        boolean $z0, $z1;

        this := @this: com.android.server.pm.UserManagerService;

        restrictionKey := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l3 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        restrictions = (android.os.Bundle) $r2;

        if restrictions == null goto label2;

        $z0 = virtualinvoke restrictions.<android.os.Bundle: boolean getBoolean(java.lang.String)>(restrictionKey);

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        exitmonitor l3;

     label4:
        return $z1;

     label5:
        $r3 := @caughtexception;

        l5 = $r3;

        exitmonitor l3;

     label6:
        throw l5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.os.Bundle getUserRestrictions(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        java.lang.Object l2, $r0, $r2;
        android.os.Bundle restrictions, $r4;
        java.lang.Throwable l4, $r3;
        android.util.SparseArray $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        restrictions = (android.os.Bundle) $r2;

        if restrictions == null goto label2;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>(restrictions);

        goto label3;

     label2:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

     label3:
        exitmonitor l2;

     label4:
        return $r4;

     label5:
        $r3 := @caughtexception;

        l4 = $r3;

        exitmonitor l2;

     label6:
        throw l4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setUserRestriction(java.lang.String, boolean, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String key;
        boolean value, $z0;
        int userId;
        java.lang.Object l4, $r0;
        android.os.Bundle restrictions;
        java.lang.Throwable l6, $r2;
        java.util.Set $r1;

        this := @this: com.android.server.pm.UserManagerService;

        key := @parameter0: java.lang.String;

        value := @parameter1: boolean;

        userId := @parameter2: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setUserRestriction");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l4 = $r0;

        entermonitor $r0;

     label1:
        $r1 = <com.android.server.pm.UserManagerService: java.util.Set SYSTEM_CONTROLLED_RESTRICTIONS>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(key);

        if $z0 != 0 goto label2;

        restrictions = virtualinvoke this.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>(userId);

        virtualinvoke restrictions.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(key, value);

        specialinvoke this.<com.android.server.pm.UserManagerService: void setUserRestrictionsInternalLocked(android.os.Bundle,int)>(restrictions, userId);

     label2:
        exitmonitor l4;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        l6 = $r2;

        exitmonitor l4;

     label5:
        throw l6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setSystemControlledUserRestriction(java.lang.String, boolean, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String key;
        boolean value;
        int userId;
        java.lang.Object l4, $r0;
        android.os.Bundle restrictions;
        java.lang.Throwable l6, $r1;

        this := @this: com.android.server.pm.UserManagerService;

        key := @parameter0: java.lang.String;

        value := @parameter1: boolean;

        userId := @parameter2: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkSystemOrRoot(java.lang.String)>("setSystemControlledUserRestriction");

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l4 = $r0;

        entermonitor $r0;

     label1:
        restrictions = virtualinvoke this.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>(userId);

        virtualinvoke restrictions.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(key, value);

        specialinvoke this.<com.android.server.pm.UserManagerService: void setUserRestrictionsInternalLocked(android.os.Bundle,int)>(restrictions, userId);

        exitmonitor l4;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        l6 = $r1;

        exitmonitor l4;

     label4:
        throw l6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setUserRestrictions(android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService this;
        android.os.Bundle restrictions, oldUserRestrictions;
        int userId;
        java.lang.Object l3, $r0, $r2, $r4;
        java.util.Iterator i$;
        java.lang.String key;
        java.lang.Throwable l7, $r5;
        android.util.SparseArray $r1;
        java.util.Set $r3;
        boolean $z0, $z1, $z2;

        this := @this: com.android.server.pm.UserManagerService;

        restrictions := @parameter0: android.os.Bundle;

        userId := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setUserRestrictions");

        if restrictions != null goto label1;

        return;

     label1:
        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l3 = $r0;

        entermonitor $r0;

     label2:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        oldUserRestrictions = (android.os.Bundle) $r2;

        $r3 = <com.android.server.pm.UserManagerService: java.util.Set SYSTEM_CONTROLLED_RESTRICTIONS>;

        i$ = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $r4;

        virtualinvoke restrictions.<android.os.Bundle: void remove(java.lang.String)>(key);

        $z2 = virtualinvoke oldUserRestrictions.<android.os.Bundle: boolean containsKey(java.lang.String)>(key);

        if $z2 == 0 goto label4;

        $z1 = virtualinvoke oldUserRestrictions.<android.os.Bundle: boolean getBoolean(java.lang.String)>(key);

        virtualinvoke restrictions.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(key, $z1);

     label4:
        goto label3;

     label5:
        specialinvoke this.<com.android.server.pm.UserManagerService: void setUserRestrictionsInternalLocked(android.os.Bundle,int)>(restrictions, userId);

        exitmonitor l3;

     label6:
        goto label9;

     label7:
        $r5 := @caughtexception;

        l7 = $r5;

        exitmonitor l3;

     label8:
        throw l7;

     label9:
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void setUserRestrictionsInternalLocked(android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService this;
        android.os.Bundle restrictions, userRestrictions;
        int userId;
        long token;
        android.os.RemoteException e, $r7;
        java.lang.Throwable l7, $r6;
        android.util.SparseArray $r0, $r3;
        java.lang.Object $r1, $r4;
        com.android.internal.app.IAppOpsService $r2;
        android.content.pm.UserInfo $r5;

        this := @this: com.android.server.pm.UserManagerService;

        restrictions := @parameter0: android.os.Bundle;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        userRestrictions = (android.os.Bundle) $r1;

        virtualinvoke userRestrictions.<android.os.Bundle: void clear()>();

        virtualinvoke userRestrictions.<android.os.Bundle: void putAll(android.os.Bundle)>(restrictions);

        token = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = this.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        interfaceinvoke $r2.<com.android.internal.app.IAppOpsService: void setUserRestrictions(android.os.Bundle,int)>(userRestrictions, userId);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(token);

        goto label7;

     label3:
        $r7 := @caughtexception;

        e = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Unable to notify AppOpsService of UserRestrictions");

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(token);

        goto label7;

     label5:
        $r6 := @caughtexception;

        l7 = $r6;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(token);

        throw l7;

     label7:
        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        $r5 = (android.content.pm.UserInfo) $r4;

        specialinvoke this.<com.android.server.pm.UserManagerService: void scheduleWriteUserLocked(android.content.pm.UserInfo)>($r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean isUserLimitReachedLocked()
    {
        com.android.server.pm.UserManagerService this;
        int $i0, $i1;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        $i0 = specialinvoke this.<com.android.server.pm.UserManagerService: int getAliveUsersExcludingGuestsCountLocked()>();

        $i1 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canAddMoreManagedProfiles()
    {
        com.android.server.pm.UserManagerService this;
        java.lang.Object l1, $r2;
        int usersCount, $i0, $i1;
        java.lang.Throwable l3, $r3;
        boolean $z0, $z1, $z2;
        android.content.Context $r0;
        android.content.pm.PackageManager $r1;

        this := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("check if more managed profiles can be added.");

        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r0 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z1 = virtualinvoke $r1.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.managed_users");

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $r2 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l1 = $r2;

        entermonitor $r2;

     label03:
        $i0 = specialinvoke this.<com.android.server.pm.UserManagerService: int numberOfUsersOfTypeLocked(int,boolean)>(32, 1);

        if $i0 < 1 goto label05;

        exitmonitor l1;

     label04:
        return 0;

     label05:
        usersCount = specialinvoke this.<com.android.server.pm.UserManagerService: int getAliveUsersExcludingGuestsCountLocked()>();

        if usersCount == 1 goto label06;

        $i1 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if usersCount >= $i1 goto label07;

     label06:
        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        exitmonitor l1;

     label09:
        return $z2;

     label10:
        $r3 := @caughtexception;

        l3 = $r3;

        exitmonitor l1;

     label11:
        throw l3;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private int getAliveUsersExcludingGuestsCountLocked()
    {
        com.android.server.pm.UserManagerService this;
        int totalUserCount, $i0, aliveUserCount#1, i#2;
        android.content.pm.UserInfo user;
        android.util.SparseArray $r0, $r1;
        java.lang.Object $r2;
        android.util.SparseBooleanArray $r3;
        boolean $z0, $z1, $z2;

        this := @this: com.android.server.pm.UserManagerService;

        aliveUserCount#1 = 0;

        $r0 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        totalUserCount = virtualinvoke $r0.<android.util.SparseArray: int size()>();

        i#2 = 0;

     label1:
        if i#2 >= totalUserCount goto label3;

        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#2);

        user = (android.content.pm.UserInfo) $r2;

        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i0 = user.<android.content.pm.UserInfo: int id>;

        $z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>($i0);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke user.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z1 != 0 goto label2;

        $z2 = user.<android.content.pm.UserInfo: boolean partial>;

        if $z2 != 0 goto label2;

        aliveUserCount#1 = aliveUserCount#1 + 1;

     label2:
        i#2 = i#2 + 1;

        goto label1;

     label3:
        return aliveUserCount#1;
    }

    private static final void checkManageUsersPermission(java.lang.String)
    {
        java.lang.String message, $r4;
        int uid, $i0;
        java.lang.SecurityException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;

        message := @parameter0: java.lang.String;

        uid = staticinvoke <android.os.Binder: int getCallingUid()>();

        if uid == 1000 goto label1;

        if uid == 0 goto label1;

        $i0 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>("android.permission.MANAGE_USERS", uid, -1, 1);

        if $i0 == 0 goto label1;

        $r0 = new java.lang.SecurityException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need MANAGE_USERS permission to: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return;
    }

    private static void checkSystemOrRoot(java.lang.String)
    {
        java.lang.String message, $r4;
        int uid;
        java.lang.SecurityException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;

        message := @parameter0: java.lang.String;

        uid = staticinvoke <android.os.Binder: int getCallingUid()>();

        if uid == 1000 goto label1;

        if uid == 0 goto label1;

        $r0 = new java.lang.SecurityException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only system may call: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return;
    }

    private void writeBitmapLocked(android.content.pm.UserInfo, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService this;
        android.content.pm.UserInfo info;
        android.graphics.Bitmap bitmap;
        java.io.File file, tmp, $r0, $r1, $r3, $r4, dir#1;
        java.io.FileOutputStream os, $r5;
        java.io.IOException l7, $r10;
        int $i0;
        java.lang.String $r2, $r7, $r8;
        boolean $z0, $z2, $z3;
        android.graphics.Bitmap$CompressFormat $r6;
        java.io.FileNotFoundException $r9, dir#2;

        this := @this: com.android.server.pm.UserManagerService;

        info := @parameter0: android.content.pm.UserInfo;

        bitmap := @parameter1: android.graphics.Bitmap;

     label1:
        $r0 = new java.io.File;

        $r1 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $i0 = info.<android.content.pm.UserInfo: int id>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r2);

        dir#1 = $r0;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(dir#1, "photo.png");

        file = $r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(dir#1, "photo.png.tmp");

        tmp = $r4;

        $z0 = virtualinvoke dir#1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        virtualinvoke dir#1.<java.io.File: boolean mkdir()>();

        $r8 = virtualinvoke dir#1.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r8, 505, -1, -1);

     label2:
        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(tmp);

        os = $r5;

        $z2 = virtualinvoke bitmap.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 100, $r5);

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke tmp.<java.io.File: boolean renameTo(java.io.File)>(file);

        if $z3 == 0 goto label3;

        $r7 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        info.<android.content.pm.UserInfo: java.lang.String iconPath> = $r7;

     label3:
        virtualinvoke os.<java.io.FileOutputStream: void close()>();

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        l7 = $r10;

     label6:
        virtualinvoke tmp.<java.io.File: boolean delete()>();

     label7:
        goto label9;

     label8:
        $r9 := @caughtexception;

        dir#2 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Error setting photo for user ", dir#2);

     label9:
        return;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.io.FileNotFoundException from label1 to label7 with label8;
    }

    public int[] getUserIds()
    {
        com.android.server.pm.UserManagerService this;
        java.lang.Object l1, $r0;
        java.lang.Throwable l2, $r2;
        int[] $r1;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        exitmonitor l1;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        l2 = $r2;

        exitmonitor l1;

     label4:
        throw l2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    int[] getUserIdsLPr()
    {
        com.android.server.pm.UserManagerService this;
        int[] $r0;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        return $r0;
    }

    private void readUserListLocked()
    {
        com.android.server.pm.UserManagerService this;
        android.util.AtomicFile userListFile, tmp$1111389418;
        android.content.pm.UserInfo user;
        java.lang.Throwable l8, $r16;
        java.io.IOException l9, $r9, $r10, $r11, $r13, $r14, $r15, lastSerialNumber#4, parser#11, parser#12, parser#13, parser#15;
        java.io.File $r0, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r5, $r6, lastSerialNumber#5, versionNumber#6, lastSerialNumber#8, versionNumber#9;
        java.nio.charset.Charset $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, type#3, type#7, type#10;
        android.os.Bundle $r7;
        android.util.SparseArray $r8;
        org.xmlpull.v1.XmlPullParserException $r12, parser#14;
        java.io.FileInputStream fis#1;
        org.xmlpull.v1.XmlPullParser parser#2;
        java.io.InputStream tmp$584202441;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        specialinvoke this.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

        return;

     label01:
        fis#1 = null;

        tmp$1111389418 = new android.util.AtomicFile;

        $r2 = this.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke tmp$1111389418.<android.util.AtomicFile: void <init>(java.io.File)>($r2);

        userListFile = tmp$1111389418;

     label02:
        fis#1 = virtualinvoke userListFile.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        parser#2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        tmp$584202441 = (java.io.InputStream) fis#1;

        interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(tmp$584202441, $r3);

     label03:
        $i0 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#3 = $i0;

        if $i0 == 2 goto label04;

        if type#3 == 1 goto label04;

        goto label03;

     label04:
        if type#3 == 2 goto label10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Unable to read user list");

        specialinvoke this.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label05:
        if fis#1 == null goto label09;

     label06:
        virtualinvoke fis#1.<java.io.FileInputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r15 := @caughtexception;

        lastSerialNumber#4 = $r15;

     label09:
        return;

     label10:
        this.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = -1;

        $r5 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("users");

        if $z1 == 0 goto label12;

        lastSerialNumber#5 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nextSerialNumber");

        if lastSerialNumber#5 == null goto label11;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(lastSerialNumber#5);

        this.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i10;

     label11:
        versionNumber#6 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        if versionNumber#6 == null goto label12;

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(versionNumber#6);

        this.<com.android.server.pm.UserManagerService: int mUserVersion> = $i12;

     label12:
        $i1 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#7 = $i1;

        if $i1 == 1 goto label18;

        if type#7 != 2 goto label12;

        lastSerialNumber#8 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke lastSerialNumber#8.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z2 == 0 goto label15;

        versionNumber#9 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(versionNumber#9);

        user = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo readUserLocked(int)>($i3);

        if user == null goto label14;

        $r8 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i6 = user.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, user);

        $i4 = this.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        if $i4 < 0 goto label13;

        $i7 = this.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $i9 = user.<android.content.pm.UserInfo: int id>;

        if $i7 > $i9 goto label14;

     label13:
        $i5 = user.<android.content.pm.UserInfo: int id>;

        $i8 = $i5 + 1;

        this.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i8;

     label14:
        goto label17;

     label15:
        $z3 = virtualinvoke lastSerialNumber#8.<java.lang.String: boolean equals(java.lang.Object)>("guestRestrictions");

        if $z3 == 0 goto label17;

     label16:
        $i2 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#10 = $i2;

        if $i2 == 1 goto label17;

        if type#10 == 3 goto label17;

        if type#10 != 2 goto label16;

        $r6 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("restrictions");

        if $z4 == 0 goto label17;

        $r7 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        specialinvoke this.<com.android.server.pm.UserManagerService: void readRestrictionsLocked(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>(parser#2, $r7);

        goto label17;

     label17:
        goto label12;

     label18:
        specialinvoke this.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void upgradeIfNecessaryLocked()>();

     label19:
        if fis#1 == null goto label39;

     label20:
        virtualinvoke fis#1.<java.io.FileInputStream: void close()>();

     label21:
        goto label39;

     label22:
        $r13 := @caughtexception;

        parser#11 = $r13;

        goto label39;

     label23:
        $r14 := @caughtexception;

        parser#12 = $r14;

        specialinvoke this.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label24:
        if fis#1 == null goto label39;

     label25:
        virtualinvoke fis#1.<java.io.FileInputStream: void close()>();

     label26:
        goto label39;

     label27:
        $r10 := @caughtexception;

        parser#13 = $r10;

        goto label39;

     label28:
        $r12 := @caughtexception;

        parser#14 = $r12;

        specialinvoke this.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label29:
        if fis#1 == null goto label39;

     label30:
        virtualinvoke fis#1.<java.io.FileInputStream: void close()>();

     label31:
        goto label39;

     label32:
        $r11 := @caughtexception;

        parser#15 = $r11;

        goto label39;

     label33:
        $r16 := @caughtexception;

        l8 = $r16;

     label34:
        if fis#1 == null goto label38;

     label35:
        virtualinvoke fis#1.<java.io.FileInputStream: void close()>();

     label36:
        goto label38;

     label37:
        $r9 := @caughtexception;

        l9 = $r9;

     label38:
        throw l8;

     label39:
        return;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label02 to label05 with label23;
        catch java.io.IOException from label10 to label19 with label23;
        catch java.io.IOException from label25 to label26 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label05 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label19 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.lang.Throwable from label02 to label05 with label33;
        catch java.lang.Throwable from label10 to label19 with label33;
        catch java.lang.Throwable from label23 to label24 with label33;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.lang.Throwable from label33 to label34 with label33;
    }

    private void upgradeIfNecessaryLocked()
    {
        com.android.server.pm.UserManagerService this;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4;
        int $i0, $i2, $i3, $i4, $i5, userVersion#1;
        java.lang.String $r5, $r10, $r11, $r13;
        android.util.SparseArray $r6, $r9;
        java.lang.Object $r7, $r8;
        android.content.Context $r12;
        boolean $z0;
        android.content.res.Resources $r14;
        android.content.pm.UserInfo user#2, user#3;

        this := @this: com.android.server.pm.UserManagerService;

        userVersion#1 = this.<com.android.server.pm.UserManagerService: int mUserVersion>;

        if userVersion#1 >= 1 goto label2;

        $r9 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(0);

        user#2 = (android.content.pm.UserInfo) $r8;

        $r10 = "Primary";

        $r11 = user#2.<android.content.pm.UserInfo: java.lang.String name>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label1;

        $r12 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r14 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>(17040619);

        user#2.<android.content.pm.UserInfo: java.lang.String name> = $r13;

        specialinvoke this.<com.android.server.pm.UserManagerService: void scheduleWriteUserLocked(android.content.pm.UserInfo)>(user#2);

     label1:
        userVersion#1 = 1;

     label2:
        if userVersion#1 >= 2 goto label4;

        $r6 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(0);

        user#3 = (android.content.pm.UserInfo) $r7;

        $i2 = user#3.<android.content.pm.UserInfo: int flags>;

        $i3 = $i2 & 16;

        if $i3 != 0 goto label3;

        $i5 = user#3.<android.content.pm.UserInfo: int flags>;

        $i4 = $i5 | 16;

        user#3.<android.content.pm.UserInfo: int flags> = $i4;

        specialinvoke this.<com.android.server.pm.UserManagerService: void scheduleWriteUserLocked(android.content.pm.UserInfo)>(user#3);

     label3:
        userVersion#1 = 2;

     label4:
        if userVersion#1 >= 4 goto label5;

        userVersion#1 = 4;

     label5:
        if userVersion#1 >= 5 goto label6;

        specialinvoke this.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        userVersion#1 = 5;

     label6:
        if userVersion#1 >= 5 goto label7;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User version ");

        $i0 = this.<com.android.server.pm.UserManagerService: int mUserVersion>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t upgrade as expected to ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r5);

        goto label8;

     label7:
        this.<com.android.server.pm.UserManagerService: int mUserVersion> = userVersion#1;

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

     label8:
        return;
    }

    private void fallbackToSingleUserLocked()
    {
        com.android.server.pm.UserManagerService this;
        android.content.pm.UserInfo primary, $r0;
        android.os.Bundle restrictions, $r5;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;
        android.util.SparseArray $r4, $r6;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = new android.content.pm.UserInfo;

        $r1 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17040619);

        specialinvoke $r0.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(0, $r3, null, 19);

        primary = $r0;

        $r4 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(0, primary);

        this.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = 10;

        this.<com.android.server.pm.UserManagerService: int mUserVersion> = 5;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        restrictions = $r5;

        $r6 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r6.<android.util.SparseArray: void append(int,java.lang.Object)>(0, restrictions);

        specialinvoke this.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(primary);

        return;
    }

    private void scheduleWriteUserLocked(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService this;
        android.content.pm.UserInfo userInfo;
        android.os.Message msg;
        android.os.Handler $r0, $r1, $r2;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        userInfo := @parameter0: android.content.pm.UserInfo;

        $r0 = this.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r0.<android.os.Handler: boolean hasMessages(int,java.lang.Object)>(1, userInfo);

        if $z0 != 0 goto label1;

        $r1 = this.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        msg = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, userInfo);

        $r2 = this.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(msg, 2000L);

     label1:
        return;
    }

    private void writeUserLocked(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService this;
        android.content.pm.UserInfo userInfo;
        android.util.AtomicFile userFile, $r0;
        com.android.internal.util.FastXmlSerializer serializer, $r7;
        android.os.Bundle restrictions;
        java.io.File $r1, $r3;
        java.lang.StringBuilder $r2, $r4, $r5, $r34, $r39, $r41, $r42, $r43;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i10;
        java.lang.String $r6, $r9, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r31, $r38, $r40;
        java.io.BufferedOutputStream $r8, bos#2;
        java.nio.charset.Charset $r10;
        java.lang.Boolean $r11;
        long $l4, $l5;
        boolean $z0, $z1;
        java.lang.Object $r29;
        android.util.SparseArray $r30;
        java.lang.Exception $r33, bos#3;
        java.io.FileOutputStream fos#1;

        this := @this: com.android.server.pm.UserManagerService;

        userInfo := @parameter0: android.content.pm.UserInfo;

        fos#1 = null;

        $r0 = new android.util.AtomicFile;

        $r1 = new java.io.File;

        $r3 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = userInfo.<android.content.pm.UserInfo: int id>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r6);

        specialinvoke $r0.<android.util.AtomicFile: void <init>(java.io.File)>($r1);

        userFile = $r0;

     label1:
        fos#1 = virtualinvoke userFile.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r8 = new java.io.BufferedOutputStream;

        specialinvoke $r8.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(fos#1);

        bos#2 = $r8;

        $r7 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r7.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        serializer = $r7;

        $r10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r9 = virtualinvoke $r10.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(bos#2, $r9);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r11);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

        $i1 = userInfo.<android.content.pm.UserInfo: int id>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r14);

        $i2 = userInfo.<android.content.pm.UserInfo: int serialNumber>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "serialNumber", $r15);

        $i3 = userInfo.<android.content.pm.UserInfo: int flags>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r17);

        $l4 = userInfo.<android.content.pm.UserInfo: long creationTime>;

        $r20 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "created", $r20);

        $l5 = userInfo.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $r21 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lastLoggedIn", $r21);

        $r23 = userInfo.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r23 == null goto label2;

        $r38 = userInfo.<android.content.pm.UserInfo: java.lang.String iconPath>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r38);

     label2:
        $z1 = userInfo.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label3;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "partial", "true");

     label3:
        $z0 = userInfo.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z0 == 0 goto label4;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "guestToRemove", "true");

     label4:
        $i6 = userInfo.<android.content.pm.UserInfo: int profileGroupId>;

        if $i6 == -1 goto label5;

        $i8 = userInfo.<android.content.pm.UserInfo: int profileGroupId>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "profileGroupId", $r31);

     label5:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "name");

        $r26 = userInfo.<android.content.pm.UserInfo: java.lang.String name>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r26);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "name");

        $r30 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $i7 = userInfo.<android.content.pm.UserInfo: int id>;

        $r29 = virtualinvoke $r30.<android.util.SparseArray: java.lang.Object get(int)>($i7);

        restrictions = (android.os.Bundle) $r29;

        if restrictions == null goto label6;

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeRestrictionsLocked(org.xmlpull.v1.XmlSerializer,android.os.Bundle)>(serializer, restrictions);

     label6:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke userFile.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(fos#1);

     label7:
        goto label9;

     label8:
        $r33 := @caughtexception;

        bos#3 = $r33;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing user info ");

        $i10 = userInfo.<android.content.pm.UserInfo: int id>;

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r39 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(bos#3);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r40);

        virtualinvoke userFile.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(fos#1);

     label9:
        return;

        catch java.lang.Exception from label1 to label7 with label8;
    }

    private void writeUserListLocked()
    {
        com.android.server.pm.UserManagerService this;
        android.util.AtomicFile userListFile, $r0;
        com.android.internal.util.FastXmlSerializer serializer, $r3;
        android.content.pm.UserInfo user;
        java.io.File $r1;
        java.io.BufferedOutputStream $r2, bos#2;
        java.nio.charset.Charset $r4;
        java.lang.String $r5, $r9, $r10, $r20;
        java.lang.Boolean $r6;
        int $i0, $i1, $i2, $i3, i#3;
        android.os.Bundle $r14;
        android.util.SparseArray $r15, $r19;
        java.lang.Object $r16;
        java.lang.Exception $r21, bos#4;
        java.io.FileOutputStream fos#1;

        this := @this: com.android.server.pm.UserManagerService;

        fos#1 = null;

        $r0 = new android.util.AtomicFile;

        $r1 = this.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke $r0.<android.util.AtomicFile: void <init>(java.io.File)>($r1);

        userListFile = $r0;

     label1:
        fos#1 = virtualinvoke userListFile.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r2 = new java.io.BufferedOutputStream;

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(fos#1);

        bos#2 = $r2;

        $r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        serializer = $r3;

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(bos#2, $r5);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "users");

        $i0 = this.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nextSerialNumber", $r9);

        $i1 = this.<com.android.server.pm.UserManagerService: int mUserVersion>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r10);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "guestRestrictions");

        $r14 = this.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeRestrictionsLocked(org.xmlpull.v1.XmlSerializer,android.os.Bundle)>(serializer, $r14);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "guestRestrictions");

        i#3 = 0;

     label2:
        $r15 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i2 = virtualinvoke $r15.<android.util.SparseArray: int size()>();

        if i#3 >= $i2 goto label3;

        $r19 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r16 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#3);

        user = (android.content.pm.UserInfo) $r16;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

        $i3 = user.<android.content.pm.UserInfo: int id>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r20);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

        i#3 = i#3 + 1;

        goto label2;

     label3:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "users");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke userListFile.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(fos#1);

     label4:
        goto label6;

     label5:
        $r21 := @caughtexception;

        bos#4 = $r21;

        virtualinvoke userListFile.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(fos#1);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error writing user list");

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    private void writeRestrictionsLocked(org.xmlpull.v1.XmlSerializer, android.os.Bundle) throws java.io.IOException
    {
        com.android.server.pm.UserManagerService this;
        org.xmlpull.v1.XmlSerializer serializer;
        android.os.Bundle restrictions;

        this := @this: com.android.server.pm.UserManagerService;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        restrictions := @parameter1: android.os.Bundle;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restrictions");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_config_wifi");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_modify_accounts");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_install_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_uninstall_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_share_location");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_install_unknown_sources");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_config_bluetooth");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_usb_file_transfer");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_config_credentials");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_remove_user");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_debugging_features");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_config_vpn");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_config_tethering");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_network_reset");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_factory_reset");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_add_user");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "ensure_verify_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_config_cell_broadcasts");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_config_mobile_networks");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_control_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_physical_media");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_unmute_microphone");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_adjust_volume");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_outgoing_calls");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_sms");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_fun");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_create_windows");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_cross_profile_copy_paste");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_outgoing_beam");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_wallpaper");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "no_safe_boot");

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(serializer, restrictions, "allow_parent_profile_app_linking");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restrictions");

        return;
    }

    private android.content.pm.UserInfo readUserLocked(int)
    {
        com.android.server.pm.UserManagerService this;
        int id, $i0, $i1, $i2, flags#1, serialNumber#2, profileGroupId#7, type#12, storedId#15, outerDepth#20, type#21, type#22;
        android.os.Bundle restrictions, tmp$452557226;
        org.xmlpull.v1.XmlPullParser parser;
        java.lang.String tag, $r4, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r20, name#3, iconPath#4, valueString#18, valueString#19;
        java.lang.Throwable l22, $r29;
        java.io.File $r5, tmp$875765851;
        java.lang.StringBuilder $r6, $r7, $r18, $r19, tmp$1108632002, tmp$204444377;
        java.nio.charset.Charset $r8;
        android.util.SparseArray $r11;
        boolean $z0, $z1, $z2, $z3, $z4, partial#8, guestToRemove#9;
        java.io.IOException $r22, $r23, $r24, $r25, $r27, $r28, $r30;
        org.xmlpull.v1.XmlPullParserException $r26;
        long creationTime#5, lastLoggedInTime#6;
        java.io.FileInputStream fis#10;
        android.util.AtomicFile userFile#11, tmp$2087048505;
        android.content.pm.UserInfo storedId#23, valueString#24, tmp$319733706;
        java.io.InputStream tmp$2015933155;

        this := @this: com.android.server.pm.UserManagerService;

        id := @parameter0: int;

        flags#1 = 0;

        serialNumber#2 = id;

        name#3 = null;

        iconPath#4 = null;

        creationTime#5 = 0L;

        lastLoggedInTime#6 = 0L;

        profileGroupId#7 = -1;

        partial#8 = 0;

        guestToRemove#9 = 0;

        tmp$452557226 = new android.os.Bundle;

        specialinvoke tmp$452557226.<android.os.Bundle: void <init>()>();

        restrictions = tmp$452557226;

        fis#10 = null;

     label01:
        tmp$2087048505 = new android.util.AtomicFile;

        tmp$875765851 = new java.io.File;

        $r5 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        tmp$1108632002 = new java.lang.StringBuilder;

        specialinvoke tmp$1108632002.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(id);

        $r7 = virtualinvoke tmp$1108632002.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$875765851.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r9);

        specialinvoke tmp$2087048505.<android.util.AtomicFile: void <init>(java.io.File)>(tmp$875765851);

        userFile#11 = tmp$2087048505;

        fis#10 = virtualinvoke userFile#11.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        parser = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r12 = virtualinvoke $r8.<java.nio.charset.Charset: java.lang.String name()>();

        tmp$2015933155 = (java.io.InputStream) fis#10;

        interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(tmp$2015933155, $r12);

     label02:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#12 = $i0;

        if $i0 == 2 goto label03;

        if type#12 == 1 goto label03;

        goto label02;

     label03:
        if type#12 == 2 goto label09;

        tmp$204444377 = new java.lang.StringBuilder;

        specialinvoke tmp$204444377.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke tmp$204444377.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read user ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(id);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r20);

     label04:
        if fis#10 == null goto label08;

     label05:
        virtualinvoke fis#10.<java.io.FileInputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

     label08:
        return null;

     label09:
        if type#12 != 2 goto label23;

        $r13 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z0 == 0 goto label23;

        storedId#15 = specialinvoke this.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser, "id", -1);

        if storedId#15 == id goto label15;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "User id does not match the file name");

     label10:
        if fis#10 == null goto label14;

     label11:
        virtualinvoke fis#10.<java.io.FileInputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r28 := @caughtexception;

     label14:
        return null;

     label15:
        serialNumber#2 = specialinvoke this.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser, "serialNumber", id);

        flags#1 = specialinvoke this.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser, "flags", 0);

        iconPath#4 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "icon");

        creationTime#5 = specialinvoke this.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(parser, "created", 0L);

        lastLoggedInTime#6 = specialinvoke this.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(parser, "lastLoggedIn", 0L);

        profileGroupId#7 = specialinvoke this.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser, "profileGroupId", -1);

        valueString#18 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "partial");

        $r14 = "true";

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(valueString#18);

        if $z1 == 0 goto label16;

        partial#8 = 1;

     label16:
        valueString#19 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "guestToRemove");

        $r15 = "true";

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(valueString#19);

        if $z2 == 0 goto label17;

        guestToRemove#9 = 1;

     label17:
        outerDepth#20 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label18:
        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#21 = $i1;

        if $i1 == 1 goto label23;

        if type#21 != 3 goto label19;

        $i2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= outerDepth#20 goto label23;

     label19:
        if type#21 == 3 goto label18;

        if type#21 != 4 goto label20;

        goto label18;

     label20:
        tag = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r16 = "name";

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(tag);

        if $z3 == 0 goto label21;

        type#22 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        if type#22 != 4 goto label22;

        name#3 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        goto label22;

     label21:
        $r17 = "restrictions";

        $z4 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(tag);

        if $z4 == 0 goto label22;

        specialinvoke this.<com.android.server.pm.UserManagerService: void readRestrictionsLocked(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>(parser, restrictions);

     label22:
        goto label18;

     label23:
        tmp$319733706 = new android.content.pm.UserInfo;

        specialinvoke tmp$319733706.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(id, name#3, iconPath#4, flags#1);

        storedId#23 = tmp$319733706;

        storedId#23.<android.content.pm.UserInfo: int serialNumber> = serialNumber#2;

        storedId#23.<android.content.pm.UserInfo: long creationTime> = creationTime#5;

        storedId#23.<android.content.pm.UserInfo: long lastLoggedInTime> = lastLoggedInTime#6;

        storedId#23.<android.content.pm.UserInfo: boolean partial> = partial#8;

        storedId#23.<android.content.pm.UserInfo: boolean guestToRemove> = guestToRemove#9;

        storedId#23.<android.content.pm.UserInfo: int profileGroupId> = profileGroupId#7;

        $r11 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r11.<android.util.SparseArray: void append(int,java.lang.Object)>(id, restrictions);

        valueString#24 = storedId#23;

     label24:
        if fis#10 == null goto label28;

     label25:
        virtualinvoke fis#10.<java.io.FileInputStream: void close()>();

     label26:
        goto label28;

     label27:
        $r23 := @caughtexception;

     label28:
        return valueString#24;

     label29:
        $r22 := @caughtexception;

     label30:
        if fis#10 == null goto label45;

     label31:
        virtualinvoke fis#10.<java.io.FileInputStream: void close()>();

     label32:
        goto label45;

     label33:
        $r30 := @caughtexception;

        goto label45;

     label34:
        $r26 := @caughtexception;

     label35:
        if fis#10 == null goto label45;

     label36:
        virtualinvoke fis#10.<java.io.FileInputStream: void close()>();

     label37:
        goto label45;

     label38:
        $r25 := @caughtexception;

        goto label45;

     label39:
        $r29 := @caughtexception;

        l22 = $r29;

     label40:
        if fis#10 == null goto label44;

     label41:
        virtualinvoke fis#10.<java.io.FileInputStream: void close()>();

     label42:
        goto label44;

     label43:
        $r24 := @caughtexception;

     label44:
        throw l22;

     label45:
        return null;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.io.IOException from label01 to label04 with label29;
        catch java.io.IOException from label09 to label10 with label29;
        catch java.io.IOException from label15 to label24 with label29;
        catch java.io.IOException from label31 to label32 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label04 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label24 with label34;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.lang.Throwable from label01 to label04 with label39;
        catch java.lang.Throwable from label09 to label10 with label39;
        catch java.lang.Throwable from label15 to label24 with label39;
        catch java.lang.Throwable from label29 to label30 with label39;
        catch java.lang.Throwable from label34 to label35 with label39;
        catch java.io.IOException from label41 to label42 with label43;
        catch java.lang.Throwable from label39 to label40 with label39;
    }

    private void readRestrictionsLocked(org.xmlpull.v1.XmlPullParser, android.os.Bundle) throws java.io.IOException
    {
        com.android.server.pm.UserManagerService this;
        org.xmlpull.v1.XmlPullParser parser;
        android.os.Bundle restrictions;

        this := @this: com.android.server.pm.UserManagerService;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        restrictions := @parameter1: android.os.Bundle;

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_config_wifi");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_modify_accounts");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_install_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_uninstall_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_share_location");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_install_unknown_sources");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_config_bluetooth");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_usb_file_transfer");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_config_credentials");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_remove_user");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_debugging_features");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_config_vpn");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_config_tethering");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_network_reset");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_factory_reset");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_add_user");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "ensure_verify_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_config_cell_broadcasts");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_config_mobile_networks");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_control_apps");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_physical_media");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_unmute_microphone");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_adjust_volume");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_outgoing_calls");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_sms");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_fun");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_create_windows");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_cross_profile_copy_paste");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_outgoing_beam");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_wallpaper");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "no_safe_boot");

        specialinvoke this.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(parser, restrictions, "allow_parent_profile_app_linking");

        return;
    }

    private void readBoolean(org.xmlpull.v1.XmlPullParser, android.os.Bundle, java.lang.String)
    {
        com.android.server.pm.UserManagerService this;
        org.xmlpull.v1.XmlPullParser parser;
        android.os.Bundle restrictions;
        java.lang.String restrictionKey, value;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        restrictions := @parameter1: android.os.Bundle;

        restrictionKey := @parameter2: java.lang.String;

        value = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, restrictionKey);

        if value == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(value);

        virtualinvoke restrictions.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(restrictionKey, $z0);

     label1:
        return;
    }

    private void writeBoolean(org.xmlpull.v1.XmlSerializer, android.os.Bundle, java.lang.String) throws java.io.IOException
    {
        com.android.server.pm.UserManagerService this;
        org.xmlpull.v1.XmlSerializer xml;
        android.os.Bundle restrictions;
        java.lang.String restrictionKey, $r0;
        boolean $z0, $z1;

        this := @this: com.android.server.pm.UserManagerService;

        xml := @parameter0: org.xmlpull.v1.XmlSerializer;

        restrictions := @parameter1: android.os.Bundle;

        restrictionKey := @parameter2: java.lang.String;

        $z0 = virtualinvoke restrictions.<android.os.Bundle: boolean containsKey(java.lang.String)>(restrictionKey);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke restrictions.<android.os.Bundle: boolean getBoolean(java.lang.String)>(restrictionKey);

        $r0 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke xml.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, restrictionKey, $r0);

     label1:
        return;
    }

    private int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService this;
        org.xmlpull.v1.XmlPullParser parser;
        java.lang.String attr, valueString;
        int defaultValue, $i0;
        java.lang.NumberFormatException nfe, $r0;

        this := @this: com.android.server.pm.UserManagerService;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        attr := @parameter1: java.lang.String;

        defaultValue := @parameter2: int;

        valueString = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, attr);

        if valueString != null goto label1;

        return defaultValue;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(valueString);

     label2:
        return $i0;

     label3:
        $r0 := @caughtexception;

        nfe = $r0;

        return defaultValue;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        com.android.server.pm.UserManagerService this;
        org.xmlpull.v1.XmlPullParser parser;
        java.lang.String attr, valueString;
        long defaultValue, $l0;
        java.lang.NumberFormatException nfe, $r0;

        this := @this: com.android.server.pm.UserManagerService;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        attr := @parameter1: java.lang.String;

        defaultValue := @parameter2: long;

        valueString = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, attr);

        if valueString != null goto label1;

        return defaultValue;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(valueString);

     label2:
        return $l0;

     label3:
        $r0 := @caughtexception;

        nfe = $r0;

        return defaultValue;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean isPackageInstalled(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String pkg;
        int userId, $i0, $i1;
        android.content.pm.ApplicationInfo info;
        com.android.server.pm.PackageManagerService $r0;

        this := @this: com.android.server.pm.UserManagerService;

        pkg := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        info = virtualinvoke $r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(pkg, 8192, userId);

        if info == null goto label1;

        $i0 = info.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 8388608;

        if $i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private void cleanAppRestrictions(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId, len$, i$#1;
        java.lang.Object l2, $r0;
        java.io.File dir, resFile, $r1;
        java.lang.String[] files, arr$;
        java.lang.String fileName;
        java.lang.Throwable l10, $r2;
        boolean $z0, $z1;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label01:
        dir = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(userId);

        files = virtualinvoke dir.<java.io.File: java.lang.String[] list()>();

        if files != null goto label03;

        exitmonitor l2;

     label02:
        return;

     label03:
        arr$ = files;

        len$ = lengthof arr$;

        i$#1 = 0;

     label04:
        if i$#1 >= len$ goto label06;

        fileName = arr$[i$#1];

        $z0 = virtualinvoke fileName.<java.lang.String: boolean startsWith(java.lang.String)>("res_");

        if $z0 == 0 goto label05;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(dir, fileName);

        resFile = $r1;

        $z1 = virtualinvoke resFile.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label05;

        virtualinvoke resFile.<java.io.File: boolean delete()>();

     label05:
        i$#1 = i$#1 + 1;

        goto label04;

     label06:
        exitmonitor l2;

     label07:
        goto label10;

     label08:
        $r2 := @caughtexception;

        l10 = $r2;

        exitmonitor l2;

     label09:
        throw l10;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void cleanAppRestrictionsForPackage(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String pkg, $r2;
        int userId;
        java.lang.Object l3, $r0;
        java.io.File dir, resFile, $r1;
        java.lang.Throwable l6, $r3;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        pkg := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l3 = $r0;

        entermonitor $r0;

     label1:
        dir = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(userId);

        $r1 = new java.io.File;

        $r2 = specialinvoke this.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(pkg);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(dir, $r2);

        resFile = $r1;

        $z0 = virtualinvoke resFile.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        virtualinvoke resFile.<java.io.File: boolean delete()>();

     label2:
        exitmonitor l3;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        l6 = $r3;

        exitmonitor l3;

     label5:
        throw l6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.pm.UserInfo createProfileForUser(java.lang.String, int, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String name;
        int flags, userId;
        android.content.pm.UserInfo $r0;

        this := @this: com.android.server.pm.UserManagerService;

        name := @parameter0: java.lang.String;

        flags := @parameter1: int;

        userId := @parameter2: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can create users");

        if userId == 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", "Only user owner can have profiles");

        return null;

     label1:
        $r0 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternal(java.lang.String,int,int)>(name, flags, userId);

        return $r0;
    }

    public android.content.pm.UserInfo createUser(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String name;
        int flags;
        android.content.pm.UserInfo $r0;

        this := @this: com.android.server.pm.UserManagerService;

        name := @parameter0: java.lang.String;

        flags := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can create users");

        $r0 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternal(java.lang.String,int,int)>(name, flags, -10000);

        return $r0;
    }

    private android.content.pm.UserInfo createUserInternal(java.lang.String, int, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String name, volumeUuid, $r20;
        int flags, parentId, userId, $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        boolean isGuest, isManagedProfile, $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        long ident, now#11, $l12;
        java.lang.Object l11, $r1, $r2, $r6, $r14, addedIntent#4;
        android.os.storage.StorageManager storage;
        android.os.storage.VolumeInfo vol;
        java.lang.Throwable l21, l20, l22, $r23, $r24, $r25;
        android.os.Bundle $r0, $r11, i$#16;
        android.content.pm.UserInfo $r3, $r17, parent#5, userInfo#10;
        java.io.File $r4, userDir#14;
        byte $b6;
        android.content.Context $r5, $r15;
        android.util.SparseArray $r7, $r10;
        com.android.server.pm.PackageManagerService $r8, $r13;
        java.util.List $r9;
        android.content.Intent $r12, addedIntent#17;
        android.os.UserHandle $r16;
        java.lang.StringBuilder $r18, $r19, $r22;
        java.io.IOException $r21, userDir#15;
        java.util.Iterator i$#13;

        this := @this: com.android.server.pm.UserManagerService;

        name := @parameter0: java.lang.String;

        flags := @parameter1: int;

        parentId := @parameter2: int;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r0 = virtualinvoke this.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i0);

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_add_user", 0);

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Cannot add user. DISALLOW_ADD_USER is enabled.");

        return null;

     label01:
        $z1 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z1 == 0 goto label02;

        return null;

     label02:
        $i1 = flags & 4;

        if $i1 == 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        isGuest = $z5;

        $i2 = flags & 32;

        if $i2 == 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        isManagedProfile = $z6;

        ident = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label07:
        $r2 = this.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        addedIntent#4 = $r2;

        entermonitor $r2;

     label08:
        $r1 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l11 = $r1;

        entermonitor $r1;

     label09:
        parent#5 = null;

        if parentId == -10000 goto label12;

        parent#5 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(parentId);

        if parent#5 != null goto label12;

        exitmonitor l11;

     label10:
        exitmonitor addedIntent#4;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return null;

     label12:
        if isManagedProfile == 0 goto label15;

        $z4 = virtualinvoke this.<com.android.server.pm.UserManagerService: boolean canAddMoreManagedProfiles()>();

        if $z4 != 0 goto label15;

        exitmonitor l11;

     label13:
        exitmonitor addedIntent#4;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return null;

     label15:
        if isGuest != 0 goto label18;

        if isManagedProfile != 0 goto label18;

        $z3 = specialinvoke this.<com.android.server.pm.UserManagerService: boolean isUserLimitReachedLocked()>();

        if $z3 == 0 goto label18;

        exitmonitor l11;

     label16:
        exitmonitor addedIntent#4;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return null;

     label18:
        if isGuest == 0 goto label21;

        $r17 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo findCurrentGuestUserLocked()>();

        if $r17 == null goto label21;

        exitmonitor l11;

     label19:
        exitmonitor addedIntent#4;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return null;

     label21:
        userId = specialinvoke this.<com.android.server.pm.UserManagerService: int getNextAvailableIdLocked()>();

        $r3 = new android.content.pm.UserInfo;

        specialinvoke $r3.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(userId, name, null, flags);

        userInfo#10 = $r3;

        $i3 = this.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $i4 = $i3 + 1;

        this.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i4;

        userInfo#10.<android.content.pm.UserInfo: int serialNumber> = $i3;

        now#11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b6 = now#11 cmp 946080000000L;

        if $b6 <= 0 goto label22;

        $l12 = now#11;

        goto label23;

     label22:
        $l12 = 0L;

     label23:
        userInfo#10.<android.content.pm.UserInfo: long creationTime> = $l12;

        userInfo#10.<android.content.pm.UserInfo: boolean partial> = 1;

        $i5 = userInfo#10.<android.content.pm.UserInfo: int id>;

        $r4 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>($i5);

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r7 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(userId, userInfo#10);

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        if parent#5 == null goto label25;

        $i9 = parent#5.<android.content.pm.UserInfo: int profileGroupId>;

        if $i9 != -1 goto label24;

        $i11 = parent#5.<android.content.pm.UserInfo: int id>;

        parent#5.<android.content.pm.UserInfo: int profileGroupId> = $i11;

        specialinvoke this.<com.android.server.pm.UserManagerService: void scheduleWriteUserLocked(android.content.pm.UserInfo)>(parent#5);

     label24:
        $i8 = parent#5.<android.content.pm.UserInfo: int profileGroupId>;

        userInfo#10.<android.content.pm.UserInfo: int profileGroupId> = $i8;

     label25:
        $r5 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "android/os/storage/StorageManager");

        storage = (android.os.storage.StorageManager) $r6;

        $r9 = virtualinvoke storage.<android.os.storage.StorageManager: java.util.List getWritablePrivateVolumes()>();

        i$#13 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z2 = interfaceinvoke i$#13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label31;

        $r14 = interfaceinvoke i$#13.<java.util.Iterator: java.lang.Object next()>();

        vol = (android.os.storage.VolumeInfo) $r14;

        volumeUuid = virtualinvoke vol.<android.os.storage.VolumeInfo: java.lang.String getFsUuid()>();

     label27:
        userDir#14 = staticinvoke <android.os.Environment: java.io.File getDataUserDirectory(java.lang.String,int)>(volumeUuid, userId);

        staticinvoke <com.android.server.pm.UserManagerService: void prepareUserDirectory(java.io.File)>(userDir#14);

        $i10 = userInfo#10.<android.content.pm.UserInfo: int serialNumber>;

        staticinvoke <com.android.server.pm.UserManagerService: void enforceSerialNumber(java.io.File,int)>(userDir#14, $i10);

     label28:
        goto label30;

     label29:
        $r21 := @caughtexception;

        userDir#15 = $r21;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create user directory on ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(volumeUuid);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", $r20, userDir#15);

     label30:
        goto label26;

     label31:
        $r8 = this.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r8.<com.android.server.pm.PackageManagerService: void createNewUserLILPw(int)>(userId);

        userInfo#10.<android.content.pm.UserInfo: boolean partial> = 0;

        specialinvoke this.<com.android.server.pm.UserManagerService: void scheduleWriteUserLocked(android.content.pm.UserInfo)>(userInfo#10);

        specialinvoke this.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        i$#16 = $r11;

        $r10 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r10.<android.util.SparseArray: void append(int,java.lang.Object)>(userId, i$#16);

        exitmonitor l11;

     label32:
        goto label35;

     label33:
        $r25 := @caughtexception;

        l20 = $r25;

        exitmonitor l11;

     label34:
        throw l20;

     label35:
        exitmonitor addedIntent#4;

     label36:
        goto label39;

     label37:
        $r23 := @caughtexception;

        l21 = $r23;

        exitmonitor addedIntent#4;

     label38:
        throw l21;

     label39:
        $r13 = this.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r13.<com.android.server.pm.PackageManagerService: void newUserCreated(int)>(userId);

        if userInfo#10 == null goto label40;

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_ADDED");

        addedIntent#17 = $r12;

        $i7 = userInfo#10.<android.content.pm.UserInfo: int id>;

        virtualinvoke addedIntent#17.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i7);

        $r15 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r16 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r15.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(addedIntent#17, $r16, "android.permission.MANAGE_USERS");

     label40:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        goto label43;

     label41:
        $r24 := @caughtexception;

        l22 = $r24;

     label42:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        throw l22;

     label43:
        return userInfo#10;

        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.lang.Throwable from label12 to label13 with label33;
        catch java.lang.Throwable from label15 to label16 with label33;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch java.lang.Throwable from label21 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.lang.Throwable from label08 to label11 with label37;
        catch java.lang.Throwable from label12 to label14 with label37;
        catch java.lang.Throwable from label15 to label17 with label37;
        catch java.lang.Throwable from label18 to label20 with label37;
        catch java.lang.Throwable from label21 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.Throwable from label07 to label11 with label41;
        catch java.lang.Throwable from label12 to label14 with label41;
        catch java.lang.Throwable from label15 to label17 with label41;
        catch java.lang.Throwable from label18 to label20 with label41;
        catch java.lang.Throwable from label21 to label40 with label41;
        catch java.lang.Throwable from label41 to label42 with label41;
    }

    private int numberOfUsersOfTypeLocked(int, boolean)
    {
        com.android.server.pm.UserManagerService this;
        int flags, $i0, $i1, $i2, $i3, count#1, i#2;
        boolean excludeDying, $z0;
        android.content.pm.UserInfo user;
        android.util.SparseArray $r0, $r1;
        java.lang.Object $r2;
        android.util.SparseBooleanArray $r3;

        this := @this: com.android.server.pm.UserManagerService;

        flags := @parameter0: int;

        excludeDying := @parameter1: boolean;

        count#1 = 0;

        $r0 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r0.<android.util.SparseArray: int size()>();

        i#2 = $i0 - 1;

     label1:
        if i#2 < 0 goto label4;

        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#2);

        user = (android.content.pm.UserInfo) $r2;

        if excludeDying == 0 goto label2;

        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i3 = user.<android.content.pm.UserInfo: int id>;

        $z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>($i3);

        if $z0 != 0 goto label3;

     label2:
        $i1 = user.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 & flags;

        if $i2 == 0 goto label3;

        count#1 = count#1 + 1;

     label3:
        i#2 = i#2 + -1;

        goto label1;

     label4:
        return count#1;
    }

    private android.content.pm.UserInfo findCurrentGuestUserLocked()
    {
        com.android.server.pm.UserManagerService this;
        int size, $i0, i#1;
        android.content.pm.UserInfo user;
        android.util.SparseArray $r0, $r1;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2;
        android.util.SparseBooleanArray $r3;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        size = virtualinvoke $r0.<android.util.SparseArray: int size()>();

        i#1 = 0;

     label1:
        if i#1 >= size goto label3;

        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#1);

        user = (android.content.pm.UserInfo) $r2;

        $z0 = virtualinvoke user.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z0 == 0 goto label2;

        $z1 = user.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z1 != 0 goto label2;

        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i0 = user.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>($i0);

        if $z2 != 0 goto label2;

        return user;

     label2:
        i#1 = i#1 + 1;

        goto label1;

     label3:
        return null;
    }

    public boolean markGuestForDeletion(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle, $i0, $i1, $i2;
        long ident;
        android.content.pm.UserInfo user;
        java.lang.Object l5, $r1, $r3;
        java.lang.Throwable l7, l8, $r5, $r6;
        android.os.Bundle $r0;
        boolean $z0, $z1, $z2, l6#1, l6#2;
        android.util.SparseArray $r2;
        android.util.SparseBooleanArray $r4;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can remove users");

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r0 = virtualinvoke this.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i0);

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_remove_user", 0);

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Cannot remove user. DISALLOW_REMOVE_USER is enabled.");

        return 0;

     label01:
        ident = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r1 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l5 = $r1;

        entermonitor $r1;

     label03:
        $r2 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(userHandle);

        user = (android.content.pm.UserInfo) $r3;

        if userHandle == 0 goto label04;

        if user == null goto label04;

        $r4 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z2 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(userHandle);

        if $z2 == 0 goto label06;

     label04:
        l6#1 = 0;

        exitmonitor l5;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return l6#1;

     label06:
        $z1 = virtualinvoke user.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z1 != 0 goto label08;

        l6#2 = 0;

        exitmonitor l5;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return l6#2;

     label08:
        user.<android.content.pm.UserInfo: boolean guestToRemove> = 1;

        $i2 = user.<android.content.pm.UserInfo: int flags>;

        $i1 = $i2 | 64;

        user.<android.content.pm.UserInfo: int flags> = $i1;

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(user);

        exitmonitor l5;

     label09:
        goto label12;

     label10:
        $r6 := @caughtexception;

        l7 = $r6;

        exitmonitor l5;

     label11:
        throw l7;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        goto label15;

     label13:
        $r5 := @caughtexception;

        l8 = $r5;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        throw l8;

     label15:
        return 1;

        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label02 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean removeUser(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle, $i0, $i1, $i2, $i3, $i4, $i5, res#5;
        long ident;
        android.content.pm.UserInfo user;
        java.lang.Throwable l8, $r10, $r11, l7#4;
        android.os.Bundle $r0;
        boolean $z0, $z1, $z2, e#2, l7#7, $z3, e#9;
        java.lang.Object $r1, $r3, res#1;
        android.util.SparseArray $r2;
        android.util.SparseBooleanArray $r4, $r5;
        com.android.internal.app.IAppOpsService $r6;
        android.app.IActivityManager $r7;
        android.os.RemoteException $r9, $r12, e#3, e#6;
        com.android.server.pm.UserManagerService$1 tmp$3168156;
        android.app.IStopUserCallback tmp$1149213263;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can remove users");

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r0 = virtualinvoke this.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i0);

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_remove_user", 0);

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Cannot remove user. DISALLOW_REMOVE_USER is enabled.");

        return 0;

     label01:
        ident = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r1 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        res#1 = $r1;

        entermonitor $r1;

     label03:
        $r2 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(userHandle);

        user = (android.content.pm.UserInfo) $r3;

        if userHandle == 0 goto label04;

        if user == null goto label04;

        $r4 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z1 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(userHandle);

        if $z1 == 0 goto label06;

     label04:
        e#2 = 0;

        exitmonitor res#1;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return e#2;

     label06:
        $r5 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void put(int,boolean)>(userHandle, 1);

     label07:
        $r6 = this.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        interfaceinvoke $r6.<com.android.internal.app.IAppOpsService: void removeUser(int)>(userHandle);

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

        e#3 = $r12;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Unable to notify AppOpsService of removing user", e#3);

     label10:
        user.<android.content.pm.UserInfo: boolean partial> = 1;

        $i1 = user.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 | 64;

        user.<android.content.pm.UserInfo: int flags> = $i2;

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(user);

        exitmonitor res#1;

     label11:
        goto label14;

     label12:
        $r10 := @caughtexception;

        l7#4 = $r10;

        exitmonitor res#1;

     label13:
        throw l7#4;

     label14:
        $i3 = user.<android.content.pm.UserInfo: int profileGroupId>;

        if $i3 == -1 goto label15;

        $z2 = virtualinvoke user.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z2 == 0 goto label15;

        $i4 = user.<android.content.pm.UserInfo: int profileGroupId>;

        $i5 = user.<android.content.pm.UserInfo: int id>;

        specialinvoke this.<com.android.server.pm.UserManagerService: void sendProfileRemovedBroadcast(int,int)>($i4, $i5);

     label15:
        $r7 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        tmp$3168156 = new com.android.server.pm.UserManagerService$1;

        specialinvoke tmp$3168156.<com.android.server.pm.UserManagerService$1: void <init>(com.android.server.pm.UserManagerService)>(this);

        tmp$1149213263 = (android.app.IStopUserCallback) tmp$3168156;

        res#5 = interfaceinvoke $r7.<android.app.IActivityManager: int stopUser(int,android.app.IStopUserCallback)>(userHandle, tmp$1149213263);

     label16:
        goto label19;

     label17:
        $r9 := @caughtexception;

        e#6 = $r9;

        l7#7 = 0;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return l7#7;

     label19:
        if res#5 != 0 goto label20;

        $z3 = 1;

        goto label21;

     label20:
        $z3 = 0;

     label21:
        e#9 = $z3;

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return e#9;

     label23:
        $r11 := @caughtexception;

        l8 = $r11;

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        throw l8;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label03 to label05 with label12;
        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label02 to label05 with label23;
        catch java.lang.Throwable from label06 to label18 with label23;
        catch java.lang.Throwable from label19 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    void finishRemoveUser(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle;
        long ident;
        android.content.Intent addedIntent, $r0;
        java.lang.Throwable l5, $r5;
        com.android.server.pm.UserManagerService$2 $r2;
        android.content.Context $r3;
        android.os.UserHandle $r4;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        ident = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_REMOVED");

        addedIntent = $r0;

        virtualinvoke addedIntent.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", userHandle);

        $r3 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r4 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r2 = new com.android.server.pm.UserManagerService$2;

        specialinvoke $r2.<com.android.server.pm.UserManagerService$2: void <init>(com.android.server.pm.UserManagerService,int)>(this, userHandle);

        virtualinvoke $r3.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(addedIntent, $r4, "android.permission.MANAGE_USERS", $r2, null, -1, null, null);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        goto label5;

     label3:
        $r5 := @caughtexception;

        l5 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        throw l5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void removeUserStateLocked(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle;
        android.util.AtomicFile userFile, $r2;
        com.android.server.pm.PackageManagerService $r0;
        android.util.SparseArray $r1;
        java.io.File $r3, $r5, $r9;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r8;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r0.<com.android.server.pm.PackageManagerService: void cleanUpUserLILPw(com.android.server.pm.UserManagerService,int)>(this, userHandle);

        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(userHandle);

        $r2 = new android.util.AtomicFile;

        $r3 = new java.io.File;

        $r5 = this.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userHandle);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r8);

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        userFile = $r2;

        virtualinvoke userFile.<android.util.AtomicFile: void delete()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        $r9 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(userHandle);

        specialinvoke this.<com.android.server.pm.UserManagerService: void removeDirectoryRecursive(java.io.File)>($r9);

        return;
    }

    private void removeDirectoryRecursive(java.io.File)
    {
        com.android.server.pm.UserManagerService this;
        java.io.File parent, child, $r0;
        java.lang.String[] files, arr$;
        int len$, i$#1;
        java.lang.String filename;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        parent := @parameter0: java.io.File;

        $z0 = virtualinvoke parent.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        files = virtualinvoke parent.<java.io.File: java.lang.String[] list()>();

        arr$ = files;

        len$ = lengthof arr$;

        i$#1 = 0;

     label1:
        if i$#1 >= len$ goto label2;

        filename = arr$[i$#1];

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(parent, filename);

        child = $r0;

        specialinvoke this.<com.android.server.pm.UserManagerService: void removeDirectoryRecursive(java.io.File)>(child);

        i$#1 = i$#1 + 1;

        goto label1;

     label2:
        virtualinvoke parent.<java.io.File: boolean delete()>();

        return;
    }

    private void sendProfileRemovedBroadcast(int, int)
    {
        com.android.server.pm.UserManagerService this;
        int parentUserId, removedUserId;
        android.content.Intent managedProfileIntent, $r0;
        android.os.UserHandle $r2, $r4;
        android.content.Context $r5;

        this := @this: com.android.server.pm.UserManagerService;

        parentUserId := @parameter0: int;

        removedUserId := @parameter1: int;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MANAGED_PROFILE_REMOVED");

        managedProfileIntent = $r0;

        virtualinvoke managedProfileIntent.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $r2 = new android.os.UserHandle;

        specialinvoke $r2.<android.os.UserHandle: void <init>(int)>(removedUserId);

        virtualinvoke managedProfileIntent.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r2);

        $r5 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r4 = new android.os.UserHandle;

        specialinvoke $r4.<android.os.UserHandle: void <init>(int)>(parentUserId);

        virtualinvoke $r5.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(managedProfileIntent, $r4, null);

        return;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String packageName;
        int $i0;
        android.os.Bundle $r0;

        this := @this: com.android.server.pm.UserManagerService;

        packageName := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r0 = virtualinvoke this.<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>(packageName, $i0);

        return $r0;
    }

    public android.os.Bundle getApplicationRestrictionsForUser(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String packageName;
        int userId, $i0, $i1, $i2;
        java.lang.Object l3, $r0;
        java.lang.Throwable l4, $r2;
        android.os.Bundle $r1;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        packageName := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i0 != userId goto label1;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = specialinvoke this.<com.android.server.pm.UserManagerService: int getUidForPackage(java.lang.String)>(packageName);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i1, $i2);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can get restrictions for other users/apps");

     label2:
        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l3 = $r0;

        entermonitor $r0;

     label3:
        $r1 = specialinvoke this.<com.android.server.pm.UserManagerService: android.os.Bundle readApplicationRestrictionsLocked(java.lang.String,int)>(packageName, userId);

        exitmonitor l3;

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        l4 = $r2;

        exitmonitor l3;

     label6:
        throw l4;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setApplicationRestrictions(java.lang.String, android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String packageName;
        android.os.Bundle restrictions;
        int userId, $i0, $i1, $i2;
        java.lang.Throwable l5, $r6;
        java.lang.Object $r0, changeIntent#1;
        boolean $z0, $z1, $z2;
        android.content.Intent $r1, changeIntent#2;
        android.os.UserHandle $r4;
        android.content.Context $r5;

        this := @this: com.android.server.pm.UserManagerService;

        packageName := @parameter0: java.lang.String;

        restrictions := @parameter1: android.os.Bundle;

        userId := @parameter2: int;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i0 != userId goto label01;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = specialinvoke this.<com.android.server.pm.UserManagerService: int getUidForPackage(java.lang.String)>(packageName);

        $z2 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, $i1);

        if $z2 != 0 goto label02;

     label01:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can set restrictions for other users/apps");

     label02:
        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        changeIntent#1 = $r0;

        entermonitor $r0;

     label03:
        if restrictions == null goto label04;

        $z1 = virtualinvoke restrictions.<android.os.Bundle: boolean isEmpty()>();

        if $z1 == 0 goto label05;

     label04:
        specialinvoke this.<com.android.server.pm.UserManagerService: void cleanAppRestrictionsForPackage(java.lang.String,int)>(packageName, userId);

        goto label06;

     label05:
        specialinvoke this.<com.android.server.pm.UserManagerService: void writeApplicationRestrictionsLocked(java.lang.String,android.os.Bundle,int)>(packageName, restrictions, userId);

     label06:
        exitmonitor changeIntent#1;

     label07:
        goto label10;

     label08:
        $r6 := @caughtexception;

        l5 = $r6;

        exitmonitor changeIntent#1;

     label09:
        throw l5;

     label10:
        $z0 = specialinvoke this.<com.android.server.pm.UserManagerService: boolean isPackageInstalled(java.lang.String,int)>(packageName, userId);

        if $z0 == 0 goto label11;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");

        changeIntent#2 = $r1;

        virtualinvoke changeIntent#2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(packageName);

        virtualinvoke changeIntent#2.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r5 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r4 = new android.os.UserHandle;

        specialinvoke $r4.<android.os.UserHandle: void <init>(int)>(userId);

        virtualinvoke $r5.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(changeIntent#2, $r4);

     label11:
        return;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void removeRestrictions()
    {
        com.android.server.pm.UserManagerService this;
        int userHandle;

        this := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can remove restrictions");

        userHandle = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke this.<com.android.server.pm.UserManagerService: void removeRestrictionsForUser(int,boolean)>(userHandle, 1);

        return;
    }

    private void removeRestrictionsForUser(int, boolean)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle;
        boolean unhideApps;
        java.lang.Object l3, $r0;
        java.lang.Throwable l4, $r2;
        android.os.Bundle $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        unhideApps := @parameter1: boolean;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l3 = $r0;

        entermonitor $r0;

     label1:
        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke this.<com.android.server.pm.UserManagerService: void setUserRestrictions(android.os.Bundle,int)>($r1, userHandle);

        specialinvoke this.<com.android.server.pm.UserManagerService: void cleanAppRestrictions(int)>(userHandle);

        exitmonitor l3;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        l4 = $r2;

        exitmonitor l3;

     label4:
        throw l4;

     label5:
        if unhideApps == 0 goto label6;

        specialinvoke this.<com.android.server.pm.UserManagerService: void unhideAllInstalledAppsForUser(int)>(userHandle);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void unhideAllInstalledAppsForUser(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle;
        com.android.server.pm.UserManagerService$3 $r0;
        android.os.Handler $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        $r1 = this.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $r0 = new com.android.server.pm.UserManagerService$3;

        specialinvoke $r0.<com.android.server.pm.UserManagerService$3: void <init>(com.android.server.pm.UserManagerService,int)>(this, userHandle);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r0);

        return;
    }

    private int getUidForPackage(java.lang.String)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String packageName;
        long ident;
        byte l5;
        java.lang.Throwable l6, $r3;
        android.content.Context $r0;
        android.content.pm.PackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        android.content.pm.PackageManager$NameNotFoundException $r4, nnfe#2;
        int nnfe#1;

        this := @this: com.android.server.pm.UserManagerService;

        packageName := @parameter0: java.lang.String;

        ident = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r0 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(packageName, 8192);

        nnfe#1 = $r2.<android.content.pm.ApplicationInfo: int uid>;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return nnfe#1;

     label3:
        $r4 := @caughtexception;

        nnfe#2 = $r4;

        l5 = -1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        return l5;

     label5:
        $r3 := @caughtexception;

        l6 = $r3;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(ident);

        throw l6;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private android.os.Bundle readApplicationRestrictionsLocked(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String packageName, $r3;
        int userId;
        android.util.AtomicFile restrictionsFile, $r0;
        java.io.File $r1, $r2;
        android.os.Bundle $r4;

        this := @this: com.android.server.pm.UserManagerService;

        packageName := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $r0 = new android.util.AtomicFile;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(userId);

        $r3 = specialinvoke this.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(packageName);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        specialinvoke $r0.<android.util.AtomicFile: void <init>(java.io.File)>($r1);

        restrictionsFile = $r0;

        $r4 = staticinvoke <com.android.server.pm.UserManagerService: android.os.Bundle readApplicationRestrictionsLocked(android.util.AtomicFile)>(restrictionsFile);

        return $r4;
    }

    static android.os.Bundle readApplicationRestrictionsLocked(android.util.AtomicFile)
    {
        android.util.AtomicFile restrictionsFile;
        android.os.Bundle restrictions, l5, tmp$2133580872;
        java.util.ArrayList values, tmp$1562182452;
        java.lang.Throwable l6, $r11;
        java.io.File $r2, $r8, $r13;
        boolean $z0;
        java.nio.charset.Charset $r3;
        java.lang.String $r4, $r9, $r15;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r7, $r14, $r16, tmp$885081020, tmp$1499582427;
        java.lang.Exception $r10, parser#3;
        java.io.FileInputStream fis#1;
        org.xmlpull.v1.XmlPullParser parser#2;
        java.io.InputStream tmp$1957098257;

        restrictionsFile := @parameter0: android.util.AtomicFile;

        tmp$2133580872 = new android.os.Bundle;

        specialinvoke tmp$2133580872.<android.os.Bundle: void <init>()>();

        restrictions = tmp$2133580872;

        tmp$1562182452 = new java.util.ArrayList;

        specialinvoke tmp$1562182452.<java.util.ArrayList: void <init>()>();

        values = tmp$1562182452;

        $r2 = virtualinvoke restrictionsFile.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return restrictions;

     label01:
        fis#1 = null;

     label02:
        fis#1 = virtualinvoke restrictionsFile.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        parser#2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        tmp$1957098257 = (java.io.InputStream) fis#1;

        interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(tmp$1957098257, $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(parser#2);

        $i0 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label04;

        tmp$885081020 = new java.lang.StringBuilder;

        specialinvoke tmp$885081020.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke tmp$885081020.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read restrictions file ");

        $r8 = virtualinvoke restrictionsFile.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r9);

        l5 = restrictions;

     label03:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(fis#1);

        return l5;

     label04:
        $i1 = interfaceinvoke parser#2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label05;

        staticinvoke <com.android.server.pm.UserManagerService: void readEntry(android.os.Bundle,java.util.ArrayList,org.xmlpull.v1.XmlPullParser)>(restrictions, values, parser#2);

        goto label04;

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(fis#1);

        goto label10;

     label06:
        $r10 := @caughtexception;

        parser#3 = $r10;

        tmp$1499582427 = new java.lang.StringBuilder;

        specialinvoke tmp$1499582427.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke tmp$1499582427.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing ");

        $r13 = virtualinvoke restrictionsFile.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", $r15, parser#3);

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(fis#1);

        goto label10;

     label08:
        $r11 := @caughtexception;

        l6 = $r11;

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(fis#1);

        throw l6;

     label10:
        return restrictions;

        catch java.io.IOException from label02 to label03 with label06;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label06;
        catch java.io.IOException from label04 to label05 with label06;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private static void readEntry(android.os.Bundle, java.util.ArrayList, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.os.Bundle restrictions, childBundle, $r10;
        java.util.ArrayList values, $r6, valueStrings#6;
        org.xmlpull.v1.XmlPullParser parser;
        java.lang.String key, valType, multiple, $r0, $r1, $r2, $r3, $r4, $r5, $r11, $r13, $r14, count#7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8;
        int $i0, $i1, $i2, $i3, type#1, count#2, type#3, count#5;
        android.os.Parcelable[] $r7;
        android.os.Bundle[] $r8;
        java.lang.Object[] $r9;
        java.lang.String[] valueStrings#4;

        restrictions := @parameter0: android.os.Bundle;

        values := @parameter1: java.util.ArrayList;

        parser := @parameter2: org.xmlpull.v1.XmlPullParser;

        type#1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if type#1 != 2 goto label10;

        $r0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("entry");

        if $z0 == 0 goto label10;

        key = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "key");

        valType = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        multiple = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "m");

        if multiple == null goto label03;

        virtualinvoke values.<java.util.ArrayList: void clear()>();

        count#2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(multiple);

     label01:
        if count#2 <= 0 goto label02;

        $i3 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#3 = $i3;

        if $i3 == 1 goto label02;

        if type#3 != 2 goto label01;

        $r11 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z8 == 0 goto label01;

        $r13 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        virtualinvoke values.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        count#2 = count#2 + -1;

        goto label01;

     label02:
        $i2 = virtualinvoke values.<java.util.ArrayList: int size()>();

        valueStrings#4 = newarray (java.lang.String)[$i2];

        virtualinvoke values.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(valueStrings#4);

        virtualinvoke restrictions.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>(key, valueStrings#4);

        goto label10;

     label03:
        $r1 = "B";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(valType);

        if $z1 == 0 goto label04;

        $r10 = staticinvoke <com.android.server.pm.UserManagerService: android.os.Bundle readBundleEntry(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(parser, values);

        virtualinvoke restrictions.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>(key, $r10);

        goto label10;

     label04:
        $r2 = "BA";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(valType);

        if $z2 == 0 goto label07;

        count#5 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        valueStrings#6 = $r6;

     label05:
        $z6 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(parser, count#5);

        if $z6 == 0 goto label06;

        childBundle = staticinvoke <com.android.server.pm.UserManagerService: android.os.Bundle readBundleEntry(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(parser, values);

        virtualinvoke valueStrings#6.<java.util.ArrayList: boolean add(java.lang.Object)>(childBundle);

        goto label05;

     label06:
        $i1 = virtualinvoke valueStrings#6.<java.util.ArrayList: int size()>();

        $r8 = newarray (android.os.Bundle)[$i1];

        $r9 = virtualinvoke valueStrings#6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r7 = (android.os.Parcelable[]) $r9;

        virtualinvoke restrictions.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>(key, $r7);

        goto label10;

     label07:
        $r3 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        count#7 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = "b";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(valType);

        if $z3 == 0 goto label08;

        $z5 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(count#7);

        virtualinvoke restrictions.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(key, $z5);

        goto label10;

     label08:
        $r5 = "i";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(valType);

        if $z4 == 0 goto label09;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(count#7);

        virtualinvoke restrictions.<android.os.Bundle: void putInt(java.lang.String,int)>(key, $i0);

        goto label10;

     label09:
        virtualinvoke restrictions.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(key, count#7);

     label10:
        return;
    }

    private static android.os.Bundle readBundleEntry(org.xmlpull.v1.XmlPullParser, java.util.ArrayList) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser parser;
        java.util.ArrayList values;
        android.os.Bundle childBundle, $r0;
        int outerDepth;
        boolean $z0;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        values := @parameter1: java.util.ArrayList;

        $r0 = new android.os.Bundle;

        specialinvoke $r0.<android.os.Bundle: void <init>()>();

        childBundle = $r0;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(parser, outerDepth);

        if $z0 == 0 goto label2;

        staticinvoke <com.android.server.pm.UserManagerService: void readEntry(android.os.Bundle,java.util.ArrayList,org.xmlpull.v1.XmlPullParser)>(childBundle, values, parser);

        goto label1;

     label2:
        return childBundle;
    }

    private void writeApplicationRestrictionsLocked(java.lang.String, android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String packageName, $r3;
        android.os.Bundle restrictions;
        int userId;
        android.util.AtomicFile restrictionsFile, $r0;
        java.io.File $r1, $r2;

        this := @this: com.android.server.pm.UserManagerService;

        packageName := @parameter0: java.lang.String;

        restrictions := @parameter1: android.os.Bundle;

        userId := @parameter2: int;

        $r0 = new android.util.AtomicFile;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(userId);

        $r3 = specialinvoke this.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(packageName);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        specialinvoke $r0.<android.util.AtomicFile: void <init>(java.io.File)>($r1);

        restrictionsFile = $r0;

        staticinvoke <com.android.server.pm.UserManagerService: void writeApplicationRestrictionsLocked(android.os.Bundle,android.util.AtomicFile)>(restrictions, restrictionsFile);

        return;
    }

    static void writeApplicationRestrictionsLocked(android.os.Bundle, android.util.AtomicFile)
    {
        android.os.Bundle restrictions;
        android.util.AtomicFile restrictionsFile;
        com.android.internal.util.FastXmlSerializer serializer, $r1;
        java.io.BufferedOutputStream $r0, bos#2;
        java.nio.charset.Charset $r2;
        java.lang.String $r3;
        java.lang.Boolean $r4;
        java.lang.Exception $r7, bos#3;
        java.io.FileOutputStream fos#1;

        restrictions := @parameter0: android.os.Bundle;

        restrictionsFile := @parameter1: android.util.AtomicFile;

        fos#1 = null;

     label1:
        fos#1 = virtualinvoke restrictionsFile.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r0 = new java.io.BufferedOutputStream;

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(fos#1);

        bos#2 = $r0;

        $r1 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r1.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        serializer = $r1;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(bos#2, $r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r4);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restrictions");

        staticinvoke <com.android.server.pm.UserManagerService: void writeBundle(android.os.Bundle,org.xmlpull.v1.XmlSerializer)>(restrictions, serializer);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restrictions");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke restrictionsFile.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(fos#1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        bos#3 = $r7;

        virtualinvoke restrictionsFile.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(fos#1);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Error writing application restrictions list", bos#3);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void writeBundle(android.os.Bundle, org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.os.Bundle restrictions, $r16, $r20;
        org.xmlpull.v1.XmlSerializer serializer;
        java.util.Iterator i$;
        java.lang.String key, $r9, $r24, $r27, $r29, parcelable#11, $r30;
        java.lang.Object value, $r1;
        java.util.Set $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String[] $r7, array#7, arr$#8;
        int $i0, len$#4, i$#5, len$#9, i$#10;
        android.os.Parcelable[] $r14, array#2, arr$#3;
        java.lang.IllegalArgumentException $r22;
        android.os.Parcelable parcelable#6;

        restrictions := @parameter0: android.os.Bundle;

        serializer := @parameter1: org.xmlpull.v1.XmlSerializer;

        $r0 = virtualinvoke restrictions.<android.os.Bundle: java.util.Set keySet()>();

        i$ = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r1 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $r1;

        value = virtualinvoke restrictions.<android.os.Bundle: java.lang.Object get(java.lang.String)>(key);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "entry");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "key", key);

        $z1 = value instanceof java.lang.Boolean;

        if $z1 == 0 goto label02;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "b");

        $r24 = virtualinvoke value.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r24);

        goto label16;

     label02:
        $z2 = value instanceof java.lang.Integer;

        if $z2 == 0 goto label03;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "i");

        $r27 = virtualinvoke value.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r27);

        goto label16;

     label03:
        if value == null goto label04;

        $z3 = value instanceof java.lang.String;

        if $z3 == 0 goto label07;

     label04:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "s");

        if value == null goto label05;

        $r29 = (java.lang.String) value;

        goto label06;

     label05:
        $r29 = "";

     label06:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r29);

        goto label16;

     label07:
        $z5 = value instanceof android.os.Bundle;

        if $z5 == 0 goto label08;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "B");

        $r20 = (android.os.Bundle) value;

        staticinvoke <com.android.server.pm.UserManagerService: void writeBundle(android.os.Bundle,org.xmlpull.v1.XmlSerializer)>($r20, serializer);

        goto label16;

     label08:
        $z4 = value instanceof android.os.Parcelable[];

        if $z4 == 0 goto label12;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "BA");

        $r14 = (android.os.Parcelable[]) value;

        array#2 = (android.os.Parcelable[]) $r14;

        arr$#3 = array#2;

        len$#4 = lengthof arr$#3;

        i$#5 = 0;

     label09:
        if i$#5 >= len$#4 goto label11;

        parcelable#6 = arr$#3[i$#5];

        $z6 = parcelable#6 instanceof android.os.Bundle;

        if $z6 != 0 goto label10;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bundle-array can only hold Bundles");

        throw $r22;

     label10:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "entry");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "B");

        $r16 = (android.os.Bundle) parcelable#6;

        staticinvoke <com.android.server.pm.UserManagerService: void writeBundle(android.os.Bundle,org.xmlpull.v1.XmlSerializer)>($r16, serializer);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "entry");

        i$#5 = i$#5 + 1;

        goto label09;

     label11:
        goto label16;

     label12:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "sa");

        $r7 = (java.lang.String[]) value;

        array#7 = (java.lang.String[]) $r7;

        $i0 = lengthof array#7;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r9);

        arr$#8 = array#7;

        len$#9 = lengthof arr$#8;

        i$#10 = 0;

     label13:
        if i$#10 >= len$#9 goto label16;

        parcelable#11 = arr$#8[i$#10];

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "value");

        if parcelable#11 == null goto label14;

        $r30 = parcelable#11;

        goto label15;

     label14:
        $r30 = "";

     label15:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r30);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "value");

        i$#10 = i$#10 + 1;

        goto label13;

     label16:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "entry");

        goto label01;

     label17:
        return;
    }

    public int getUserSerialNumber(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle, $i0;
        java.lang.Object l2, $r0;
        java.lang.Throwable l3, $r2;
        boolean $z0;
        android.content.pm.UserInfo $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $z0 = virtualinvoke this.<com.android.server.pm.UserManagerService: boolean exists(int)>(userHandle);

        if $z0 != 0 goto label3;

        exitmonitor l2;

     label2:
        return -1;

     label3:
        $r1 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userHandle);

        $i0 = $r1.<android.content.pm.UserInfo: int serialNumber>;

        exitmonitor l2;

     label4:
        return $i0;

     label5:
        $r2 := @caughtexception;

        l3 = $r2;

        exitmonitor l2;

     label6:
        throw l3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getUserHandle(int)
    {
        com.android.server.pm.UserManagerService this;
        int userSerialNumber, len$, userId, $i0, i$#1;
        java.lang.Object l2, $r0;
        int[] arr$;
        android.content.pm.UserInfo info;
        java.lang.Throwable l8, $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userSerialNumber := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        arr$ = this.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        len$ = lengthof arr$;

        i$#1 = 0;

     label2:
        if i$#1 >= len$ goto label5;

        userId = arr$[i$#1];

        info = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userId);

        if info == null goto label4;

        $i0 = info.<android.content.pm.UserInfo: int serialNumber>;

        if $i0 != userSerialNumber goto label4;

        exitmonitor l2;

     label3:
        return userId;

     label4:
        i$#1 = i$#1 + 1;

        goto label2;

     label5:
        exitmonitor l2;

     label6:
        return -1;

     label7:
        $r1 := @caughtexception;

        l8 = $r1;

        exitmonitor l2;

     label8:
        throw l8;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public long getUserCreationTime(int)
    {
        com.android.server.pm.UserManagerService this;
        int userHandle, callingUserId, $i1;
        java.lang.Object l4, $r0;
        android.content.pm.UserInfo parent, userInfo#1;
        java.lang.Throwable l6, $r2;
        long $l0;
        java.lang.SecurityException $r1;

        this := @this: com.android.server.pm.UserManagerService;

        userHandle := @parameter0: int;

        callingUserId = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        userInfo#1 = null;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l4 = $r0;

        entermonitor $r0;

     label1:
        if callingUserId != userHandle goto label2;

        userInfo#1 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userHandle);

        goto label3;

     label2:
        parent = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLocked(int)>(userHandle);

        if parent == null goto label3;

        $i1 = parent.<android.content.pm.UserInfo: int id>;

        if $i1 != callingUserId goto label3;

        userInfo#1 = specialinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(userHandle);

     label3:
        exitmonitor l4;

     label4:
        goto label7;

     label5:
        $r2 := @caughtexception;

        l6 = $r2;

        exitmonitor l4;

     label6:
        throw l6;

     label7:
        if userInfo#1 != null goto label8;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("userHandle can only be the calling user or a managed profile associated with this user");

        throw $r1;

     label8:
        $l0 = userInfo#1.<android.content.pm.UserInfo: long creationTime>;

        return $l0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void updateUserIdsLocked()
    {
        com.android.server.pm.UserManagerService this;
        android.util.SparseArray $r0, $r1, $r2, $r5, $r7;
        int $i0, $i1, $i2, $i3, num#1, i#2, n#4, i#5;
        java.lang.Object $r3, $r6;
        android.content.pm.UserInfo $r4, $r8;
        boolean $z0, $z1;
        int[] i#3;

        this := @this: com.android.server.pm.UserManagerService;

        num#1 = 0;

        i#2 = 0;

     label1:
        $r0 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r0.<android.util.SparseArray: int size()>();

        if i#2 >= $i0 goto label3;

        $r7 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#2);

        $r8 = (android.content.pm.UserInfo) $r6;

        $z1 = $r8.<android.content.pm.UserInfo: boolean partial>;

        if $z1 != 0 goto label2;

        num#1 = num#1 + 1;

     label2:
        i#2 = i#2 + 1;

        goto label1;

     label3:
        i#3 = newarray (int)[num#1];

        n#4 = 0;

        i#5 = 0;

     label4:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i#5 >= $i1 goto label6;

        $r2 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#5);

        $r4 = (android.content.pm.UserInfo) $r3;

        $z0 = $r4.<android.content.pm.UserInfo: boolean partial>;

        if $z0 != 0 goto label5;

        $i2 = n#4;

        n#4 = n#4 + 1;

        $r5 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>(i#5);

        i#3[$i2] = $i3;

     label5:
        i#5 = i#5 + 1;

        goto label4;

     label6:
        this.<com.android.server.pm.UserManagerService: int[] mUserIds> = i#3;

        return;
    }

    public void onUserForeground(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId;
        java.lang.Object l2, $r0, $r2;
        android.content.pm.UserInfo user;
        long now;
        java.lang.Throwable l6, $r7;
        android.util.SparseArray $r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        byte $b1;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        user = (android.content.pm.UserInfo) $r2;

        now = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if user == null goto label2;

        $z0 = user.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label4;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userForeground: unknown user #");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r6);

        exitmonitor l2;

     label3:
        return;

     label4:
        $b1 = now cmp 946080000000L;

        if $b1 <= 0 goto label5;

        user.<android.content.pm.UserInfo: long lastLoggedInTime> = now;

        specialinvoke this.<com.android.server.pm.UserManagerService: void scheduleWriteUserLocked(android.content.pm.UserInfo)>(user);

     label5:
        exitmonitor l2;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        l6 = $r7;

        exitmonitor l2;

     label8:
        throw l6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private int getNextAvailableIdLocked()
    {
        com.android.server.pm.UserManagerService this;
        java.lang.Object l1, $r0;
        java.lang.Throwable l3, $r3;
        android.util.SparseArray $r1;
        int $i0, i#1;
        android.util.SparseBooleanArray $r2;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        $r0 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        i#1 = 10;

     label2:
        if i#1 >= 2147483647 goto label4;

        $r1 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(i#1);

        if $i0 >= 0 goto label3;

        $r2 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z0 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(i#1);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        i#1 = i#1 + 1;

        goto label2;

     label4:
        exitmonitor l1;

     label5:
        return i#1;

     label6:
        $r3 := @caughtexception;

        l3 = $r3;

        exitmonitor l1;

     label7:
        throw l3;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private java.lang.String packageToRestrictionsFileName(java.lang.String)
    {
        com.android.server.pm.UserManagerService this;
        java.lang.String packageName, $r4;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;

        this := @this: com.android.server.pm.UserManagerService;

        packageName := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("res_");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(packageName);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void prepareUserDirectory(java.io.File) throws java.io.IOException
    {
        java.io.File file;
        boolean $z0, $z1;
        java.lang.String $r0, $r5, $r10;
        int $i0;
        java.io.IOException $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r8, $r9;

        file := @parameter0: java.io.File;

        $z0 = virtualinvoke file.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke file.<java.io.File: boolean mkdir()>();

        if $z1 != 0 goto label1;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r0 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        $i0 = staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r0, 505, 1000, 1000);

        if $i0 == 0 goto label2;

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to prepare ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return;
    }

    public static void enforceSerialNumber(java.io.File, int) throws java.io.IOException
    {
        java.io.File file;
        int serialNumber, foundSerial;
        java.io.IOException e, $r6, $r18;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r21;
        java.lang.String $r5, $r11, $r16, $r22;

        file := @parameter0: java.io.File;

        serialNumber := @parameter1: int;

        foundSerial = staticinvoke <com.android.server.pm.UserManagerService: int getSerialNumber(java.io.File)>(file);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with serial number ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(foundSerial);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("UserManagerService", $r5);

        if foundSerial != -1 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Serial number missing on ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; assuming current is valid");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UserManagerService", $r16);

     label1:
        staticinvoke <com.android.server.pm.UserManagerService: void setSerialNumber(java.io.File,int)>(file, serialNumber);

     label2:
        goto label5;

     label3:
        $r18 := @caughtexception;

        e = $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set serial number on ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", $r22, e);

        goto label5;

     label4:
        if foundSerial == serialNumber goto label5;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found serial number ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(foundSerial);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match expected ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(serialNumber);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void setSerialNumber(java.io.File, int) throws java.io.IOException
    {
        java.io.File file;
        int serialNumber, $i0;
        java.lang.String $r0, $r2;
        java.nio.charset.Charset $r1;
        android.system.ErrnoException $r3, buf#2;
        java.io.IOException $r4;
        byte[] buf#1;

        file := @parameter0: java.io.File;

        serialNumber := @parameter1: int;

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(serialNumber);

        $r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        buf#1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $r2 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        $i0 = <android.system.OsConstants: int XATTR_CREATE>;

        staticinvoke <android.system.Os: void setxattr(java.lang.String,java.lang.String,byte[],int)>($r2, "user.serial", buf#1, $i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        buf#2 = $r3;

        $r4 = virtualinvoke buf#2.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r4;

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    private static int getSerialNumber(java.io.File) throws java.io.IOException
    {
        java.io.File file;
        int len, $i0, $i1, $i2;
        java.lang.String serial, $r0, $r1, $r7;
        java.lang.NumberFormatException e, $r2;
        java.io.IOException $r3, $r9;
        java.lang.StringBuilder $r4, $r5, $r6;
        android.system.ErrnoException $r8, buf#2;
        byte[] buf#1;

        file := @parameter0: java.io.File;

     label1:
        buf#1 = newarray (byte)[256];

        $r0 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        len = staticinvoke <android.system.Os: int getxattr(java.lang.String,java.lang.String,byte[])>($r0, "user.serial", buf#1);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int)>(buf#1, 0, len);

        serial = $r1;

     label2:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(serial);

     label3:
        return $i0;

     label4:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad serial number: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(serial);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label5:
        $r8 := @caughtexception;

        buf#2 = $r8;

        $i1 = buf#2.<android.system.ErrnoException: int errno>;

        $i2 = <android.system.OsConstants: int ENODATA>;

        if $i1 != $i2 goto label6;

        return -1;

     label6:
        $r9 = virtualinvoke buf#2.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r9;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch android.system.ErrnoException from label1 to label3 with label5;
        catch android.system.ErrnoException from label4 to label5 with label5;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.UserManagerService this;
        java.io.FileDescriptor fd;
        java.io.PrintWriter pw;
        java.lang.String[] args;
        long now, $l4, $l5, $l7, $l8, $l9, $l10;
        java.lang.StringBuilder sb, $r1, $r9, $r11, $r12, $r13, $r14, $r17, $r18;
        java.lang.Object l7, $r2, $r5;
        android.content.pm.UserInfo user;
        java.lang.Throwable l10, $r16;
        android.content.Context $r0;
        int $i0, $i1, $i2, $i3, $i12, $i13, i#1;
        android.util.SparseArray $r3, $r4, $r7;
        android.util.SparseBooleanArray $r6;
        boolean $z0, $z1;
        byte $b6, $b11;
        java.lang.String $r15;

        this := @this: com.android.server.pm.UserManagerService;

        fd := @parameter0: java.io.FileDescriptor;

        pw := @parameter1: java.io.PrintWriter;

        args := @parameter2: java.lang.String[];

        $r0 = this.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label01;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump UserManager from from pid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        return;

     label01:
        now = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        sb = $r1;

        $r2 = this.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        l7 = $r2;

        entermonitor $r2;

     label02:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("Users:");

        i#1 = 0;

     label03:
        $r3 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i#1 >= $i1 goto label11;

        $r4 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i#1);

        user = (android.content.pm.UserInfo) $r5;

        if user != null goto label04;

        goto label10;

     label04:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.Object)>(user);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" serialNo=");

        $i2 = user.<android.content.pm.UserInfo: int serialNumber>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i2);

        $r6 = this.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $r7 = this.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i#1);

        $z0 = virtualinvoke $r6.<android.util.SparseBooleanArray: boolean get(int)>($i3);

        if $z0 == 0 goto label05;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" <removing> ");

     label05:
        $z1 = user.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label06;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" <partial>");

     label06:
        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    Created: ");

        $l4 = user.<android.content.pm.UserInfo: long creationTime>;

        $b6 = $l4 cmp 0L;

        if $b6 != 0 goto label07;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("<unknown>");

        goto label08;

     label07:
        virtualinvoke sb.<java.lang.StringBuilder: void setLength(int)>(0);

        $l5 = user.<android.content.pm.UserInfo: long creationTime>;

        $l7 = now - $l5;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l7, sb);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago");

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>(sb);

     label08:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    Last logged in: ");

        $l10 = user.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $b11 = $l10 cmp 0L;

        if $b11 != 0 goto label09;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("<unknown>");

        goto label10;

     label09:
        virtualinvoke sb.<java.lang.StringBuilder: void setLength(int)>(0);

        $l8 = user.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $l9 = now - $l8;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l9, sb);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago");

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>(sb);

     label10:
        i#1 = i#1 + 1;

        goto label03;

     label11:
        exitmonitor l7;

     label12:
        goto label15;

     label13:
        $r16 := @caughtexception;

        l10 = $r16;

        exitmonitor l7;

     label14:
        throw l10;

     label15:
        return;

        catch java.lang.Throwable from label02 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    boolean isInitialized(int)
    {
        com.android.server.pm.UserManagerService this;
        int userId, $i0, $i1;
        android.content.pm.UserInfo $r0;
        boolean $z0;

        this := @this: com.android.server.pm.UserManagerService;

        userId := @parameter0: int;

        $r0 = virtualinvoke this.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(userId);

        $i0 = $r0.<android.content.pm.UserInfo: int flags>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static java.lang.Object access$000(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService x0;
        java.lang.Object $r0;

        x0 := @parameter0: com.android.server.pm.UserManagerService;

        $r0 = x0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        return $r0;
    }

    static java.lang.Object access$100(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService x0;
        java.lang.Object $r0;

        x0 := @parameter0: com.android.server.pm.UserManagerService;

        $r0 = x0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        return $r0;
    }

    static void access$200(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService x0;
        int x1;

        x0 := @parameter0: com.android.server.pm.UserManagerService;

        x1 := @parameter1: int;

        specialinvoke x0.<com.android.server.pm.UserManagerService: void removeUserStateLocked(int)>(x1);

        return;
    }

    static com.android.server.pm.PackageManagerService access$300(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService x0;
        com.android.server.pm.PackageManagerService $r0;

        x0 := @parameter0: com.android.server.pm.UserManagerService;

        $r0 = x0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        return $r0;
    }

    static android.util.SparseArray access$400(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService x0;
        android.util.SparseArray $r0;

        x0 := @parameter0: com.android.server.pm.UserManagerService;

        $r0 = x0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        return $r0;
    }

    static void access$500(com.android.server.pm.UserManagerService, android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService x0;
        android.content.pm.UserInfo x1;

        x0 := @parameter0: com.android.server.pm.UserManagerService;

        x1 := @parameter1: android.content.pm.UserInfo;

        specialinvoke x0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(x1);

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r1, $r3, $r4, tmp$2121074256;
        java.lang.String $r2, $r5;
        java.lang.String[] $r6;
        android.util.ArraySet $r7;
        java.util.Set tmp$1298090276;

        <com.android.server.pm.UserManagerService: java.lang.String XATTR_SERIAL> = "user.serial";

        <com.android.server.pm.UserManagerService: int WRITE_USER_DELAY> = 2000;

        <com.android.server.pm.UserManagerService: int WRITE_USER_MSG> = 1;

        <com.android.server.pm.UserManagerService: boolean CONFIG_PROFILES_SHARE_CREDENTIAL> = 1;

        <com.android.server.pm.UserManagerService: int MAX_MANAGED_PROFILES> = 1;

        <com.android.server.pm.UserManagerService: long EPOCH_PLUS_30_YEARS> = 946080000000L;

        <com.android.server.pm.UserManagerService: int USER_VERSION> = 5;

        <com.android.server.pm.UserManagerService: int MIN_USER_ID> = 10;

        <com.android.server.pm.UserManagerService: java.lang.String XML_SUFFIX> = ".xml";

        <com.android.server.pm.UserManagerService: java.lang.String RESTRICTIONS_FILE_PREFIX> = "res_";

        <com.android.server.pm.UserManagerService: java.lang.String USER_PHOTO_FILENAME_TMP> = "photo.png.tmp";

        <com.android.server.pm.UserManagerService: java.lang.String USER_PHOTO_FILENAME> = "photo.png";

        <com.android.server.pm.UserManagerService: java.lang.String USER_LIST_FILENAME> = "userlist.xml";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BUNDLE_ARRAY> = "BA";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BUNDLE> = "B";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_INTEGER> = "i";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BOOLEAN> = "b";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING> = "s";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING_ARRAY> = "sa";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_MULTIPLE> = "m";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_VALUE_TYPE> = "type";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_KEY> = "key";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_VALUE> = "value";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_ENTRY> = "entry";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_RESTRICTIONS> = "restrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USER> = "user";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USERS> = "users";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_GUEST_RESTRICTIONS> = "guestRestrictions";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PROFILE_GROUP_ID> = "profileGroupId";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_USER_VERSION> = "version";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_GUEST_TO_REMOVE> = "guestToRemove";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PARTIAL> = "partial";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_NEXT_SERIAL_NO> = "nextSerialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SERIAL_NO> = "serialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_LAST_LOGGED_IN_TIME> = "lastLoggedIn";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_CREATION_TIME> = "created";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ID> = "id";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ICON_PATH> = "icon";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_FLAGS> = "flags";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_NAME> = "name";

        <com.android.server.pm.UserManagerService: boolean DBG> = 0;

        <com.android.server.pm.UserManagerService: java.lang.String LOG_TAG> = "UserManagerService";

        tmp$2121074256 = new java.lang.StringBuilder;

        specialinvoke tmp$2121074256.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke tmp$2121074256.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system");

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR> = $r5;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "no_record_audio";

        $r7 = staticinvoke <com.google.android.collect.Sets: android.util.ArraySet newArraySet(java.lang.Object[])>($r6);

        tmp$1298090276 = (java.util.Set) $r7;

        <com.android.server.pm.UserManagerService: java.util.Set SYSTEM_CONTROLLED_RESTRICTIONS> = tmp$1298090276;

        return;
    }
}
