final class com.android.server.pm.Settings extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int CURRENT_DATABASE_VERSION;
    private static final boolean DEBUG_STOPPED;
    private static final boolean DEBUG_MU;
    private static final java.lang.String RUNTIME_PERMISSIONS_FILE_NAME;
    private static final java.lang.String TAG_READ_EXTERNAL_STORAGE;
    private static final java.lang.String ATTR_ENFORCEMENT;
    private static final java.lang.String TAG_ITEM;
    private static final java.lang.String TAG_DISABLED_COMPONENTS;
    private static final java.lang.String TAG_ENABLED_COMPONENTS;
    private static final java.lang.String TAG_PACKAGE_RESTRICTIONS;
    private static final java.lang.String TAG_PACKAGE;
    private static final java.lang.String TAG_SHARED_USER;
    private static final java.lang.String TAG_RUNTIME_PERMISSIONS;
    private static final java.lang.String TAG_PERMISSIONS;
    private static final java.lang.String TAG_PERSISTENT_PREFERRED_ACTIVITIES;
    static final java.lang.String TAG_CROSS_PROFILE_INTENT_FILTERS;
    private static final java.lang.String TAG_DOMAIN_VERIFICATION;
    private static final java.lang.String TAG_DEFAULT_APPS;
    private static final java.lang.String TAG_ALL_INTENT_FILTER_VERIFICATION;
    private static final java.lang.String TAG_DEFAULT_BROWSER;
    private static final java.lang.String TAG_VERSION;
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_USER;
    private static final java.lang.String ATTR_CODE;
    private static final java.lang.String ATTR_NOT_LAUNCHED;
    private static final java.lang.String ATTR_ENABLED;
    private static final java.lang.String ATTR_GRANTED;
    private static final java.lang.String ATTR_FLAGS;
    private static final java.lang.String ATTR_ENABLED_CALLER;
    private static final java.lang.String ATTR_STOPPED;
    private static final java.lang.String ATTR_BLOCKED;
    private static final java.lang.String ATTR_HIDDEN;
    private static final java.lang.String ATTR_INSTALLED;
    private static final java.lang.String ATTR_BLOCK_UNINSTALL;
    private static final java.lang.String ATTR_DOMAIN_VERIFICATON_STATE;
    private static final java.lang.String ATTR_PACKAGE_NAME;
    private static final java.lang.String ATTR_FINGERPRINT;
    private static final java.lang.String ATTR_APP_LINK_GENERATION;
    private static final java.lang.String ATTR_VOLUME_UUID;
    private static final java.lang.String ATTR_SDK_VERSION;
    private static final java.lang.String ATTR_DATABASE_VERSION;
    private final java.lang.Object mLock;
    private final com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence;
    private final java.io.File mSettingsFilename;
    private final java.io.File mBackupSettingsFilename;
    private final java.io.File mPackageListFilename;
    private final java.io.File mStoppedPackagesFilename;
    private final java.io.File mBackupStoppedPackagesFilename;
    final android.util.ArrayMap mPackages;
    private final android.util.ArrayMap mDisabledSysPackages;
    private final android.util.ArrayMap mRestoredIntentFilterVerifications;
    private static int mFirstAvailableUid;
    private android.util.ArrayMap mVersion;
    java.lang.Boolean mReadExternalStorageEnforced;
    private android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity;
    final android.util.SparseArray mPreferredActivities;
    final android.util.SparseArray mPersistentPreferredActivities;
    final android.util.SparseArray mCrossProfileIntentResolvers;
    final android.util.ArrayMap mSharedUsers;
    private final java.util.ArrayList mUserIds;
    private final android.util.SparseArray mOtherUserIds;
    private final java.util.ArrayList mPastSignatures;
    private final android.util.ArrayMap mKeySetRefs;
    final android.util.ArrayMap mPermissions;
    final android.util.ArrayMap mPermissionTrees;
    final java.util.ArrayList mPackagesToBeCleaned;
    final android.util.ArrayMap mRenamedPackages;
    final android.util.SparseArray mDefaultBrowserApp;
    final android.util.SparseIntArray mNextAppLinkGeneration;
    final java.lang.StringBuilder mReadMessages;
    private final java.util.ArrayList mPendingPackages;
    private final java.io.File mSystemDir;
    public final com.android.server.pm.KeySetManagerService mKeySetManagerService;
    private static int PRE_M_APP_INFO_FLAG_HIDDEN;
    private static int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE;
    private static int PRE_M_APP_INFO_FLAG_FORWARD_LOCK;
    private static int PRE_M_APP_INFO_FLAG_PRIVILEGED;
    static final java.lang.Object[] FLAG_DUMP_SPEC;
    static final java.lang.Object[] PRIVATE_FLAG_DUMP_SPEC;

    void <init>(java.lang.Object)
    {
        com.android.server.pm.Settings this;
        java.lang.Object lock;
        java.io.File $r0;

        this := @this: com.android.server.pm.Settings;

        lock := @parameter0: java.lang.Object;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke this.<com.android.server.pm.Settings: void <init>(java.io.File,java.lang.Object)>($r0, lock);

        return;
    }

    void <init>(java.io.File, java.lang.Object)
    {
        com.android.server.pm.Settings this;
        java.io.File dataDir, $r23, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        java.lang.Object lock, $r24;
        android.util.ArrayMap $r0, $r1, $r2, $r3, $r7, $r11, $r12, $r14, $r16, $r22;
        android.util.SparseArray $r4, $r5, $r6, $r9, $r15;
        java.util.ArrayList $r8, $r10, $r13, $r20;
        java.lang.StringBuilder $r17;
        android.util.SparseIntArray $r18;
        com.android.server.pm.KeySetManagerService $r19;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r21;
        java.lang.String $r26;

        this := @this: com.android.server.pm.Settings;

        dataDir := @parameter0: java.io.File;

        lock := @parameter1: java.lang.Object;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new android.util.ArrayMap;

        specialinvoke $r0.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages> = $r0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        this.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures> = $r10;

        $r11 = new android.util.ArrayMap;

        specialinvoke $r11.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs> = $r11;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissions> = $r12;

        $r14 = new android.util.ArrayMap;

        specialinvoke $r14.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissionTrees> = $r14;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        this.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned> = $r13;

        $r16 = new android.util.ArrayMap;

        specialinvoke $r16.<android.util.ArrayMap: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages> = $r16;

        $r15 = new android.util.SparseArray;

        specialinvoke $r15.<android.util.SparseArray: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp> = $r15;

        $r18 = new android.util.SparseIntArray;

        specialinvoke $r18.<android.util.SparseIntArray: void <init>()>();

        this.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration> = $r18;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages> = $r17;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        this.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages> = $r20;

        $r19 = new com.android.server.pm.KeySetManagerService;

        $r22 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        specialinvoke $r19.<com.android.server.pm.KeySetManagerService: void <init>(android.util.ArrayMap)>($r22);

        this.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService> = $r19;

        this.<com.android.server.pm.Settings: java.lang.Object mLock> = lock;

        $r21 = new com.android.server.pm.Settings$RuntimePermissionPersistence;

        $r24 = this.<com.android.server.pm.Settings: java.lang.Object mLock>;

        specialinvoke $r21.<com.android.server.pm.Settings$RuntimePermissionPersistence: void <init>(com.android.server.pm.Settings,java.lang.Object)>(this, $r24);

        this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence> = $r21;

        $r23 = new java.io.File;

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>(dataDir, "system");

        this.<com.android.server.pm.Settings: java.io.File mSystemDir> = $r23;

        $r25 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        virtualinvoke $r25.<java.io.File: boolean mkdirs()>();

        $r27 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        $r26 = virtualinvoke $r27.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r26, 509, -1, -1);

        $r30 = new java.io.File;

        $r28 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r30.<java.io.File: void <init>(java.io.File,java.lang.String)>($r28, "packages.xml");

        this.<com.android.server.pm.Settings: java.io.File mSettingsFilename> = $r30;

        $r29 = new java.io.File;

        $r33 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r29.<java.io.File: void <init>(java.io.File,java.lang.String)>($r33, "packages-backup.xml");

        this.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename> = $r29;

        $r34 = new java.io.File;

        $r31 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r34.<java.io.File: void <init>(java.io.File,java.lang.String)>($r31, "packages.list");

        this.<com.android.server.pm.Settings: java.io.File mPackageListFilename> = $r34;

        $r32 = this.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        staticinvoke <android.os.FileUtils: int setPermissions(java.io.File,int,int,int)>($r32, 416, 1000, 1032);

        $r37 = new java.io.File;

        $r35 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r37.<java.io.File: void <init>(java.io.File,java.lang.String)>($r35, "packages-stopped.xml");

        this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename> = $r37;

        $r36 = new java.io.File;

        $r38 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r36.<java.io.File: void <init>(java.io.File,java.lang.String)>($r38, "packages-stopped-backup.xml");

        this.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename> = $r36;

        return;
    }

    com.android.server.pm.PackageSetting getPackageLPw(android.content.pm.PackageParser$Package, com.android.server.pm.PackageSetting, java.lang.String, com.android.server.pm.SharedUserSetting, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, int, int, android.os.UserHandle, boolean)
    {
        com.android.server.pm.Settings this;
        android.content.pm.PackageParser$Package pkg;
        com.android.server.pm.PackageSetting origPackage, p;
        java.lang.String realName, legacyNativeLibraryPathString, primaryCpuAbi, secondaryCpuAbi, name;
        com.android.server.pm.SharedUserSetting sharedUser;
        java.io.File codePath, resourcePath;
        int pkgFlags, pkgPrivateFlags, $i0;
        android.os.UserHandle user;
        boolean add;

        this := @this: com.android.server.pm.Settings;

        pkg := @parameter0: android.content.pm.PackageParser$Package;

        origPackage := @parameter1: com.android.server.pm.PackageSetting;

        realName := @parameter2: java.lang.String;

        sharedUser := @parameter3: com.android.server.pm.SharedUserSetting;

        codePath := @parameter4: java.io.File;

        resourcePath := @parameter5: java.io.File;

        legacyNativeLibraryPathString := @parameter6: java.lang.String;

        primaryCpuAbi := @parameter7: java.lang.String;

        secondaryCpuAbi := @parameter8: java.lang.String;

        pkgFlags := @parameter9: int;

        pkgPrivateFlags := @parameter10: int;

        user := @parameter11: android.os.UserHandle;

        add := @parameter12: boolean;

        name = pkg.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $i0 = pkg.<android.content.pm.PackageParser$Package: int mVersionCode>;

        p = specialinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(java.lang.String,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,int,int,android.os.UserHandle,boolean,boolean)>(name, origPackage, realName, sharedUser, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbi, secondaryCpuAbi, $i0, pkgFlags, pkgPrivateFlags, user, add, 1);

        return p;
    }

    com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String name;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        com.android.server.pm.PackageSetting $r2;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        $r2 = (com.android.server.pm.PackageSetting) $r1;

        return $r2;
    }

    void setInstallStatus(java.lang.String, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String pkgName;
        int status, $i0;
        com.android.server.pm.PackageSetting p;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;

        this := @this: com.android.server.pm.Settings;

        pkgName := @parameter0: java.lang.String;

        status := @parameter1: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(pkgName);

        p = (com.android.server.pm.PackageSetting) $r1;

        if p == null goto label1;

        $i0 = virtualinvoke p.<com.android.server.pm.PackageSetting: int getInstallStatus()>();

        if $i0 == status goto label1;

        virtualinvoke p.<com.android.server.pm.PackageSetting: void setInstallStatus(int)>(status);

     label1:
        return;
    }

    void setInstallerPackageName(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String pkgName, installerPkgName;
        com.android.server.pm.PackageSetting p;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;

        this := @this: com.android.server.pm.Settings;

        pkgName := @parameter0: java.lang.String;

        installerPkgName := @parameter1: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(pkgName);

        p = (com.android.server.pm.PackageSetting) $r1;

        if p == null goto label1;

        virtualinvoke p.<com.android.server.pm.PackageSetting: void setInstallerPackageName(java.lang.String)>(installerPkgName);

     label1:
        return;
    }

    com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String, int, int, boolean)
    {
        com.android.server.pm.Settings this;
        java.lang.String name, $r7;
        int pkgFlags, pkgPrivateFlags, $i0, $i1, $i2;
        boolean create;
        android.util.ArrayMap $r0, $r10;
        java.lang.Object $r1;
        com.android.server.pm.SharedUserSetting $r2, s#1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        pkgFlags := @parameter1: int;

        pkgPrivateFlags := @parameter2: int;

        create := @parameter3: boolean;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        s#1 = (com.android.server.pm.SharedUserSetting) $r1;

        if s#1 != null goto label2;

        if create != 0 goto label1;

        return null;

     label1:
        $r2 = new com.android.server.pm.SharedUserSetting;

        specialinvoke $r2.<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int,int)>(name, pkgFlags, pkgPrivateFlags);

        s#1 = $r2;

        $i0 = specialinvoke this.<com.android.server.pm.Settings: int newUserIdLPw(java.lang.Object)>(s#1);

        s#1.<com.android.server.pm.SharedUserSetting: int userId> = $i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New shared user ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": id=");

        $i1 = s#1.<com.android.server.pm.SharedUserSetting: int userId>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r7);

        $i2 = s#1.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i2 < 0 goto label2;

        $r10 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, s#1);

     label2:
        return s#1;
    }

    java.util.Collection getAllSharedUsersLPw()
    {
        com.android.server.pm.Settings this;
        android.util.ArrayMap $r0;
        java.util.Collection $r1;

        this := @this: com.android.server.pm.Settings;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.util.Collection values()>();

        return $r1;
    }

    boolean disableSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String name, $r16;
        com.android.server.pm.PackageSetting p, dp, newp, $r7;
        android.util.ArrayMap $r0, $r2, $r5;
        java.lang.Object $r1, $r3;
        android.content.pm.PackageParser$Package $r4, $r8, $r10;
        android.content.pm.ApplicationInfo $r9, $r11;
        int $i0, $i1;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        p = (com.android.server.pm.PackageSetting) $r1;

        if p != null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package:");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an installed package");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        return 0;

     label1:
        $r2 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        dp = (com.android.server.pm.PackageSetting) $r3;

        if dp != null goto label3;

        $r4 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r4 == null goto label2;

        $r8 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r9 = $r8.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r9 == null goto label2;

        $r10 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r11 = $r10.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 | 128;

        $r11.<android.content.pm.ApplicationInfo: int flags> = $i1;

     label2:
        $r5 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, p);

        $r7 = new com.android.server.pm.PackageSetting;

        specialinvoke $r7.<com.android.server.pm.PackageSetting: void <init>(com.android.server.pm.PackageSetting)>(p);

        newp = $r7;

        specialinvoke this.<com.android.server.pm.Settings: void replacePackageLPw(java.lang.String,com.android.server.pm.PackageSetting)>(name, newp);

        return 1;

     label3:
        return 0;
    }

    com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String name, $r3, $r4, $r5, $r6, $r8, $r20;
        com.android.server.pm.PackageSetting p, 'ret';
        android.util.ArrayMap $r0, $r10;
        java.lang.Object $r1;
        android.content.pm.PackageParser$Package $r2, $r11, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.File $r7, $r9;
        android.content.pm.ApplicationInfo $r14, $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r19;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        p = (com.android.server.pm.PackageSetting) $r1;

        if p != null goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package:");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not disabled");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r20);

        return null;

     label1:
        $r2 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r2 == null goto label2;

        $r11 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r14 = $r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r14 == null goto label2;

        $r13 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r15 = $r13.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r15.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & -129;

        $r15.<android.content.pm.ApplicationInfo: int flags> = $i5;

     label2:
        $r8 = p.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $r9 = p.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r7 = p.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $r6 = p.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $r5 = p.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        $r4 = p.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $r3 = p.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $i3 = p.<com.android.server.pm.PackageSetting: int appId>;

        $i2 = p.<com.android.server.pm.PackageSetting: int versionCode>;

        $i1 = p.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i0 = p.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        'ret' = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int)>(name, $r8, $r9, $r7, $r6, $r5, $r4, $r3, $i3, $i2, $i1, $i0);

        $r10 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(name);

        return 'ret';
    }

    boolean isDisabledSystemPackageLPr(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String name;
        android.util.ArrayMap $r0;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $z0 = virtualinvoke $r0.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(name);

        return $z0;
    }

    void removeDisabledSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String name;
        android.util.ArrayMap $r0;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(name);

        return;
    }

    com.android.server.pm.PackageSetting addPackageLPw(java.lang.String, java.lang.String, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, int, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String name, realName, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, cpuAbiOverrideString, $r7;
        java.io.File codePath, resourcePath;
        int uid, vc, pkgFlags, pkgPrivateFlags, $i0;
        android.util.ArrayMap $r0, $r4;
        java.lang.Object $r1;
        boolean $z0;
        com.android.server.pm.PackageSetting $r2, p#1, p#2;
        java.lang.StringBuilder $r5, $r6, $r8;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        realName := @parameter1: java.lang.String;

        codePath := @parameter2: java.io.File;

        resourcePath := @parameter3: java.io.File;

        legacyNativeLibraryPathString := @parameter4: java.lang.String;

        primaryCpuAbiString := @parameter5: java.lang.String;

        secondaryCpuAbiString := @parameter6: java.lang.String;

        cpuAbiOverrideString := @parameter7: java.lang.String;

        uid := @parameter8: int;

        vc := @parameter9: int;

        pkgFlags := @parameter10: int;

        pkgPrivateFlags := @parameter11: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        p#1 = (com.android.server.pm.PackageSetting) $r1;

        if p#1 == null goto label2;

        $i0 = p#1.<com.android.server.pm.PackageSetting: int appId>;

        if $i0 != uid goto label1;

        return p#1;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate package, keeping first: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r7);

        return null;

     label2:
        $r2 = new com.android.server.pm.PackageSetting;

        specialinvoke $r2.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(name, realName, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, cpuAbiOverrideString, vc, pkgFlags, pkgPrivateFlags);

        p#2 = $r2;

        p#2.<com.android.server.pm.PackageSetting: int appId> = uid;

        $z0 = specialinvoke this.<com.android.server.pm.Settings: boolean addUserIdLPw(int,java.lang.Object,java.lang.Object)>(uid, p#2, name);

        if $z0 == 0 goto label3;

        $r4 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, p#2);

        return p#2;

     label3:
        return null;
    }

    com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String, int, int, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String name, $r7;
        int uid, pkgFlags, pkgPrivateFlags, $i0;
        android.util.ArrayMap $r0, $r3;
        java.lang.Object $r1;
        com.android.server.pm.SharedUserSetting $r2, s#1, s#2;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r8;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        uid := @parameter1: int;

        pkgFlags := @parameter2: int;

        pkgPrivateFlags := @parameter3: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        s#1 = (com.android.server.pm.SharedUserSetting) $r1;

        if s#1 == null goto label2;

        $i0 = s#1.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i0 != uid goto label1;

        return s#1;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared user, keeping first: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r7);

        return null;

     label2:
        $r2 = new com.android.server.pm.SharedUserSetting;

        specialinvoke $r2.<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int,int)>(name, pkgFlags, pkgPrivateFlags);

        s#2 = $r2;

        s#2.<com.android.server.pm.SharedUserSetting: int userId> = uid;

        $z0 = specialinvoke this.<com.android.server.pm.Settings: boolean addUserIdLPw(int,java.lang.Object,java.lang.Object)>(uid, s#2, name);

        if $z0 == 0 goto label3;

        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, s#2);

        return s#2;

     label3:
        return null;
    }

    void pruneSharedUsersLPw()
    {
        com.android.server.pm.Settings this;
        java.util.ArrayList removeStage, $r0;
        java.util.Map$Entry entry;
        com.android.server.pm.SharedUserSetting sus;
        android.util.ArrayMap $r1, $r3;
        java.util.Set $r2;
        boolean $z0;
        int $i0, $i1, i$#2;
        java.lang.Object $r4, $r6, $r7, $r8;
        android.util.ArraySet $r9;
        java.util.Iterator i$#1;

        this := @this: com.android.server.pm.Settings;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        removeStage = $r0;

        $r1 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Set entrySet()>();

        i$#1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$#1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke i$#1.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        sus = (com.android.server.pm.SharedUserSetting) $r7;

        if sus == null goto label2;

        $r9 = sus.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        $i1 = virtualinvoke $r9.<android.util.ArraySet: int size()>();

        if $i1 != 0 goto label3;

     label2:
        $r8 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke removeStage.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label3:
        goto label1;

     label4:
        i$#2 = 0;

     label5:
        $i0 = virtualinvoke removeStage.<java.util.ArrayList: int size()>();

        if i$#2 >= $i0 goto label6;

        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r4 = virtualinvoke removeStage.<java.util.ArrayList: java.lang.Object get(int)>(i$#2);

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r4);

        i$#2 = i$#2 + 1;

        goto label5;

     label6:
        return;
    }

    void transferPermissionsLPw(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String origPkg, newPkg, $r2;
        android.util.ArrayMap permissions, $r5;
        java.util.Iterator i$;
        com.android.server.pm.BasePermission bp;
        java.util.Collection $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        android.content.pm.PermissionInfo $r3, $r4;
        int i#1;

        this := @this: com.android.server.pm.Settings;

        origPkg := @parameter0: java.lang.String;

        newPkg := @parameter1: java.lang.String;

        i#1 = 0;

     label1:
        if i#1 >= 2 goto label8;

        if i#1 != 0 goto label2;

        $r5 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissionTrees>;

        goto label3;

     label2:
        $r5 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissions>;

     label3:
        permissions = $r5;

        $r0 = virtualinvoke permissions.<android.util.ArrayMap: java.util.Collection values()>();

        i$ = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r1 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        bp = (com.android.server.pm.BasePermission) $r1;

        $r2 = bp.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z1 = virtualinvoke origPkg.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label6;

        bp.<com.android.server.pm.BasePermission: java.lang.String sourcePackage> = newPkg;

        bp.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = null;

        bp.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = null;

        $r3 = bp.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        if $r3 == null goto label5;

        $r4 = bp.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        $r4.<android.content.pm.PermissionInfo: java.lang.String packageName> = newPkg;

     label5:
        bp.<com.android.server.pm.BasePermission: int uid> = 0;

        virtualinvoke bp.<com.android.server.pm.BasePermission: void setGids(int[],boolean)>(null, 0);

     label6:
        goto label4;

     label7:
        i#1 = i#1 + 1;

        goto label1;

     label8:
        return;
    }

    private com.android.server.pm.PackageSetting getPackageLPw(java.lang.String, com.android.server.pm.PackageSetting, java.lang.String, com.android.server.pm.SharedUserSetting, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, int, int, int, android.os.UserHandle, boolean, boolean)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageSetting origPackage, $r3, $r28, p#2, s#13;
        java.lang.String realName, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, $r7, $r27, $r32, $r37, $r47, $r55, $r60, $r61, name#1, $r63, $r64;
        com.android.server.pm.SharedUserSetting sharedUser, $r24, $r30, $r40, $r46;
        java.io.File codePath, resourcePath, $r29, $r52;
        int vc, pkgFlags, pkgPrivateFlags, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i31, installUserId#8, installed#17;
        android.os.UserHandle installUser;
        boolean add, allowInstall, $z0, $z1, $z3, $z4, $z5, $z6, $z7, installed#12, user#21;
        com.android.server.pm.UserManagerService userManager;
        android.util.ArrayMap $r0, $r4, $r31;
        java.lang.Object $r1, $r2, $r5, $r16, $r17, $r23;
        long $l7, $l20;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r34, $r35, $r36, $r38, $r39, $r41, $r42, $r43, $r44, $r45, $r48, $r49, $r50, $r51, $r53, $r54, $r56, $r57, $r58, $r59, $r62;
        com.android.server.pm.PermissionsState $r11, $r14, $r25, $r26;
        android.content.pm.Signature[] $r12, $r18, $r21;
        com.android.server.pm.PackageSignatures $r13, $r20, $r22, s#5;
        android.util.ArraySet $r15, $r19;
        java.util.List s#6, installUserId#14, s#18;
        java.util.Iterator i$#9, i$#15, installUserId#19;
        android.content.pm.UserInfo user#10, user#16, i$#20;

        this := @this: com.android.server.pm.Settings;

        name#1 := @parameter0: java.lang.String;

        origPackage := @parameter1: com.android.server.pm.PackageSetting;

        realName := @parameter2: java.lang.String;

        sharedUser := @parameter3: com.android.server.pm.SharedUserSetting;

        codePath := @parameter4: java.io.File;

        resourcePath := @parameter5: java.io.File;

        legacyNativeLibraryPathString := @parameter6: java.lang.String;

        primaryCpuAbiString := @parameter7: java.lang.String;

        secondaryCpuAbiString := @parameter8: java.lang.String;

        vc := @parameter9: int;

        pkgFlags := @parameter10: int;

        pkgPrivateFlags := @parameter11: int;

        installUser := @parameter12: android.os.UserHandle;

        add := @parameter13: boolean;

        allowInstall := @parameter14: boolean;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name#1);

        p#2 = (com.android.server.pm.PackageSetting) $r1;

        userManager = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        if p#2 == null goto label08;

        p#2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = primaryCpuAbiString;

        p#2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = secondaryCpuAbiString;

        $r29 = p#2.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z6 = virtualinvoke $r29.<java.io.File: boolean equals(java.lang.Object)>(codePath);

        if $z6 != 0 goto label02;

        $i28 = p#2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i27 = $i28 & 1;

        if $i27 == 0 goto label01;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to update system app code path from ");

        $r60 = p#2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r61 = virtualinvoke codePath.<java.io.File: java.lang.String toString()>();

        $r56 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r55);

        goto label02;

     label01:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r54 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" codePath changed from ");

        $r52 = p#2.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r51 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(codePath);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Retaining data and using new");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r47);

        p#2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = legacyNativeLibraryPathString;

     label02:
        $r30 = p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r30 == sharedUser goto label07;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r42 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared user changed from ");

        $r40 = p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r40 == null goto label03;

        $r46 = p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r63 = $r46.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        goto label04;

     label03:
        $r63 = "<nothing>";

     label04:
        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r38 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        if sharedUser == null goto label05;

        $r64 = sharedUser.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        goto label06;

     label05:
        $r64 = "<nothing>";

     label06:
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; replacing with new");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r37);

        p#2 = null;

        goto label08;

     label07:
        $i25 = p#2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i19 = pkgFlags & 1;

        $i26 = $i25 | $i19;

        p#2.<com.android.server.pm.PackageSetting: int pkgFlags> = $i26;

        $i24 = p#2.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i23 = pkgPrivateFlags & 8;

        $i22 = $i24 | $i23;

        p#2.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i22;

     label08:
        if p#2 != null goto label25;

        if origPackage == null goto label09;

        $r28 = new com.android.server.pm.PackageSetting;

        $r27 = origPackage.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke $r28.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>($r27, name#1, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, null, vc, pkgFlags, pkgPrivateFlags);

        p#2 = $r28;

        s#5 = p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        virtualinvoke p#2.<com.android.server.pm.PackageSetting: void copyFrom(com.android.server.pm.PackageSettingBase)>(origPackage);

        p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures> = s#5;

        $r24 = origPackage.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = $r24;

        $i18 = origPackage.<com.android.server.pm.PackageSetting: int appId>;

        p#2.<com.android.server.pm.PackageSetting: int appId> = $i18;

        p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSettingBase origPackage> = origPackage;

        $r26 = virtualinvoke p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r25 = virtualinvoke origPackage.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        virtualinvoke $r26.<com.android.server.pm.PermissionsState: void copyFrom(com.android.server.pm.PermissionsState)>($r25);

        $r31 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $r32 = origPackage.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name#1, $r32);

        name#1 = origPackage.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $l20 = virtualinvoke codePath.<java.io.File: long lastModified()>();

        virtualinvoke p#2.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l20);

        goto label23;

     label09:
        $r3 = new com.android.server.pm.PackageSetting;

        specialinvoke $r3.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(name#1, realName, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, null, vc, pkgFlags, pkgPrivateFlags);

        p#2 = $r3;

        $l7 = virtualinvoke codePath.<java.io.File: long lastModified()>();

        virtualinvoke p#2.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l7);

        p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = sharedUser;

        $i8 = pkgFlags & 1;

        if $i8 != 0 goto label17;

        s#6 = virtualinvoke this.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if installUser == null goto label10;

        $i31 = virtualinvoke installUser.<android.os.UserHandle: int getIdentifier()>();

        goto label11;

     label10:
        $i31 = 0;

     label11:
        installUserId#8 = $i31;

        if s#6 == null goto label17;

        if allowInstall == 0 goto label17;

        i$#9 = interfaceinvoke s#6.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke i$#9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label17;

        $r23 = interfaceinvoke i$#9.<java.util.Iterator: java.lang.Object next()>();

        user#10 = (android.content.pm.UserInfo) $r23;

        if installUser == null goto label14;

        if installUserId#8 != -1 goto label13;

        $i16 = user#10.<android.content.pm.UserInfo: int id>;

        $z5 = virtualinvoke this.<com.android.server.pm.Settings: boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService,int)>(userManager, $i16);

        if $z5 == 0 goto label14;

     label13:
        $i15 = user#10.<android.content.pm.UserInfo: int id>;

        if installUserId#8 != $i15 goto label15;

     label14:
        $z7 = 1;

        goto label16;

     label15:
        $z7 = 0;

     label16:
        installed#12 = $z7;

        $i17 = user#10.<android.content.pm.UserInfo: int id>;

        virtualinvoke p#2.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,android.util.ArraySet,android.util.ArraySet,boolean,int,int)>($i17, 0, installed#12, 1, 1, 0, null, null, null, 0, 0, 0);

        $i14 = user#10.<android.content.pm.UserInfo: int id>;

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i14);

        goto label12;

     label17:
        if sharedUser == null goto label18;

        $i13 = sharedUser.<com.android.server.pm.SharedUserSetting: int userId>;

        p#2.<com.android.server.pm.PackageSetting: int appId> = $i13;

        goto label23;

     label18:
        $r4 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name#1);

        s#13 = (com.android.server.pm.PackageSetting) $r5;

        if s#13 == null goto label22;

        $r13 = s#13.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r12 = $r13.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r12 == null goto label19;

        $r22 = p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r20 = s#13.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r21 = $r20.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r17 = virtualinvoke $r21.<java.lang.Object: java.lang.Object clone()>();

        $r18 = (android.content.pm.Signature[]) $r17;

        $r22.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures> = $r18;

     label19:
        $i11 = s#13.<com.android.server.pm.PackageSetting: int appId>;

        p#2.<com.android.server.pm.PackageSetting: int appId> = $i11;

        $r11 = virtualinvoke p#2.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r14 = virtualinvoke s#13.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        virtualinvoke $r11.<com.android.server.pm.PermissionsState: void copyFrom(com.android.server.pm.PermissionsState)>($r14);

        installUserId#14 = virtualinvoke this.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if installUserId#14 == null goto label21;

        i$#15 = interfaceinvoke installUserId#14.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z3 = interfaceinvoke i$#15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r16 = interfaceinvoke i$#15.<java.util.Iterator: java.lang.Object next()>();

        user#16 = (android.content.pm.UserInfo) $r16;

        installed#17 = user#16.<android.content.pm.UserInfo: int id>;

        $r15 = virtualinvoke s#13.<com.android.server.pm.PackageSetting: android.util.ArraySet getDisabledComponents(int)>(installed#17);

        virtualinvoke p#2.<com.android.server.pm.PackageSetting: void setDisabledComponentsCopy(android.util.ArraySet,int)>($r15, installed#17);

        $r19 = virtualinvoke s#13.<com.android.server.pm.PackageSetting: android.util.ArraySet getEnabledComponents(int)>(installed#17);

        virtualinvoke p#2.<com.android.server.pm.PackageSetting: void setEnabledComponentsCopy(android.util.ArraySet,int)>($r19, installed#17);

        goto label20;

     label21:
        $i12 = p#2.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke this.<com.android.server.pm.Settings: boolean addUserIdLPw(int,java.lang.Object,java.lang.Object)>($i12, p#2, name#1);

        goto label23;

     label22:
        $i9 = specialinvoke this.<com.android.server.pm.Settings: int newUserIdLPw(java.lang.Object)>(p#2);

        p#2.<com.android.server.pm.PackageSetting: int appId> = $i9;

     label23:
        $i10 = p#2.<com.android.server.pm.PackageSetting: int appId>;

        if $i10 >= 0 goto label24;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be assigned a valid uid");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r7);

        return null;

     label24:
        if add == 0 goto label30;

        specialinvoke this.<com.android.server.pm.Settings: void addPackageSettingLPw(com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting)>(p#2, name#1, sharedUser);

        goto label30;

     label25:
        if installUser == null goto label30;

        if allowInstall == 0 goto label30;

        s#18 = virtualinvoke this.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if s#18 == null goto label30;

        installUserId#19 = interfaceinvoke s#18.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z0 = interfaceinvoke installUserId#19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r2 = interfaceinvoke installUserId#19.<java.util.Iterator: java.lang.Object next()>();

        i$#20 = (android.content.pm.UserInfo) $r2;

        $i1 = virtualinvoke installUser.<android.os.UserHandle: int getIdentifier()>();

        if $i1 != -1 goto label27;

        $i6 = i$#20.<android.content.pm.UserInfo: int id>;

        $z1 = virtualinvoke this.<com.android.server.pm.Settings: boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService,int)>(userManager, $i6);

        if $z1 == 0 goto label28;

     label27:
        $i0 = virtualinvoke installUser.<android.os.UserHandle: int getIdentifier()>();

        $i3 = i$#20.<android.content.pm.UserInfo: int id>;

        if $i0 != $i3 goto label29;

     label28:
        $i4 = i$#20.<android.content.pm.UserInfo: int id>;

        user#21 = virtualinvoke p#2.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i4);

        if user#21 != 0 goto label29;

        $i2 = i$#20.<android.content.pm.UserInfo: int id>;

        virtualinvoke p#2.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(1, $i2);

        $i5 = i$#20.<android.content.pm.UserInfo: int id>;

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i5);

     label29:
        goto label26;

     label30:
        return p#2;
    }

    boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.UserManagerService userManager;
        int userId;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        userManager := @parameter0: com.android.server.pm.UserManagerService;

        userId := @parameter1: int;

        $z0 = virtualinvoke userManager.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", userId);

        return $z0;
    }

    void insertPackageSettingLPw(com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageSetting p;
        android.content.pm.PackageParser$Package pkg, $r30, $r46, $r51;
        java.lang.String volumeUuid, codePath, resourcePath, legacyNativeLibraryPath, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r17, $r29, $r33, $r36, $r42, $r47, $r52, $r53, $r58, $r62;
        android.content.pm.ApplicationInfo $r0, $r1, $r2, $r3, $r8, $r9, $r15, $r23;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.Signature[] $r13, $r19, $r24, $r27;
        com.android.server.pm.PackageSignatures $r14, $r22, $r25, $r28;
        com.android.server.pm.SharedUserSetting $r16, $r18, $r20, $r21;
        java.lang.StringBuilder $r26, $r31, $r32, $r34, $r35, $r37, $r38, $r39, $r40, $r43, $r44, $r45, $r48, $r49, $r50, $r55, $r56, $r57, $r59, $r60, $r61;
        java.io.File $r41, $r54;

        this := @this: com.android.server.pm.Settings;

        p := @parameter0: com.android.server.pm.PackageSetting;

        pkg := @parameter1: android.content.pm.PackageParser$Package;

        p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg> = pkg;

        $r0 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        volumeUuid = $r0.<android.content.pm.ApplicationInfo: java.lang.String volumeUuid>;

        $r1 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        codePath = virtualinvoke $r1.<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>();

        $r2 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        resourcePath = virtualinvoke $r2.<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()>();

        $r3 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        legacyNativeLibraryPath = $r3.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        $r4 = p.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(volumeUuid, $r4);

        if $z0 != 0 goto label1;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Volume for ");

        $r51 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r52 = $r51.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r60 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changing from ");

        $r62 = p.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r57 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(volumeUuid);

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r58);

        p.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid> = volumeUuid;

     label1:
        $r5 = p.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(codePath, $r5);

        if $z1 != 0 goto label2;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code path for ");

        $r46 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r47 = $r46.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r48 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changing from ");

        $r42 = p.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r43 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(codePath);

        $r53 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r53);

        $r54 = new java.io.File;

        specialinvoke $r54.<java.io.File: void <init>(java.lang.String)>(codePath);

        p.<com.android.server.pm.PackageSetting: java.io.File codePath> = $r54;

        p.<com.android.server.pm.PackageSetting: java.lang.String codePathString> = codePath;

     label2:
        $r6 = p.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(resourcePath, $r6);

        if $z2 != 0 goto label3;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource path for ");

        $r30 = p.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r29 = $r30.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changing from ");

        $r33 = p.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourcePath);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r36);

        $r41 = new java.io.File;

        specialinvoke $r41.<java.io.File: void <init>(java.lang.String)>(resourcePath);

        p.<com.android.server.pm.PackageSetting: java.io.File resourcePath> = $r41;

        p.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString> = resourcePath;

     label3:
        $r7 = p.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(legacyNativeLibraryPath, $r7);

        if $z3 != 0 goto label4;

        p.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = legacyNativeLibraryPath;

     label4:
        $r8 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r8.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        p.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = $r10;

        $r9 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r9.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        p.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = $r12;

        $r11 = pkg.<android.content.pm.PackageParser$Package: java.lang.String cpuAbiOverride>;

        p.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString> = $r11;

        $i0 = pkg.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $i1 = p.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i0 == $i1 goto label5;

        $i5 = pkg.<android.content.pm.PackageParser$Package: int mVersionCode>;

        p.<com.android.server.pm.PackageSetting: int versionCode> = $i5;

     label5:
        $r14 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r13 = $r14.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r13 != null goto label6;

        $r28 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r27 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        virtualinvoke $r28.<com.android.server.pm.PackageSignatures: void assignSignatures(android.content.pm.Signature[])>($r27);

     label6:
        $r15 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r15.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = p.<com.android.server.pm.PackageSetting: int pkgFlags>;

        if $i3 == $i2 goto label7;

        $r23 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r23.<android.content.pm.ApplicationInfo: int flags>;

        p.<com.android.server.pm.PackageSetting: int pkgFlags> = $i4;

     label7:
        $r18 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r18 == null goto label8;

        $r21 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r22 = $r21.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r19 = $r22.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r19 != null goto label8;

        $r20 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r25 = $r20.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r24 = pkg.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        virtualinvoke $r25.<com.android.server.pm.PackageSignatures: void assignSignatures(android.content.pm.Signature[])>($r24);

     label8:
        $r17 = pkg.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r16 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        specialinvoke this.<com.android.server.pm.Settings: void addPackageSettingLPw(com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting)>(p, $r17, $r16);

        return;
    }

    private void addPackageSettingLPw(com.android.server.pm.PackageSetting, java.lang.String, com.android.server.pm.SharedUserSetting)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageSetting p;
        java.lang.String name, $r8, $r16, $r21, $r28;
        com.android.server.pm.SharedUserSetting sharedUser, $r6, $r17, $r23, $r31;
        java.lang.Object userIdPs, $r3;
        android.content.pm.IntentFilterVerificationInfo ivi;
        android.util.ArrayMap $r0, $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r22, $r24, $r25, $r26, $r27, $r29, $r30;

        this := @this: com.android.server.pm.Settings;

        p := @parameter0: com.android.server.pm.PackageSetting;

        name := @parameter1: java.lang.String;

        sharedUser := @parameter2: com.android.server.pm.SharedUserSetting;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, p);

        if sharedUser == null goto label3;

        $r6 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r6 == null goto label1;

        $r17 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r17 == sharedUser goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r21 = p.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user ");

        $r23 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(sharedUser);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r28);

        $r31 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r31.<com.android.server.pm.SharedUserSetting: void removePackage(com.android.server.pm.PackageSetting)>(p);

        goto label2;

     label1:
        $i5 = p.<com.android.server.pm.PackageSetting: int appId>;

        $i3 = sharedUser.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i5 == $i3 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r8 = p.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user id ");

        $i6 = p.<com.android.server.pm.PackageSetting: int appId>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now user ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(sharedUser);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with id ");

        $i7 = sharedUser.<com.android.server.pm.SharedUserSetting: int userId>;

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r16);

     label2:
        virtualinvoke sharedUser.<com.android.server.pm.SharedUserSetting: void addPackage(com.android.server.pm.PackageSetting)>(p);

        p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = sharedUser;

        $i4 = sharedUser.<com.android.server.pm.SharedUserSetting: int userId>;

        p.<com.android.server.pm.PackageSetting: int appId> = $i4;

     label3:
        $i0 = p.<com.android.server.pm.PackageSetting: int appId>;

        userIdPs = virtualinvoke this.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i0);

        if sharedUser != null goto label4;

        if userIdPs == null goto label5;

        if userIdPs == p goto label5;

        $i2 = p.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke this.<com.android.server.pm.Settings: void replaceUserIdLPw(int,java.lang.Object)>($i2, p);

        goto label5;

     label4:
        if userIdPs == null goto label5;

        if userIdPs == sharedUser goto label5;

        $i1 = p.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke this.<com.android.server.pm.Settings: void replaceUserIdLPw(int,java.lang.Object)>($i1, sharedUser);

     label5:
        $r2 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        ivi = (android.content.pm.IntentFilterVerificationInfo) $r3;

        if ivi == null goto label6;

        $r4 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(name);

        virtualinvoke p.<com.android.server.pm.PackageSetting: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>(ivi);

     label6:
        return;
    }

    int updateSharedUserPermsLPw(com.android.server.pm.PackageSetting, int)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageSetting deletedPs, pkg#3, pkg#5;
        int userId, $i1, $i2;
        com.android.server.pm.SharedUserSetting sus, $r1;
        java.util.Iterator i$, i$, i$#2;
        java.lang.String eachPerm, permission, $r9, $r15, $r20;
        com.android.server.pm.BasePermission bp;
        android.content.pm.PackageParser$Package $r0, $r3, $r8, $r11, $r14, $r16, $r17, $r18;
        java.util.ArrayList $r2, $r10, $r19;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, used#1, reqByDisabledSysPkg#6;
        android.util.ArrayMap $r4;
        java.lang.Object $r5, $r7, $r12, $r13;
        android.util.ArraySet $r6;
        com.android.server.pm.PermissionsState i$#4;

        this := @this: com.android.server.pm.Settings;

        deletedPs := @parameter0: com.android.server.pm.PackageSetting;

        userId := @parameter1: int;

        if deletedPs == null goto label01;

        $r0 = deletedPs.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r0 != null goto label02;

     label01:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", "Trying to update info for null package. Just ignoring");

        return -10000;

     label02:
        $r1 = deletedPs.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r1 != null goto label03;

        return -10000;

     label03:
        sus = deletedPs.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r3 = deletedPs.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r2 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        i$ = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r5 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        eachPerm = (java.lang.String) $r5;

        $r4 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissions>;

        $r7 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(eachPerm);

        bp = (com.android.server.pm.BasePermission) $r7;

        if bp != null goto label05;

        goto label04;

     label05:
        used#1 = 0;

        $r6 = sus.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        i$#2 = virtualinvoke $r6.<android.util.ArraySet: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke i$#2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r12 = interfaceinvoke i$#2.<java.util.Iterator: java.lang.Object next()>();

        pkg#3 = (com.android.server.pm.PackageSetting) $r12;

        $r16 = pkg#3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r16 == null goto label07;

        $r17 = pkg#3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r20 = $r17.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r14 = deletedPs.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r15 = $r14.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z5 != 0 goto label07;

        $r18 = pkg#3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r19 = $r18.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $z6 = virtualinvoke $r19.<java.util.ArrayList: boolean contains(java.lang.Object)>(eachPerm);

        if $z6 == 0 goto label07;

        used#1 = 1;

        goto label08;

     label07:
        goto label06;

     label08:
        if used#1 == 0 goto label09;

        goto label04;

     label09:
        i$#4 = virtualinvoke sus.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r8 = deletedPs.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r9 = $r8.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        pkg#5 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r9);

        if pkg#5 == null goto label13;

        reqByDisabledSysPkg#6 = 0;

        $r11 = pkg#5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r10 = $r11.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        i$ = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        permission = (java.lang.String) $r13;

        $z3 = virtualinvoke permission.<java.lang.String: boolean equals(java.lang.Object)>(eachPerm);

        if $z3 == 0 goto label11;

        reqByDisabledSysPkg#6 = 1;

        goto label12;

     label11:
        goto label10;

     label12:
        if reqByDisabledSysPkg#6 == 0 goto label13;

        goto label04;

     label13:
        virtualinvoke i$#4.<com.android.server.pm.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.BasePermission,int,int,int)>(bp, userId, 255, 0);

        $i1 = virtualinvoke i$#4.<com.android.server.pm.PermissionsState: int revokeInstallPermission(com.android.server.pm.BasePermission)>(bp);

        if $i1 != 1 goto label14;

        return -1;

     label14:
        $i2 = virtualinvoke i$#4.<com.android.server.pm.PermissionsState: int revokeRuntimePermission(com.android.server.pm.BasePermission,int)>(bp, userId);

        if $i2 != 1 goto label15;

        return userId;

     label15:
        goto label04;

     label16:
        return -10000;
    }

    int removePackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String name, $r9;
        com.android.server.pm.PackageSetting p;
        android.util.ArrayMap $r0, $r2, $r11;
        java.lang.Object $r1;
        com.android.server.pm.SharedUserSetting $r4, $r5, $r6, $r8, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4;
        android.util.ArraySet $r7;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        p = (com.android.server.pm.PackageSetting) $r1;

        if p == null goto label2;

        $r2 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(name);

        $r4 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r4 == null goto label1;

        $r5 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r5.<com.android.server.pm.SharedUserSetting: void removePackage(com.android.server.pm.PackageSetting)>(p);

        $r6 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r7 = $r6.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        $i2 = virtualinvoke $r7.<android.util.ArraySet: int size()>();

        if $i2 != 0 goto label2;

        $r11 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r8 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r9 = $r8.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r9);

        $r12 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $i3 = $r12.<com.android.server.pm.SharedUserSetting: int userId>;

        specialinvoke this.<com.android.server.pm.Settings: void removeUserIdLPw(int)>($i3);

        $r13 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $i4 = $r13.<com.android.server.pm.SharedUserSetting: int userId>;

        return $i4;

     label1:
        $i0 = p.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke this.<com.android.server.pm.Settings: void removeUserIdLPw(int)>($i0);

        $i1 = p.<com.android.server.pm.PackageSetting: int appId>;

        return $i1;

     label2:
        return -1;
    }

    private void replacePackageLPw(java.lang.String, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.Settings this;
        java.lang.String name;
        com.android.server.pm.PackageSetting newp, p;
        android.util.ArrayMap $r0, $r2;
        java.lang.Object $r1;
        com.android.server.pm.SharedUserSetting $r4, $r5, $r6;
        int $i0;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        newp := @parameter1: com.android.server.pm.PackageSetting;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        p = (com.android.server.pm.PackageSetting) $r1;

        if p == null goto label2;

        $r4 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r4 == null goto label1;

        $r5 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r5.<com.android.server.pm.SharedUserSetting: void removePackage(com.android.server.pm.PackageSetting)>(p);

        $r6 = p.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r6.<com.android.server.pm.SharedUserSetting: void addPackage(com.android.server.pm.PackageSetting)>(newp);

        goto label2;

     label1:
        $i0 = p.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke this.<com.android.server.pm.Settings: void replaceUserIdLPw(int,java.lang.Object)>($i0, newp);

     label2:
        $r2 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, newp);

        return;
    }

    private boolean addUserIdLPw(int, java.lang.Object, java.lang.Object)
    {
        com.android.server.pm.Settings this;
        int uid, index, N#1;
        java.lang.Object obj, name, $r1, $r10;
        android.util.SparseArray $r0, $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r14, $r15, $r16, $r17, $r18;
        java.lang.String $r8, $r20;
        java.util.ArrayList $r9, $r11, $r13, $r19;

        this := @this: com.android.server.pm.Settings;

        uid := @parameter0: int;

        obj := @parameter1: java.lang.Object;

        name := @parameter2: java.lang.Object;

        if uid <= 19999 goto label1;

        return 0;

     label1:
        if uid < 10000 goto label5;

        $r9 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        N#1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        index = uid - 10000;

     label2:
        if index < N#1 goto label3;

        $r19 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        N#1 = N#1 + 1;

        goto label2;

     label3:
        $r11 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(index);

        if $r10 == null goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate user id: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(uid);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r20);

        return 0;

     label4:
        $r13 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(index, obj);

        goto label7;

     label5:
        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(uid);

        if $r1 == null goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared id: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(uid);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r8);

        return 0;

     label6:
        $r2 = this.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(uid, obj);

     label7:
        return 1;
    }

    public java.lang.Object getUserIdLPr(int)
    {
        com.android.server.pm.Settings this;
        int uid, N, index;
        android.util.SparseArray $r0;
        java.lang.Object $r1, $r4;
        java.util.ArrayList $r2, $r3;

        this := @this: com.android.server.pm.Settings;

        uid := @parameter0: int;

        if uid < 10000 goto label3;

        $r2 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        N = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        index = uid - 10000;

        if index >= N goto label1;

        $r3 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(index);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;

     label3:
        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(uid);

        return $r1;
    }

    private void removeUserIdLPw(int)
    {
        com.android.server.pm.Settings this;
        int uid, N, index, $i0;
        android.util.SparseArray $r0;
        java.util.ArrayList $r1, $r2;

        this := @this: com.android.server.pm.Settings;

        uid := @parameter0: int;

        if uid < 10000 goto label2;

        $r1 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        N = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        index = uid - 10000;

        if index >= N goto label1;

        $r2 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(index, null);

     label1:
        goto label3;

     label2:
        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r0.<android.util.SparseArray: void remove(int)>(uid);

     label3:
        $i0 = uid + 1;

        specialinvoke this.<com.android.server.pm.Settings: void setFirstAvailableUid(int)>($i0);

        return;
    }

    private void replaceUserIdLPw(int, java.lang.Object)
    {
        com.android.server.pm.Settings this;
        int uid, N, index;
        java.lang.Object obj;
        android.util.SparseArray $r0;
        java.util.ArrayList $r1, $r2;

        this := @this: com.android.server.pm.Settings;

        uid := @parameter0: int;

        obj := @parameter1: java.lang.Object;

        if uid < 10000 goto label2;

        $r1 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        N = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        index = uid - 10000;

        if index >= N goto label1;

        $r2 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(index, obj);

     label1:
        goto label3;

     label2:
        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r0.<android.util.SparseArray: void put(int,java.lang.Object)>(uid, obj);

     label3:
        return;
    }

    com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        android.util.SparseArray $r0, $r3;
        java.lang.Object $r1;
        com.android.server.pm.PreferredIntentResolver $r2, pir#1;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        pir#1 = (com.android.server.pm.PreferredIntentResolver) $r1;

        if pir#1 != null goto label1;

        $r2 = new com.android.server.pm.PreferredIntentResolver;

        specialinvoke $r2.<com.android.server.pm.PreferredIntentResolver: void <init>()>();

        pir#1 = $r2;

        $r3 = this.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(userId, pir#1);

     label1:
        return pir#1;
    }

    com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        android.util.SparseArray $r0, $r3;
        java.lang.Object $r1;
        com.android.server.pm.PersistentPreferredIntentResolver $r2, ppir#1;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        ppir#1 = (com.android.server.pm.PersistentPreferredIntentResolver) $r1;

        if ppir#1 != null goto label1;

        $r2 = new com.android.server.pm.PersistentPreferredIntentResolver;

        specialinvoke $r2.<com.android.server.pm.PersistentPreferredIntentResolver: void <init>()>();

        ppir#1 = $r2;

        $r3 = this.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(userId, ppir#1);

     label1:
        return ppir#1;
    }

    com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        android.util.SparseArray $r0, $r3;
        java.lang.Object $r1;
        com.android.server.pm.CrossProfileIntentResolver $r2, cpir#1;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        cpir#1 = (com.android.server.pm.CrossProfileIntentResolver) $r1;

        if cpir#1 != null goto label1;

        $r2 = new com.android.server.pm.CrossProfileIntentResolver;

        specialinvoke $r2.<com.android.server.pm.CrossProfileIntentResolver: void <init>()>();

        cpir#1 = $r2;

        $r3 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(userId, cpir#1);

     label1:
        return cpir#1;
    }

    android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationLPr(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        android.content.pm.IntentFilterVerificationInfo $r2;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        ps = (com.android.server.pm.PackageSetting) $r1;

        if ps != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke ps.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        return $r2;
    }

    android.content.pm.IntentFilterVerificationInfo createIntentFilterVerificationIfNeededLPw(java.lang.String, java.util.ArrayList)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName;
        java.util.ArrayList domains;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        android.content.pm.IntentFilterVerificationInfo $r2, ivi#1;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        domains := @parameter1: java.util.ArrayList;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        ps = (com.android.server.pm.PackageSetting) $r1;

        if ps != null goto label1;

        return null;

     label1:
        ivi#1 = virtualinvoke ps.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        if ivi#1 != null goto label2;

        $r2 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r2.<android.content.pm.IntentFilterVerificationInfo: void <init>(java.lang.String,java.util.ArrayList)>(packageName, domains);

        ivi#1 = $r2;

        virtualinvoke ps.<com.android.server.pm.PackageSetting: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>(ivi#1);

        goto label3;

     label2:
        virtualinvoke ivi#1.<android.content.pm.IntentFilterVerificationInfo: void setDomains(java.util.ArrayList)>(domains);

     label3:
        return ivi#1;
    }

    int getIntentFilterVerificationStatusLPr(java.lang.String, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName;
        int userId, $i2;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        long $l0, $l1;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        ps = (com.android.server.pm.PackageSetting) $r1;

        if ps != null goto label1;

        return 0;

     label1:
        $l0 = virtualinvoke ps.<com.android.server.pm.PackageSetting: long getDomainVerificationStatusForUser(int)>(userId);

        $l1 = $l0 >> 32;

        $i2 = (int) $l1;

        return $i2;
    }

    boolean updateIntentFilterVerificationStatusLPw(java.lang.String, int, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName;
        int status, userId, $i0, alwaysGeneration#1;
        com.android.server.pm.PackageSetting current;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        android.util.SparseIntArray $r2, $r3;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        status := @parameter1: int;

        userId := @parameter2: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        current = (com.android.server.pm.PackageSetting) $r1;

        if current != null goto label1;

        return 0;

     label1:
        if status != 2 goto label2;

        $r2 = this.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration>;

        $i0 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int)>(userId);

        alwaysGeneration#1 = $i0 + 1;

        $r3 = this.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(userId, alwaysGeneration#1);

        goto label3;

     label2:
        alwaysGeneration#1 = 0;

     label3:
        virtualinvoke current.<com.android.server.pm.PackageSetting: void setDomainVerificationStatusForUser(int,int,int)>(status, alwaysGeneration#1, userId);

        return 1;
    }

    java.util.List getIntentFilterVerificationsLPr(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName, $r4, $r5;
        java.util.ArrayList result, tmp$1393204481;
        java.util.Iterator i$;
        com.android.server.pm.PackageSetting ps;
        android.content.pm.IntentFilterVerificationInfo ivi;
        android.util.ArrayMap $r1;
        java.util.Collection $r2;
        boolean $z0, $z1, $z3;
        java.lang.Object $r3;
        java.util.List $r6, tmp$1609687273;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        if packageName != null goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label1:
        tmp$1393204481 = new java.util.ArrayList;

        specialinvoke tmp$1393204481.<java.util.ArrayList: void <init>()>();

        result = tmp$1393204481;

        $r1 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Collection values()>();

        i$ = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        ps = (com.android.server.pm.PackageSetting) $r3;

        ivi = virtualinvoke ps.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        if ivi == null goto label2;

        $r4 = virtualinvoke ivi.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z1 != 0 goto label2;

        $r5 = virtualinvoke ivi.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(packageName);

        if $z3 != 0 goto label3;

        goto label2;

     label3:
        virtualinvoke result.<java.util.ArrayList: boolean add(java.lang.Object)>(ivi);

        goto label2;

     label4:
        tmp$1609687273 = (java.util.List) result;

        return tmp$1609687273;
    }

    boolean removeIntentFilterVerificationLPw(java.lang.String, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName;
        int userId;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        ps = (com.android.server.pm.PackageSetting) $r1;

        if ps != null goto label1;

        return 0;

     label1:
        virtualinvoke ps.<com.android.server.pm.PackageSetting: void clearDomainVerificationStatusForUser(int)>(userId);

        return 1;
    }

    boolean removeIntentFilterVerificationLPw(java.lang.String, int[])
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName;
        int[] userIds, arr$;
        int len$, userId, i$#2;
        boolean $z0, result#1;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        userIds := @parameter1: int[];

        result#1 = 0;

        arr$ = userIds;

        len$ = lengthof arr$;

        i$#2 = 0;

     label1:
        if i$#2 >= len$ goto label2;

        userId = arr$[i$#2];

        $z0 = virtualinvoke this.<com.android.server.pm.Settings: boolean removeIntentFilterVerificationLPw(java.lang.String,int)>(packageName, userId);

        result#1 = result#1 | $z0;

        i$#2 = i$#2 + 1;

        goto label1;

     label2:
        return result#1;
    }

    boolean setDefaultBrowserPackageNameLPw(java.lang.String, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName;
        int userId;
        android.util.SparseArray $r0;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        userId := @parameter1: int;

        if userId != -1 goto label1;

        return 0;

     label1:
        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp>;

        virtualinvoke $r0.<android.util.SparseArray: void put(int,java.lang.Object)>(userId, packageName);

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(userId);

        return 1;
    }

    java.lang.String getDefaultBrowserPackageNameLPw(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        if userId != -1 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        $r2 = (java.lang.String) $r1;

     label2:
        return $r2;
    }

    private java.io.File getUserPackagesStateFile(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        java.io.File userDir, $r0, $r1, $r2, $r4;
        java.lang.String $r3;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = new java.io.File;

        $r2 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "users");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(userId);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r3);

        userDir = $r0;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(userDir, "package-restrictions.xml");

        return $r4;
    }

    private java.io.File getUserRuntimePermissionsFile(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        java.io.File userDir, $r0, $r1, $r2, $r4;
        java.lang.String $r3;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = new java.io.File;

        $r2 = this.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "users");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(userId);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r3);

        userDir = $r0;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(userDir, "runtime-permissions.xml");

        return $r4;
    }

    private java.io.File getUserPackagesStateBackupFile(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        java.io.File $r0, $r1;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(userId);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "package-restrictions-backup.xml");

        return $r0;
    }

    void writeAllUsersPackageRestrictionsLPr()
    {
        com.android.server.pm.Settings this;
        java.util.List users;
        java.util.Iterator i$;
        android.content.pm.UserInfo user;
        boolean $z0;
        java.lang.Object $r0;
        int $i0;

        this := @this: com.android.server.pm.Settings;

        users = virtualinvoke this.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if users != null goto label1;

        return;

     label1:
        i$ = interfaceinvoke users.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r0 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        user = (android.content.pm.UserInfo) $r0;

        $i0 = user.<android.content.pm.UserInfo: int id>;

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i0);

        goto label2;

     label3:
        return;
    }

    void writeAllRuntimePermissionsLPr()
    {
        com.android.server.pm.Settings this;
        int[] arr$;
        int len$, userId, i$#1;
        com.android.server.pm.UserManagerService $r0;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1;

        this := @this: com.android.server.pm.Settings;

        $r0 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        arr$ = virtualinvoke $r0.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        len$ = lengthof arr$;

        i$#1 = 0;

     label1:
        if i$#1 >= len$ goto label2;

        userId = arr$[i$#1];

        $r1 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserAsyncLPr(int)>(userId);

        i$#1 = i$#1 + 1;

        goto label1;

     label2:
        return;
    }

    boolean areDefaultRuntimePermissionsGrantedLPr(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r0;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        $z0 = virtualinvoke $r0.<com.android.server.pm.Settings$RuntimePermissionPersistence: boolean areDefaultRuntimPermissionsGrantedLPr(int)>(userId);

        return $z0;
    }

    void onDefaultRuntimePermissionsGrantedLPr(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r0;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r0.<com.android.server.pm.Settings$RuntimePermissionPersistence: void onDefaultRuntimePermissionsGrantedLPr(int)>(userId);

        return;
    }

    public com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String volumeUuid;
        android.util.ArrayMap $r0, $r3;
        java.lang.Object $r1;
        com.android.server.pm.Settings$VersionInfo $r2, ver#1;

        this := @this: com.android.server.pm.Settings;

        volumeUuid := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(volumeUuid);

        ver#1 = (com.android.server.pm.Settings$VersionInfo) $r1;

        if ver#1 != null goto label1;

        $r2 = new com.android.server.pm.Settings$VersionInfo;

        specialinvoke $r2.<com.android.server.pm.Settings$VersionInfo: void <init>()>();

        ver#1 = $r2;

        virtualinvoke ver#1.<com.android.server.pm.Settings$VersionInfo: void forceCurrent()>();

        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(volumeUuid, ver#1);

     label1:
        return ver#1;
    }

    public com.android.server.pm.Settings$VersionInfo getInternalVersion()
    {
        com.android.server.pm.Settings this;
        java.lang.String $r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        com.android.server.pm.Settings$VersionInfo $r3;

        this := @this: com.android.server.pm.Settings;

        $r1 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r0 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (com.android.server.pm.Settings$VersionInfo) $r2;

        return $r3;
    }

    public com.android.server.pm.Settings$VersionInfo getExternalVersion()
    {
        com.android.server.pm.Settings this;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        com.android.server.pm.Settings$VersionInfo $r2;

        this := @this: com.android.server.pm.Settings;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>("primary_physical");

        $r2 = (com.android.server.pm.Settings$VersionInfo) $r1;

        return $r2;
    }

    public void onVolumeForgotten(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String fsUuid;
        android.util.ArrayMap $r0;

        this := @this: com.android.server.pm.Settings;

        fsUuid := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(fsUuid);

        return;
    }

    void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, $r2, $r5, $r6, $r12, $r13, $r15;
        com.android.server.pm.PreferredActivity pa, $r4;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r3, $r8, $r10, $r11, $r14, $r16;
        com.android.server.pm.PreferredComponent $r7, $r9;
        com.android.server.pm.PreferredIntentResolver $r17;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        userId := @parameter1: int;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label8;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label8;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        $r4 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r4.<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(parser);

        pa = $r4;

        $r7 = pa.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r6 = virtualinvoke $r7.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        if $r6 != null goto label4;

        $r17 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(userId);

        virtualinvoke $r17.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>(pa);

        goto label5;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-activity> ");

        $r9 = pa.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r12 = virtualinvoke $r9.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r13 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r15);

     label5:
        goto label7;

     label6:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-activities>: ");

        $r2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r5);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label7:
        goto label1;

     label8:
        return;
    }

    private void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, $r2, $r5;
        com.android.server.pm.PersistentPreferredActivity ppa, tmp$470182913;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, tmp$856267797;
        com.android.server.pm.PersistentPreferredIntentResolver $r6;
        android.content.IntentFilter tmp$1368841093;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        userId := @parameter1: int;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label6;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label6;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label4;

        tmp$470182913 = new com.android.server.pm.PersistentPreferredActivity;

        specialinvoke tmp$470182913.<com.android.server.pm.PersistentPreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(parser);

        ppa = tmp$470182913;

        $r6 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)>(userId);

        tmp$1368841093 = (android.content.IntentFilter) ppa;

        virtualinvoke $r6.<com.android.server.pm.PersistentPreferredIntentResolver: void addFilter(android.content.IntentFilter)>(tmp$1368841093);

        goto label5;

     label4:
        tmp$856267797 = new java.lang.StringBuilder;

        specialinvoke tmp$856267797.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke tmp$856267797.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <persistent-preferred-activities>: ");

        $r2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r5);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label5:
        goto label1;

     label6:
        return;
    }

    private void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, cpif#2;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, tmp$179710222;
        com.android.server.pm.CrossProfileIntentResolver $r4;
        com.android.server.pm.CrossProfileIntentFilter cpif#1, tmp$872497255;
        android.content.IntentFilter tmp$421016206;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        userId := @parameter1: int;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label6;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label6;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label4;

        tmp$872497255 = new com.android.server.pm.CrossProfileIntentFilter;

        specialinvoke tmp$872497255.<com.android.server.pm.CrossProfileIntentFilter: void <init>(org.xmlpull.v1.XmlPullParser)>(parser);

        cpif#1 = tmp$872497255;

        $r4 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)>(userId);

        tmp$421016206 = (android.content.IntentFilter) cpif#1;

        virtualinvoke $r4.<com.android.server.pm.CrossProfileIntentResolver: void addFilter(android.content.IntentFilter)>(tmp$421016206);

        goto label5;

     label4:
        tmp$179710222 = new java.lang.StringBuilder;

        specialinvoke tmp$179710222.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke tmp$179710222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under crossProfile-intent-filters: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        cpif#2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, cpif#2);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label5:
        goto label1;

     label6:
        return;
    }

    private void readDomainVerificationLPw(org.xmlpull.v1.XmlPullParser, com.android.server.pm.PackageSettingBase) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        com.android.server.pm.PackageSettingBase packageSetting;
        android.content.pm.IntentFilterVerificationInfo ivi, $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        packageSetting := @parameter1: com.android.server.pm.PackageSettingBase;

        $r0 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r0.<android.content.pm.IntentFilterVerificationInfo: void <init>(org.xmlpull.v1.XmlPullParser)>(parser);

        ivi = $r0;

        virtualinvoke packageSetting.<com.android.server.pm.PackageSettingBase: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>(ivi);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read domain verification for package:");

        $r3 = virtualinvoke ivi.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageSettings", $r5);

        return;
    }

    private void readRestoredIntentFilterVerifications(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int outerDepth, type, $i0, $i2;
        java.lang.String tagName, $r3, $r7;
        android.content.pm.IntentFilterVerificationInfo ivi, $r5;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r2;
        android.util.ArrayMap $r4;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label6;

        if type != 3 goto label2;

        $i2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= outerDepth goto label6;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("domain-verification");

        if $z0 == 0 goto label4;

        $r5 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r5.<android.content.pm.IntentFilterVerificationInfo: void <init>(org.xmlpull.v1.XmlPullParser)>(parser);

        ivi = $r5;

        $r4 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        $r7 = virtualinvoke ivi.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, ivi);

        goto label5;

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r3);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label5:
        goto label1;

     label6:
        return;
    }

    void readDefaultAppsLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, $r2, packageName#1, packageName#2;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r3;
        android.util.SparseArray $r4;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        userId := @parameter1: int;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label6;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label6;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("default-browser");

        if $z0 == 0 goto label4;

        packageName#1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "packageName");

        $r4 = this.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(userId, packageName#1);

        goto label5;

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under default-apps: ");

        $r2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        packageName#2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, packageName#2);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label5:
        goto label1;

     label6:
        return;
    }

    void readPackageRestrictionsLPr(int)
    {
        com.android.server.pm.Settings this;
        int userId, outerDepth, enabled, verifState, linkGeneration, packageDepth, $i0, $i1, $i2, $i3, $i4, $i5, pkg#6, maxAppLinkGeneration#7, pkg#9, $i6, $i7, $i8, pkg#25;
        java.io.File userPackagesStateFile, backupFile;
        java.lang.String name, enabledStr, enabledCaller, installedStr, stoppedStr, blockedStr, hiddenStr, notLaunchedStr, blockUninstallStr, verifStateStr, linkGenStr, $r0, $r4, $r6, $r13, $r28, $r33, $r35, $r36, $r40, $r41, $r47, tagName#10, tagName#26;
        boolean installed, stopped, notLaunched, blockUninstall, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, hidden#16, $z14, hidden#18, $z15, $z16;
        java.nio.charset.Charset $r1;
        android.util.SparseIntArray $r2;
        java.lang.StringBuilder $r5, $r7, $r11, $r12, $r14, $r17, $r19, $r21, $r24, $r25, $r29, $r30, $r31, $r34, $r38, $r39, $r44, $r45, $r46, tmp$1289121910, tmp$186635482, tmp$1055088172, tmp$946818120, tmp$598441313, tmp$1386226975, tmp$334775965;
        java.lang.Object $r8, $r22;
        android.util.ArrayMap $r9, $r15;
        java.util.Collection $r16;
        java.io.IOException $r27, $r48, i$#28;
        org.xmlpull.v1.XmlPullParserException $r43, i$#27;
        java.io.FileInputStream str#1, tmp$247889166, tmp$1478099722;
        java.util.Iterator i$#3;
        com.android.server.pm.PackageSetting pkg#4, ps#11;
        org.xmlpull.v1.XmlPullParser i$#5;
        android.util.ArraySet enabledComponents#23, disabledComponents#24;
        java.io.InputStream tmp$1926245945;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        str#1 = null;

        userPackagesStateFile = specialinvoke this.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(userId);

        backupFile = specialinvoke this.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(userId);

        $z0 = virtualinvoke backupFile.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label04;

     label01:
        tmp$247889166 = new java.io.FileInputStream;

        specialinvoke tmp$247889166.<java.io.FileInputStream: void <init>(java.io.File)>(backupFile);

        str#1 = tmp$247889166;

        $r21 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup stopped packages file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup stopped packages file");

        $z10 = virtualinvoke userPackagesStateFile.<java.io.File: boolean exists()>();

        if $z10 == 0 goto label02;

        tmp$1289121910 = new java.lang.StringBuilder;

        specialinvoke tmp$1289121910.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke tmp$1289121910.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up stopped packages file ");

        $r29 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userPackagesStateFile);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        virtualinvoke userPackagesStateFile.<java.io.File: boolean delete()>();

     label02:
        goto label04;

     label03:
        $r48 := @caughtexception;

     label04:
        if str#1 != null goto label08;

        $z9 = virtualinvoke userPackagesStateFile.<java.io.File: boolean exists()>();

        if $z9 != 0 goto label07;

        $r17 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No stopped packages file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No stopped packages file; assuming all started");

        $r15 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r16 = virtualinvoke $r15.<android.util.ArrayMap: java.util.Collection values()>();

        i$#3 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z8 = interfaceinvoke i$#3.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label06;

        $r22 = interfaceinvoke i$#3.<java.util.Iterator: java.lang.Object next()>();

        pkg#4 = (com.android.server.pm.PackageSetting) $r22;

        virtualinvoke pkg#4.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,android.util.ArraySet,android.util.ArraySet,boolean,int,int)>(userId, 0, 1, 0, 0, 0, null, null, null, 0, 0, 0);

        goto label05;

     label06:
        return;

     label07:
        tmp$1478099722 = new java.io.FileInputStream;

        specialinvoke tmp$1478099722.<java.io.FileInputStream: void <init>(java.io.File)>(userPackagesStateFile);

        str#1 = tmp$1478099722;

     label08:
        i$#5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r0 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        tmp$1926245945 = (java.io.InputStream) str#1;

        interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(tmp$1926245945, $r0);

     label09:
        $i0 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int next()>();

        pkg#6 = $i0;

        if $i0 == 2 goto label10;

        if pkg#6 == 1 goto label10;

        goto label09;

     label10:
        if pkg#6 == 2 goto label12;

        $r11 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in package restrictions file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager stopped packages");

     label11:
        return;

     label12:
        maxAppLinkGeneration#7 = 0;

        outerDepth = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label13:
        $i2 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int next()>();

        pkg#9 = $i2;

        if $i2 == 1 goto label47;

        if pkg#9 != 3 goto label14;

        $i5 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= outerDepth goto label47;

     label14:
        if pkg#9 == 3 goto label13;

        if pkg#9 != 4 goto label15;

        goto label13;

     label15:
        tagName#10 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke tagName#10.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z3 == 0 goto label41;

        name = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r9 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r8 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        ps#11 = (com.android.server.pm.PackageSetting) $r8;

        if ps#11 != null goto label16;

        tmp$186635482 = new java.lang.StringBuilder;

        specialinvoke tmp$186635482.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke tmp$186635482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package known for stopped package: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r13);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(i$#5);

        goto label13;

     label16:
        enabledStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabled");

        if enabledStr != null goto label17;

        $i6 = 0;

        goto label18;

     label17:
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(enabledStr);

     label18:
        enabled = $i6;

        enabledCaller = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabledCaller");

        installedStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "inst");

        if installedStr != null goto label19;

        $z11 = 1;

        goto label20;

     label19:
        $z11 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(installedStr);

     label20:
        installed = $z11;

        stoppedStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "stopped");

        if stoppedStr != null goto label21;

        $z12 = 0;

        goto label22;

     label21:
        $z12 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(stoppedStr);

     label22:
        stopped = $z12;

        blockedStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "blocked");

        if blockedStr != null goto label23;

        $z13 = 0;

        goto label24;

     label23:
        $z13 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(blockedStr);

     label24:
        hidden#16 = $z13;

        hiddenStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "hidden");

        if hiddenStr != null goto label25;

        $z14 = hidden#16;

        goto label26;

     label25:
        $z14 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(hiddenStr);

     label26:
        hidden#18 = $z14;

        notLaunchedStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nl");

        if stoppedStr != null goto label27;

        $z15 = 0;

        goto label28;

     label27:
        $z15 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(notLaunchedStr);

     label28:
        notLaunched = $z15;

        blockUninstallStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "blockUninstall");

        if blockUninstallStr != null goto label29;

        $z16 = 0;

        goto label30;

     label29:
        $z16 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(blockUninstallStr);

     label30:
        blockUninstall = $z16;

        verifStateStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "domainVerificationStatus");

        if verifStateStr != null goto label31;

        $i7 = 0;

        goto label32;

     label31:
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(verifStateStr);

     label32:
        verifState = $i7;

        linkGenStr = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "app-link-generation");

        if linkGenStr != null goto label33;

        $i8 = 0;

        goto label34;

     label33:
        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(linkGenStr);

     label34:
        linkGeneration = $i8;

        if linkGeneration <= maxAppLinkGeneration#7 goto label35;

        maxAppLinkGeneration#7 = linkGeneration;

     label35:
        enabledComponents#23 = null;

        disabledComponents#24 = null;

        packageDepth = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label36:
        $i4 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int next()>();

        pkg#25 = $i4;

        if $i4 == 1 goto label40;

        if pkg#25 != 3 goto label37;

        $i3 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= packageDepth goto label40;

     label37:
        if pkg#25 == 3 goto label36;

        if pkg#25 != 4 goto label38;

        goto label36;

     label38:
        tagName#26 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z7 = virtualinvoke tagName#26.<java.lang.String: boolean equals(java.lang.Object)>("enabled-components");

        if $z7 == 0 goto label39;

        enabledComponents#23 = specialinvoke this.<com.android.server.pm.Settings: android.util.ArraySet readComponentsLPr(org.xmlpull.v1.XmlPullParser)>(i$#5);

        goto label36;

     label39:
        $z6 = virtualinvoke tagName#26.<java.lang.String: boolean equals(java.lang.Object)>("disabled-components");

        if $z6 == 0 goto label36;

        disabledComponents#24 = specialinvoke this.<com.android.server.pm.Settings: android.util.ArraySet readComponentsLPr(org.xmlpull.v1.XmlPullParser)>(i$#5);

        goto label36;

     label40:
        virtualinvoke ps#11.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,android.util.ArraySet,android.util.ArraySet,boolean,int,int)>(userId, enabled, installed, stopped, notLaunched, hidden#18, enabledCaller, enabledComponents#23, disabledComponents#24, blockUninstall, verifState, linkGeneration);

        goto label46;

     label41:
        $z1 = virtualinvoke tagName#10.<java.lang.String: boolean equals(java.lang.Object)>("preferred-activities");

        if $z1 == 0 goto label42;

        virtualinvoke this.<com.android.server.pm.Settings: void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(i$#5, userId);

        goto label46;

     label42:
        $z2 = virtualinvoke tagName#10.<java.lang.String: boolean equals(java.lang.Object)>("persistent-preferred-activities");

        if $z2 == 0 goto label43;

        specialinvoke this.<com.android.server.pm.Settings: void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(i$#5, userId);

        goto label46;

     label43:
        $z5 = virtualinvoke tagName#10.<java.lang.String: boolean equals(java.lang.Object)>("crossProfile-intent-filters");

        if $z5 == 0 goto label44;

        specialinvoke this.<com.android.server.pm.Settings: void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser,int)>(i$#5, userId);

        goto label46;

     label44:
        $z4 = virtualinvoke tagName#10.<java.lang.String: boolean equals(java.lang.Object)>("default-apps");

        if $z4 == 0 goto label45;

        virtualinvoke this.<com.android.server.pm.Settings: void readDefaultAppsLPw(org.xmlpull.v1.XmlPullParser,int)>(i$#5, userId);

        goto label46;

     label45:
        tmp$1055088172 = new java.lang.StringBuilder;

        specialinvoke tmp$1055088172.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke tmp$1055088172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <stopped-packages>: ");

        $r6 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(i$#5);

     label46:
        goto label13;

     label47:
        virtualinvoke str#1.<java.io.FileInputStream: void close()>();

        $r2 = this.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration>;

        $i1 = maxAppLinkGeneration#7 + 1;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(userId, $i1);

     label48:
        goto label51;

     label49:
        $r43 := @caughtexception;

        i$#27 = $r43;

        $r45 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        tmp$946818120 = new java.lang.StringBuilder;

        specialinvoke tmp$946818120.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke tmp$946818120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r47 = virtualinvoke i$#27.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r36 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        tmp$598441313 = new java.lang.StringBuilder;

        specialinvoke tmp$598441313.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke tmp$598441313.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading stopped packages: ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i$#27);

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r40);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", i$#27);

        goto label51;

     label50:
        $r27 := @caughtexception;

        i$#28 = $r27;

        $r25 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        tmp$1386226975 = new java.lang.StringBuilder;

        specialinvoke tmp$1386226975.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke tmp$1386226975.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r35 = virtualinvoke i$#28.<java.io.IOException: java.lang.String toString()>();

        $r34 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        tmp$334775965 = new java.lang.StringBuilder;

        specialinvoke tmp$334775965.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke tmp$334775965.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i$#28);

        $r41 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r41);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", i$#28);

     label51:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label06 with label49;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label11 with label49;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label48 with label49;
        catch java.io.IOException from label04 to label06 with label50;
        catch java.io.IOException from label07 to label11 with label50;
        catch java.io.IOException from label12 to label48 with label50;
    }

    private android.util.ArraySet readComponentsLPr(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int type, outerDepth, $i0, $i1;
        java.lang.String tagName, componentName;
        boolean $z0;
        android.util.ArraySet $r0, components#1;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        components#1 = null;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label6;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label6;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label1;

        componentName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if componentName == null goto label5;

        if components#1 != null goto label4;

        $r0 = new android.util.ArraySet;

        specialinvoke $r0.<android.util.ArraySet: void <init>()>();

        components#1 = $r0;

     label4:
        virtualinvoke components#1.<android.util.ArraySet: boolean add(java.lang.Object)>(componentName);

     label5:
        goto label1;

     label6:
        return components#1;
    }

    void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer, int, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        int userId;
        boolean full, $z0;
        com.android.server.pm.PreferredIntentResolver pir;
        java.util.Iterator i$;
        com.android.server.pm.PreferredActivity pa;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r5;
        java.util.Set $r4;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        userId := @parameter1: int;

        full := @parameter2: boolean;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        $r1 = this.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        pir = (com.android.server.pm.PreferredIntentResolver) $r2;

        if pir == null goto label2;

        $r4 = virtualinvoke pir.<com.android.server.pm.PreferredIntentResolver: java.util.Set filterSet()>();

        i$ = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        pa = (com.android.server.pm.PreferredActivity) $r5;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke pa.<com.android.server.pm.PreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>(serializer, full);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        return;
    }

    void writePersistentPreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        int userId;
        com.android.server.pm.PersistentPreferredIntentResolver ppir;
        java.util.Iterator i$;
        com.android.server.pm.PersistentPreferredActivity ppa;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r5;
        java.util.Set $r4;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        userId := @parameter1: int;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "persistent-preferred-activities");

        $r1 = this.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        ppir = (com.android.server.pm.PersistentPreferredIntentResolver) $r2;

        if ppir == null goto label2;

        $r4 = virtualinvoke ppir.<com.android.server.pm.PersistentPreferredIntentResolver: java.util.Set filterSet()>();

        i$ = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        ppa = (com.android.server.pm.PersistentPreferredActivity) $r5;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke ppa.<com.android.server.pm.PersistentPreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer)>(serializer);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "persistent-preferred-activities");

        return;
    }

    void writeCrossProfileIntentFiltersLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        int userId;
        com.android.server.pm.CrossProfileIntentResolver cpir;
        java.util.Iterator i$;
        com.android.server.pm.CrossProfileIntentFilter cpif;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r5;
        java.util.Set $r4;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        userId := @parameter1: int;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "crossProfile-intent-filters");

        $r1 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        cpir = (com.android.server.pm.CrossProfileIntentResolver) $r2;

        if cpir == null goto label2;

        $r4 = virtualinvoke cpir.<com.android.server.pm.CrossProfileIntentResolver: java.util.Set filterSet()>();

        i$ = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        cpif = (com.android.server.pm.CrossProfileIntentFilter) $r5;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke cpif.<com.android.server.pm.CrossProfileIntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>(serializer);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "crossProfile-intent-filters");

        return;
    }

    void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer, android.content.pm.IntentFilterVerificationInfo) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        android.content.pm.IntentFilterVerificationInfo verificationInfo;
        java.lang.String $r0;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        verificationInfo := @parameter1: android.content.pm.IntentFilterVerificationInfo;

        if verificationInfo == null goto label1;

        $r0 = virtualinvoke verificationInfo.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        if $r0 == null goto label1;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "domain-verification");

        virtualinvoke verificationInfo.<android.content.pm.IntentFilterVerificationInfo: void writeToXml(org.xmlpull.v1.XmlSerializer)>(serializer);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "domain-verification");

     label1:
        return;
    }

    void writeAllDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        int userId, N, i#1;
        com.android.server.pm.PackageSetting ps;
        android.content.pm.IntentFilterVerificationInfo ivi;
        android.util.ArrayMap $r1, $r3;
        java.lang.Object $r4;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        userId := @parameter1: int;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "all-intent-filter-verifications");

        $r1 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        N = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        i#1 = 0;

     label1:
        if i#1 >= N goto label3;

        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i#1);

        ps = (com.android.server.pm.PackageSetting) $r4;

        ivi = virtualinvoke ps.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        if ivi == null goto label2;

        virtualinvoke this.<com.android.server.pm.Settings: void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,android.content.pm.IntentFilterVerificationInfo)>(serializer, ivi);

     label2:
        i#1 = i#1 + 1;

        goto label1;

     label3:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "all-intent-filter-verifications");

        return;
    }

    void readAllDomainVerificationsLPr(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, pkgName, $r2, $r4;
        android.content.pm.IntentFilterVerificationInfo ivi, $r6;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r0, $r8, $r10;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.Object $r7;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        virtualinvoke $r0.<android.util.ArrayMap: void clear()>();

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label8;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label8;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("domain-verification");

        if $z0 == 0 goto label6;

        $r6 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r6.<android.content.pm.IntentFilterVerificationInfo: void <init>(org.xmlpull.v1.XmlPullParser)>(parser);

        ivi = $r6;

        pkgName = virtualinvoke ivi.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        $r8 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(pkgName);

        ps = (com.android.server.pm.PackageSetting) $r7;

        if ps == null goto label4;

        virtualinvoke ps.<com.android.server.pm.PackageSetting: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>(ivi);

        goto label5;

     label4:
        $r10 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(pkgName, ivi);

     label5:
        goto label7;

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <all-intent-filter-verification>: ");

        $r2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label7:
        goto label1;

     label8:
        return;
    }

    void writeDefaultAppsLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        int userId;
        java.lang.String packageName;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        userId := @parameter1: int;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "default-apps");

        $r1 = this.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        packageName = (java.lang.String) $r2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(packageName);

        if $z0 != 0 goto label1;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "default-browser");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "packageName", packageName);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "default-browser");

     label1:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "default-apps");

        return;
    }

    void writePackageRestrictionsLPr(int)
    {
        com.android.server.pm.Settings this;
        int userId, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13;
        java.io.File userPackagesStateFile, backupFile, $r0, $r58;
        java.io.BufferedOutputStream str, $r2;
        com.android.internal.util.FastXmlSerializer serializer, $r5;
        java.util.Iterator i$, i$#2, i$#4;
        com.android.server.pm.PackageSetting pkg;
        android.content.pm.PackageUserState ustate;
        java.lang.String $r1, $r6, $r13, $r15, $r34, $r38, $r40, $r45, $r48, $r56, name#3, name#5;
        boolean $z0, $z2, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z18, $z19, $z20, $z21;
        java.io.FileOutputStream $r3, fstr#1;
        java.nio.charset.Charset $r4;
        java.lang.Boolean $r8;
        java.util.Collection $r9;
        android.util.ArrayMap $r10;
        java.lang.Object $r12, $r23, $r30;
        android.util.ArraySet $r18, $r19, $r20, $r22, $r25, $r33, $r49, $r50, $r52, $r53;
        java.lang.StringBuilder $r54, $r57, $r59;
        java.io.IOException $r55, fstr#6;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        userPackagesStateFile = specialinvoke this.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(userId);

        backupFile = specialinvoke this.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(userId);

        $r0 = new java.io.File;

        $r1 = virtualinvoke userPackagesStateFile.<java.io.File: java.lang.String getParent()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        $z0 = virtualinvoke userPackagesStateFile.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        $z18 = virtualinvoke backupFile.<java.io.File: boolean exists()>();

        if $z18 != 0 goto label01;

        $z21 = virtualinvoke userPackagesStateFile.<java.io.File: boolean renameTo(java.io.File)>(backupFile);

        if $z21 != 0 goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "Unable to backup user packages state file, current changes will be lost at reboot");

        return;

     label01:
        virtualinvoke userPackagesStateFile.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Preserving older stopped packages backup");

     label02:
        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>(userPackagesStateFile);

        fstr#1 = $r3;

        $r2 = new java.io.BufferedOutputStream;

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(fstr#1);

        str = $r2;

        $r5 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r5.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        serializer = $r5;

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(str, $r6);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r8);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package-restrictions");

        $r10 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r9 = virtualinvoke $r10.<android.util.ArrayMap: java.util.Collection values()>();

        i$ = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label22;

        $r12 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        pkg = (com.android.server.pm.PackageSetting) $r12;

        ustate = virtualinvoke pkg.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(userId);

        $z5 = ustate.<android.content.pm.PackageUserState: boolean stopped>;

        if $z5 != 0 goto label06;

        $z16 = ustate.<android.content.pm.PackageUserState: boolean notLaunched>;

        if $z16 != 0 goto label06;

        $z15 = ustate.<android.content.pm.PackageUserState: boolean installed>;

        if $z15 == 0 goto label06;

        $i9 = ustate.<android.content.pm.PackageUserState: int enabled>;

        if $i9 != 0 goto label06;

        $z14 = ustate.<android.content.pm.PackageUserState: boolean hidden>;

        if $z14 != 0 goto label06;

        $r50 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        if $r50 == null goto label04;

        $r52 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        $i11 = virtualinvoke $r52.<android.util.ArraySet: int size()>();

        if $i11 > 0 goto label06;

     label04:
        $r49 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        if $r49 == null goto label05;

        $r53 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        $i12 = virtualinvoke $r53.<android.util.ArraySet: int size()>();

        if $i12 > 0 goto label06;

     label05:
        $z13 = ustate.<android.content.pm.PackageUserState: boolean blockUninstall>;

        if $z13 != 0 goto label06;

        $i13 = ustate.<android.content.pm.PackageUserState: int domainVerificationStatus>;

        if $i13 == 0 goto label21;

     label06:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

        $r15 = pkg.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r15);

        $z8 = ustate.<android.content.pm.PackageUserState: boolean installed>;

        if $z8 != 0 goto label07;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "inst", "false");

     label07:
        $z6 = ustate.<android.content.pm.PackageUserState: boolean stopped>;

        if $z6 == 0 goto label08;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "stopped", "true");

     label08:
        $z7 = ustate.<android.content.pm.PackageUserState: boolean notLaunched>;

        if $z7 == 0 goto label09;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nl", "true");

     label09:
        $z9 = ustate.<android.content.pm.PackageUserState: boolean hidden>;

        if $z9 == 0 goto label10;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "hidden", "true");

     label10:
        $z10 = ustate.<android.content.pm.PackageUserState: boolean blockUninstall>;

        if $z10 == 0 goto label11;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "blockUninstall", "true");

     label11:
        $i1 = ustate.<android.content.pm.PackageUserState: int enabled>;

        if $i1 == 0 goto label12;

        $i8 = ustate.<android.content.pm.PackageUserState: int enabled>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabled", $r38);

        $r45 = ustate.<android.content.pm.PackageUserState: java.lang.String lastDisableAppCaller>;

        if $r45 == null goto label12;

        $r48 = ustate.<android.content.pm.PackageUserState: java.lang.String lastDisableAppCaller>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabledCaller", $r48);

     label12:
        $i2 = ustate.<android.content.pm.PackageUserState: int domainVerificationStatus>;

        if $i2 == 0 goto label13;

        $i6 = ustate.<android.content.pm.PackageUserState: int domainVerificationStatus>;

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "domainVerificationStatus", $r40);

     label13:
        $i3 = ustate.<android.content.pm.PackageUserState: int appLinkGeneration>;

        if $i3 == 0 goto label14;

        $i7 = ustate.<android.content.pm.PackageUserState: int appLinkGeneration>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "app-link-generation", $r34);

     label14:
        $r19 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        if $r19 == null goto label17;

        $r25 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        $i5 = virtualinvoke $r25.<android.util.ArraySet: int size()>();

        if $i5 <= 0 goto label17;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "enabled-components");

        $r33 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        i$#2 = virtualinvoke $r33.<android.util.ArraySet: java.util.Iterator iterator()>();

     label15:
        $z12 = interfaceinvoke i$#2.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label16;

        $r30 = interfaceinvoke i$#2.<java.util.Iterator: java.lang.Object next()>();

        name#3 = (java.lang.String) $r30;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", name#3);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label15;

     label16:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "enabled-components");

     label17:
        $r18 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        if $r18 == null goto label20;

        $r22 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        $i4 = virtualinvoke $r22.<android.util.ArraySet: int size()>();

        if $i4 <= 0 goto label20;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disabled-components");

        $r20 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        i$#4 = virtualinvoke $r20.<android.util.ArraySet: java.util.Iterator iterator()>();

     label18:
        $z11 = interfaceinvoke i$#4.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label19;

        $r23 = interfaceinvoke i$#4.<java.util.Iterator: java.lang.Object next()>();

        name#5 = (java.lang.String) $r23;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", name#5);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label18;

     label19:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disabled-components");

     label20:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label21:
        goto label03;

     label22:
        virtualinvoke this.<com.android.server.pm.Settings: void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int,boolean)>(serializer, userId, 1);

        virtualinvoke this.<com.android.server.pm.Settings: void writePersistentPreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int)>(serializer, userId);

        virtualinvoke this.<com.android.server.pm.Settings: void writeCrossProfileIntentFiltersLPr(org.xmlpull.v1.XmlSerializer,int)>(serializer, userId);

        virtualinvoke this.<com.android.server.pm.Settings: void writeDefaultAppsLPr(org.xmlpull.v1.XmlSerializer,int)>(serializer, userId);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package-restrictions");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke str.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(fstr#1);

        virtualinvoke str.<java.io.BufferedOutputStream: void close()>();

        virtualinvoke backupFile.<java.io.File: boolean delete()>();

        $r13 = virtualinvoke userPackagesStateFile.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r13, 432, -1, -1);

     label23:
        return;

     label24:
        $r55 := @caughtexception;

        fstr#6 = $r55;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager user packages state,  current changes will be lost at reboot", fstr#6);

        $z20 = virtualinvoke userPackagesStateFile.<java.io.File: boolean exists()>();

        if $z20 == 0 goto label25;

        $z19 = virtualinvoke userPackagesStateFile.<java.io.File: boolean delete()>();

        if $z19 != 0 goto label25;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clean up mangled file: ");

        $r58 = this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r56);

     label25:
        return;

        catch java.io.IOException from label02 to label23 with label24;
    }

    void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser, com.android.server.pm.PermissionsState) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        com.android.server.pm.PermissionsState permissionsState;
        int outerDepth, type, flags, $i0, $i2, $i4, $i6, $i8;
        java.lang.String tagName, name, grantedStr, flagsStr, $r1, $r3, $r8, $r12, $r16;
        com.android.server.pm.BasePermission bp;
        boolean granted, $z0, $z3, $z4;
        java.lang.StringBuilder $r0, $r2, $r4, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r18;
        java.lang.Object $r5;
        android.util.ArrayMap $r6;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        permissionsState := @parameter1: com.android.server.pm.PermissionsState;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label16;

        if type != 3 goto label02;

        $i6 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i6 <= outerDepth goto label16;

     label02:
        if type == 3 goto label01;

        if type != 4 goto label03;

        goto label01;

     label03:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label14;

        name = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r6 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissions>;

        $r5 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        bp = (com.android.server.pm.BasePermission) $r5;

        if bp != null goto label04;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

        goto label01;

     label04:
        grantedStr = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "granted");

        if grantedStr == null goto label05;

        $z3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(grantedStr);

        if $z3 == 0 goto label06;

     label05:
        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        granted = $z4;

        flagsStr = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "flags");

        if flagsStr == null goto label08;

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(flagsStr, 16);

        goto label09;

     label08:
        $i8 = 0;

     label09:
        flags = $i8;

        if granted == 0 goto label11;

        $i4 = virtualinvoke permissionsState.<com.android.server.pm.PermissionsState: int grantInstallPermission(com.android.server.pm.BasePermission)>(bp);

        if $i4 != -1 goto label10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission already added: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r12);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

        goto label13;

     label10:
        virtualinvoke permissionsState.<com.android.server.pm.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.BasePermission,int,int,int)>(bp, -1, 255, flags);

        goto label13;

     label11:
        $i2 = virtualinvoke permissionsState.<com.android.server.pm.PermissionsState: int revokeInstallPermission(com.android.server.pm.BasePermission)>(bp);

        if $i2 != -1 goto label12;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission already added: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

        goto label13;

     label12:
        virtualinvoke permissionsState.<com.android.server.pm.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.BasePermission,int,int,int)>(bp, -1, 255, flags);

     label13:
        goto label15;

     label14:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <permissions>: ");

        $r1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r3);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label15:
        goto label01;

     label16:
        return;
    }

    void writePermissionsLPr(org.xmlpull.v1.XmlSerializer, java.util.List) throws java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        java.util.List permissionStates;
        java.util.Iterator i$;
        com.android.server.pm.PermissionsState$PermissionState permissionState;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;
        java.lang.String $r4, $r6, $r9;
        int $i0;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        permissionStates := @parameter1: java.util.List;

        $z0 = interfaceinvoke permissionStates.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        i$ = interfaceinvoke permissionStates.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r2 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        permissionState = (com.android.server.pm.PermissionsState$PermissionState) $r2;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r4 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: java.lang.String getName()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r4);

        $z2 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: boolean isGranted()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "granted", $r6);

        $i0 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: int getFlags()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r9);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label2;

     label3:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

        return;
    }

    void readStoppedLPw()
    {
        com.android.server.pm.Settings this;
        int outerDepth, $i0, $i1, $i4, pkg#6, pkg#7;
        java.lang.String tagName, name, $r2, $r4, $r11, $r12, $r13, $r34, $r35, $r37, $r43, $r49, $r55, $r58;
        com.android.server.pm.PackageSetting ps, pkg#4;
        java.io.File $r0, $r14, $r20, $r24, $r28, $r31, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r3, $r5, $r9, $r10, $r15, $r17, $r23, $r30, $r32, $r36, $r41, $r42, $r47, $r48, $r50, $r53, $r56, $r57, $r59, tmp$2114607426, tmp$1935324130, tmp$859632385, tmp$1157782991, tmp$1687748948, tmp$1204471391, tmp$1404159565;
        java.lang.Object $r6, $r26;
        android.util.ArrayMap $r7, $r21;
        java.util.Collection $r22;
        java.io.IOException $r39, $r44, i$#2, i$#9;
        org.xmlpull.v1.XmlPullParserException $r45, i$#8;
        java.io.FileInputStream str#1, tmp$1689115205, tmp$1303853473;
        java.util.Iterator i$#3;
        org.xmlpull.v1.XmlPullParser i$#5;
        java.io.InputStream tmp$1127563565;

        this := @this: com.android.server.pm.Settings;

        str#1 = null;

        $r0 = this.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label04;

     label01:
        tmp$1689115205 = new java.io.FileInputStream;

        $r24 = this.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        specialinvoke tmp$1689115205.<java.io.FileInputStream: void <init>(java.io.File)>($r24);

        str#1 = tmp$1689115205;

        $r23 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup stopped packages file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup stopped packages file");

        $r28 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z5 = virtualinvoke $r28.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label02;

        tmp$2114607426 = new java.lang.StringBuilder;

        specialinvoke tmp$2114607426.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke tmp$2114607426.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up stopped packages file ");

        $r31 = this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r34);

        $r33 = this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke $r33.<java.io.File: boolean delete()>();

     label02:
        goto label04;

     label03:
        $r44 := @caughtexception;

        i$#2 = $r44;

     label04:
        if str#1 != null goto label08;

        $r14 = this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $z3 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label07;

        $r17 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No stopped packages file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No stopped packages file file; assuming all started");

        $r21 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.util.Collection values()>();

        i$#3 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke i$#3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r26 = interfaceinvoke i$#3.<java.util.Iterator: java.lang.Object next()>();

        pkg#4 = (com.android.server.pm.PackageSetting) $r26;

        virtualinvoke pkg#4.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(0, 0);

        virtualinvoke pkg#4.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(0, 0);

        goto label05;

     label06:
        return;

     label07:
        tmp$1303853473 = new java.io.FileInputStream;

        $r20 = this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        specialinvoke tmp$1303853473.<java.io.FileInputStream: void <init>(java.io.File)>($r20);

        str#1 = tmp$1303853473;

     label08:
        i$#5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        tmp$1127563565 = (java.io.InputStream) str#1;

        interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(tmp$1127563565, null);

     label09:
        $i0 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int next()>();

        pkg#6 = $i0;

        if $i0 == 2 goto label10;

        if pkg#6 == 1 goto label10;

        goto label09;

     label10:
        if pkg#6 == 2 goto label12;

        $r15 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in stopped packages file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager stopped packages");

     label11:
        return;

     label12:
        outerDepth = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label13:
        $i1 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int next()>();

        pkg#7 = $i1;

        if $i1 == 1 goto label20;

        if pkg#7 != 3 goto label14;

        $i4 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= outerDepth goto label20;

     label14:
        if pkg#7 == 3 goto label13;

        if pkg#7 != 4 goto label15;

        goto label13;

     label15:
        tagName = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z1 == 0 goto label18;

        name = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r7 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        ps = (com.android.server.pm.PackageSetting) $r6;

        if ps == null goto label16;

        virtualinvoke ps.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(1, 0);

        $r12 = "1";

        $r13 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nl");

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label17;

        virtualinvoke ps.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(1, 0);

        goto label17;

     label16:
        tmp$1935324130 = new java.lang.StringBuilder;

        specialinvoke tmp$1935324130.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke tmp$1935324130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package known for stopped package: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

     label17:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(i$#5);

        goto label19;

     label18:
        tmp$859632385 = new java.lang.StringBuilder;

        specialinvoke tmp$859632385.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke tmp$859632385.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <stopped-packages>: ");

        $r2 = interfaceinvoke i$#5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(i$#5);

     label19:
        goto label13;

     label20:
        virtualinvoke str#1.<java.io.FileInputStream: void close()>();

     label21:
        goto label24;

     label22:
        $r45 := @caughtexception;

        i$#8 = $r45;

        $r53 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        tmp$1157782991 = new java.lang.StringBuilder;

        specialinvoke tmp$1157782991.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke tmp$1157782991.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r55 = virtualinvoke i$#8.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        $r50 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        tmp$1687748948 = new java.lang.StringBuilder;

        specialinvoke tmp$1687748948.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke tmp$1687748948.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading stopped packages: ");

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i$#8);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r58);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", i$#8);

        goto label24;

     label23:
        $r39 := @caughtexception;

        i$#9 = $r39;

        $r41 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        tmp$1204471391 = new java.lang.StringBuilder;

        specialinvoke tmp$1204471391.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke tmp$1204471391.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r35 = virtualinvoke i$#9.<java.io.IOException: java.lang.String toString()>();

        $r36 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        tmp$1404159565 = new java.lang.StringBuilder;

        specialinvoke tmp$1404159565.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke tmp$1404159565.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i$#9);

        $r43 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r43);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", i$#9);

     label24:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label06 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label11 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label21 with label22;
        catch java.io.IOException from label04 to label06 with label23;
        catch java.io.IOException from label07 to label11 with label23;
        catch java.io.IOException from label12 to label21 with label23;
    }

    void writeLPr()
    {
        com.android.server.pm.Settings this;
        java.io.BufferedOutputStream str, $r4;
        com.android.internal.util.FastXmlSerializer serializer, $r5;
        java.io.File $r0, $r3, $r27, $r28, $r56, $r57, $r58, $r65, $r68, $r70, $r71;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.ArrayList $r1, $r21, $r39, $r49;
        java.io.FileOutputStream $r2, fstr#1;
        java.nio.charset.Charset $r6;
        java.lang.String $r7, $r26, $r35, $r37, $r40, $r41, $r42, $r53, $r55, $r67, volumeUuid#3, $r73, ver#18, $r74;
        java.lang.Boolean $r8, $r11, $r50;
        android.util.ArrayMap $r9, $r13, $r15, $r16, $r17, $r19, $r23, $r24, $r29, $r32, $r59, $r60;
        android.content.pm.VerifierDeviceIdentity $r10, $r54;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i#2, i#22, volumeUuid#23;
        java.util.Collection $r12, $r14, $r18, $r20, $r22;
        com.android.server.pm.KeySetManagerService $r25;
        java.lang.Object $r30, $r31, $r34, $r36, $r38, $r43, $r44, $r45, $r51, $r52, $r61, $r62;
        java.util.Set $r33;
        java.util.List $r46;
        com.android.server.pm.PackageSignatures $r47;
        com.android.server.pm.PermissionsState $r48;
        java.lang.StringBuilder $r63, $r64, $r66;
        java.io.IOException $r69, fstr#26;
        org.xmlpull.v1.XmlPullParserException $r72, fstr#25;
        com.android.server.pm.Settings$VersionInfo ver#4;
        java.util.Iterator i#6, i#8, i#10, i#12, i#14, i#16, i#20;
        com.android.server.pm.BasePermission volumeUuid#7, volumeUuid#9;
        com.android.server.pm.PackageSetting volumeUuid#11, volumeUuid#13;
        com.android.server.pm.SharedUserSetting volumeUuid#15;
        android.content.pm.PackageCleanItem volumeUuid#17;
        java.util.Map$Entry volumeUuid#21;
        android.content.pm.IntentFilterVerificationInfo ver#24;

        this := @this: com.android.server.pm.Settings;

        $r0 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        $r56 = this.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z10 = virtualinvoke $r56.<java.io.File: boolean exists()>();

        if $z10 != 0 goto label01;

        $r68 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r58 = this.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z12 = virtualinvoke $r68.<java.io.File: boolean renameTo(java.io.File)>($r58);

        if $z12 != 0 goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "Unable to backup package manager settings,  current changes will be lost at reboot");

        return;

     label01:
        $r57 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke $r57.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Preserving older settings backup");

     label02:
        $r1 = this.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

     label03:
        $r2 = new java.io.FileOutputStream;

        $r3 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

        fstr#1 = $r2;

        $r4 = new java.io.BufferedOutputStream;

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(fstr#1);

        str = $r4;

        $r5 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r5.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        serializer = $r5;

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(str, $r7);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r8);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "packages");

        i#2 = 0;

     label04:
        $r9 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $i0 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        if i#2 >= $i0 goto label05;

        $r59 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r61 = virtualinvoke $r59.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i#2);

        volumeUuid#3 = (java.lang.String) $r61;

        $r60 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r62 = virtualinvoke $r60.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i#2);

        ver#4 = (com.android.server.pm.Settings$VersionInfo) $r62;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "version");

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(serializer, "volumeUuid", volumeUuid#3);

        $i6 = ver#4.<com.android.server.pm.Settings$VersionInfo: int sdkVersion>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(serializer, "sdkVersion", $i6);

        $i5 = ver#4.<com.android.server.pm.Settings$VersionInfo: int databaseVersion>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(serializer, "databaseVersion", $i5);

        $r55 = ver#4.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(serializer, "fingerprint", $r55);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "version");

        i#2 = i#2 + 1;

        goto label04;

     label05:
        $r10 = this.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        if $r10 == null goto label06;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "verifier");

        $r54 = this.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        $r53 = virtualinvoke $r54.<android.content.pm.VerifierDeviceIdentity: java.lang.String toString()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "device", $r53);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "verifier");

     label06:
        $r11 = this.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        if $r11 == null goto label09;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "read-external-storage");

        $r50 = this.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        $z9 = virtualinvoke $r50.<java.lang.Boolean: boolean booleanValue()>();

        if $z9 == 0 goto label07;

        $r73 = "1";

        goto label08;

     label07:
        $r73 = "0";

     label08:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enforcement", $r73);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "read-external-storage");

     label09:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        $r13 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissionTrees>;

        $r12 = virtualinvoke $r13.<android.util.ArrayMap: java.util.Collection values()>();

        i#6 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke i#6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r51 = interfaceinvoke i#6.<java.util.Iterator: java.lang.Object next()>();

        volumeUuid#7 = (com.android.server.pm.BasePermission) $r51;

        virtualinvoke this.<com.android.server.pm.Settings: void writePermissionLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.BasePermission)>(serializer, volumeUuid#7);

        goto label10;

     label11:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r15 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissions>;

        $r14 = virtualinvoke $r15.<android.util.ArrayMap: java.util.Collection values()>();

        i#8 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke i#8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r52 = interfaceinvoke i#8.<java.util.Iterator: java.lang.Object next()>();

        volumeUuid#9 = (com.android.server.pm.BasePermission) $r52;

        virtualinvoke this.<com.android.server.pm.Settings: void writePermissionLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.BasePermission)>(serializer, volumeUuid#9);

        goto label12;

     label13:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r16 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r18 = virtualinvoke $r16.<android.util.ArrayMap: java.util.Collection values()>();

        i#10 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke i#10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r45 = interfaceinvoke i#10.<java.util.Iterator: java.lang.Object next()>();

        volumeUuid#11 = (com.android.server.pm.PackageSetting) $r45;

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>(serializer, volumeUuid#11);

        goto label14;

     label15:
        $r17 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r20 = virtualinvoke $r17.<android.util.ArrayMap: java.util.Collection values()>();

        i#12 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

     label16:
        $z4 = interfaceinvoke i#12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label17;

        $r44 = interfaceinvoke i#12.<java.util.Iterator: java.lang.Object next()>();

        volumeUuid#13 = (com.android.server.pm.PackageSetting) $r44;

        virtualinvoke this.<com.android.server.pm.Settings: void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>(serializer, volumeUuid#13);

        goto label16;

     label17:
        $r19 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r22 = virtualinvoke $r19.<android.util.ArrayMap: java.util.Collection values()>();

        i#14 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z5 = interfaceinvoke i#14.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label19;

        $r43 = interfaceinvoke i#14.<java.util.Iterator: java.lang.Object next()>();

        volumeUuid#15 = (com.android.server.pm.SharedUserSetting) $r43;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "shared-user");

        $r42 = volumeUuid#15.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r42);

        $i4 = volumeUuid#15.<com.android.server.pm.SharedUserSetting: int userId>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r41);

        $r47 = volumeUuid#15.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r49 = this.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r47.<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(serializer, "sigs", $r49);

        $r48 = virtualinvoke volumeUuid#15.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r46 = virtualinvoke $r48.<com.android.server.pm.PermissionsState: java.util.List getInstallPermissionStates()>();

        virtualinvoke this.<com.android.server.pm.Settings: void writePermissionsLPr(org.xmlpull.v1.XmlSerializer,java.util.List)>(serializer, $r46);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "shared-user");

        goto label18;

     label19:
        $r21 = this.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label23;

        $r39 = this.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        i#16 = virtualinvoke $r39.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z7 = interfaceinvoke i#16.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label23;

        $r38 = interfaceinvoke i#16.<java.util.Iterator: java.lang.Object next()>();

        volumeUuid#17 = (android.content.pm.PackageCleanItem) $r38;

        $i3 = volumeUuid#17.<android.content.pm.PackageCleanItem: int userId>;

        ver#18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cleaning-package");

        $r40 = volumeUuid#17.<android.content.pm.PackageCleanItem: java.lang.String packageName>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r40);

        $z8 = volumeUuid#17.<android.content.pm.PackageCleanItem: boolean andCode>;

        if $z8 == 0 goto label21;

        $r74 = "true";

        goto label22;

     label21:
        $r74 = "false";

     label22:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "code", $r74);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "user", ver#18);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cleaning-package");

        goto label20;

     label23:
        $r24 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $i1 = virtualinvoke $r24.<android.util.ArrayMap: int size()>();

        if $i1 <= 0 goto label25;

        $r32 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $r33 = virtualinvoke $r32.<android.util.ArrayMap: java.util.Set entrySet()>();

        i#20 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z6 = interfaceinvoke i#20.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label25;

        $r30 = interfaceinvoke i#20.<java.util.Iterator: java.lang.Object next()>();

        volumeUuid#21 = (java.util.Map$Entry) $r30;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "renamed-package");

        $r36 = interfaceinvoke volumeUuid#21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r37 = (java.lang.String) $r36;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "new", $r37);

        $r34 = interfaceinvoke volumeUuid#21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r35 = (java.lang.String) $r34;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "old", $r35);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "renamed-package");

        goto label24;

     label25:
        $r23 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        i#22 = virtualinvoke $r23.<android.util.ArrayMap: int size()>();

        if i#22 <= 0 goto label28;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restored-ivi");

        volumeUuid#23 = 0;

     label26:
        if volumeUuid#23 >= i#22 goto label27;

        $r29 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        $r31 = virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object valueAt(int)>(volumeUuid#23);

        ver#24 = (android.content.pm.IntentFilterVerificationInfo) $r31;

        virtualinvoke this.<com.android.server.pm.Settings: void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,android.content.pm.IntentFilterVerificationInfo)>(serializer, ver#24);

        volumeUuid#23 = volumeUuid#23 + 1;

        goto label26;

     label27:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restored-ivi");

     label28:
        $r25 = this.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        virtualinvoke $r25.<com.android.server.pm.KeySetManagerService: void writeKeySetManagerServiceLPr(org.xmlpull.v1.XmlSerializer)>(serializer);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "packages");

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke str.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(fstr#1);

        virtualinvoke str.<java.io.BufferedOutputStream: void close()>();

        $r28 = this.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        virtualinvoke $r28.<java.io.File: boolean delete()>();

        $r27 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r26 = virtualinvoke $r27.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r26, 432, -1, -1);

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageListLPr()>();

        virtualinvoke this.<com.android.server.pm.Settings: void writeAllUsersPackageRestrictionsLPr()>();

        virtualinvoke this.<com.android.server.pm.Settings: void writeAllRuntimePermissionsLPr()>();

     label29:
        return;

     label30:
        $r72 := @caughtexception;

        fstr#25 = $r72;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager settings, current changes will be lost at reboot", fstr#25);

        goto label32;

     label31:
        $r69 := @caughtexception;

        fstr#26 = $r69;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager settings, current changes will be lost at reboot", fstr#26);

     label32:
        $r70 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z13 = virtualinvoke $r70.<java.io.File: boolean exists()>();

        if $z13 == 0 goto label33;

        $r71 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z11 = virtualinvoke $r71.<java.io.File: boolean delete()>();

        if $z11 != 0 goto label33;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clean up mangled file: ");

        $r65 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", $r67);

     label33:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label29 with label30;
        catch java.io.IOException from label03 to label29 with label31;
    }

    void writePackageListLPr()
    {
        com.android.server.pm.Settings this;

        this := @this: com.android.server.pm.Settings;

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageListLPr(int)>(-1);

        return;
    }

    void writePackageListLPr(int)
    {
        com.android.server.pm.Settings this;
        int creatingUserId, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i#2, i#10;
        java.util.List users;
        com.android.internal.util.JournaledFile journal, $r9;
        java.io.File writeTarget, $r1, $r2, $r8, $r26, i#3;
        java.util.Iterator i$;
        com.android.server.pm.PackageSetting pkg;
        android.content.pm.ApplicationInfo ai, $r22;
        java.lang.String dataPath, $r5, $r6, $r24, $r25, $r29, $r30, $r31, $r36;
        boolean isDebug, $z0, $z1;
        int[] gids, userIds#1;
        com.android.server.pm.UserManagerService $r0;
        java.lang.StringBuilder $r3, $r4, $r7, $r11, $r17, $r19, $r20, $r21, sb#7;
        java.io.FileOutputStream $r10, fstr#6;
        java.io.BufferedOutputStream $r12, str#5;
        java.io.FileDescriptor $r13;
        android.util.ArrayMap $r14;
        java.util.Collection $r15;
        android.content.pm.PackageParser$Package $r16, $r23, $r27;
        java.lang.Object $r18, $r34;
        com.android.server.pm.PermissionsState $r28;
        byte[] $r32;
        android.content.pm.UserInfo $r33;
        java.lang.Exception $r35, sb#11;

        this := @this: com.android.server.pm.Settings;

        creatingUserId := @parameter0: int;

        $r0 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        users = virtualinvoke $r0.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(1);

        $i0 = interfaceinvoke users.<java.util.List: int size()>();

        userIds#1 = newarray (int)[$i0];

        i#2 = 0;

     label01:
        $i1 = lengthof userIds#1;

        if i#2 >= $i1 goto label02;

        $r34 = interfaceinvoke users.<java.util.List: java.lang.Object get(int)>(i#2);

        $r33 = (android.content.pm.UserInfo) $r34;

        $i10 = $r33.<android.content.pm.UserInfo: int id>;

        userIds#1[i#2] = $i10;

        i#2 = i#2 + 1;

        goto label01;

     label02:
        if creatingUserId == -1 goto label03;

        userIds#1 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>(userIds#1, creatingUserId);

     label03:
        $r1 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = this.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r6);

        i#3 = $r1;

        $r9 = new com.android.internal.util.JournaledFile;

        $r8 = this.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        specialinvoke $r9.<com.android.internal.util.JournaledFile: void <init>(java.io.File,java.io.File)>($r8, i#3);

        journal = $r9;

        writeTarget = virtualinvoke journal.<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()>();

        str#5 = null;

     label04:
        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(writeTarget);

        fstr#6 = $r10;

        $r12 = new java.io.BufferedOutputStream;

        specialinvoke $r12.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(fstr#6);

        str#5 = $r12;

        $r13 = virtualinvoke fstr#6.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.io.FileDescriptor,int,int,int)>($r13, 416, 1000, 1032);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        sb#7 = $r11;

        $r14 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.util.Collection values()>();

        i$ = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r18 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        pkg = (com.android.server.pm.PackageSetting) $r18;

        $r16 = pkg.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r16 == null goto label06;

        $r23 = pkg.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r22 = $r23.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r22 != null goto label07;

     label06:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping ");

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(pkg);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to missing metadata");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r24);

        goto label05;

     label07:
        $r27 = pkg.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        ai = $r27.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r26 = new java.io.File;

        $r25 = ai.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        specialinvoke $r26.<java.io.File: void <init>(java.lang.String)>($r25);

        dataPath = virtualinvoke $r26.<java.io.File: java.lang.String getCanonicalPath()>();

        $i3 = ai.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i3 & 2;

        if $i2 == 0 goto label08;

        $z1 = 1;

        goto label09;

     label08:
        $z1 = 0;

     label09:
        isDebug = $z1;

        $r28 = virtualinvoke pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        gids = virtualinvoke $r28.<com.android.server.pm.PermissionsState: int[] computeGids(int[])>(userIds#1);

        $i4 = virtualinvoke dataPath.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if $i4 < 0 goto label10;

        goto label05;

     label10:
        virtualinvoke sb#7.<java.lang.StringBuilder: void setLength(int)>(0);

        $r29 = ai.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = ai.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        if isDebug == 0 goto label11;

        $r36 = " 1 ";

        goto label12;

     label11:
        $r36 = " 0 ";

     label12:
        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dataPath);

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r30 = ai.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        if gids == null goto label15;

        $i6 = lengthof gids;

        if $i6 <= 0 goto label15;

        $i7 = gids[0];

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        i#10 = 1;

     label13:
        $i8 = lengthof gids;

        if i#10 >= $i8 goto label14;

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i9 = gids[i#10];

        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        i#10 = i#10 + 1;

        goto label13;

     label14:
        goto label16;

     label15:
        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");

     label16:
        virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke sb#7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = virtualinvoke $r31.<java.lang.String: byte[] getBytes()>();

        virtualinvoke str#5.<java.io.BufferedOutputStream: void write(byte[])>($r32);

        goto label05;

     label17:
        virtualinvoke str#5.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(fstr#6);

        virtualinvoke str#5.<java.io.BufferedOutputStream: void close()>();

        virtualinvoke journal.<com.android.internal.util.JournaledFile: void commit()>();

     label18:
        goto label20;

     label19:
        $r35 := @caughtexception;

        sb#11 = $r35;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", "Failed to write packages.list", sb#11);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(str#5);

        virtualinvoke journal.<com.android.internal.util.JournaledFile: void rollback()>();

     label20:
        return;

        catch java.lang.Exception from label04 to label18 with label19;
    }

    void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageSetting) throws java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        com.android.server.pm.PackageSetting pkg;
        java.lang.String $r1, $r3, $r4, $r6, $r8, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r23, $r27, $r29, $r30, $r32, $r34, $r36, $r39;
        long $l0, $l1, $l2;
        int $i3, $i4, $i5;
        boolean $z0;
        com.android.server.pm.SharedUserSetting $r20, $r21;
        com.android.server.pm.PermissionsState $r25;
        java.util.List $r26;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        pkg := @parameter1: com.android.server.pm.PackageSetting;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "updated-package");

        $r1 = pkg.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r1);

        $r3 = pkg.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r3 == null goto label1;

        $r39 = pkg.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "realName", $r39);

     label1:
        $r4 = pkg.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r4);

        $l0 = pkg.<com.android.server.pm.PackageSetting: long timeStamp>;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ft", $r6);

        $l1 = pkg.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "it", $r8);

        $l2 = pkg.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ut", $r11);

        $i3 = pkg.<com.android.server.pm.PackageSetting: int versionCode>;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r12);

        $r15 = pkg.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r13 = pkg.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label2;

        $r34 = pkg.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r34);

     label2:
        $r18 = pkg.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        if $r18 == null goto label3;

        $r36 = pkg.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nativeLibraryPath", $r36);

     label3:
        $r19 = pkg.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r19 == null goto label4;

        $r30 = pkg.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "primaryCpuAbi", $r30);

     label4:
        $r16 = pkg.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        if $r16 == null goto label5;

        $r32 = pkg.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "secondaryCpuAbi", $r32);

     label5:
        $r17 = pkg.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        if $r17 == null goto label6;

        $r27 = pkg.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cpuAbiOverride", $r27);

     label6:
        $r20 = pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r20 != null goto label7;

        $i5 = pkg.<com.android.server.pm.PackageSetting: int appId>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r29);

        goto label8;

     label7:
        $i4 = pkg.<com.android.server.pm.PackageSetting: int appId>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r23);

     label8:
        $r21 = pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r21 != null goto label9;

        $r25 = virtualinvoke pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r26 = virtualinvoke $r25.<com.android.server.pm.PermissionsState: java.util.List getInstallPermissionStates()>();

        virtualinvoke this.<com.android.server.pm.Settings: void writePermissionsLPr(org.xmlpull.v1.XmlSerializer,java.util.List)>(serializer, $r26);

     label9:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "updated-package");

        return;
    }

    void writePackageLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageSetting) throws java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        com.android.server.pm.PackageSetting pkg;
        java.lang.String $r1, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r18, $r20, $r23, $r26, $r27, $r28, $r41, $r43, $r44, $r46, $r48, $r51, $r53, $r55, $r57;
        boolean $z0, $z1;
        int $i0, $i1, $i5, $i6, $i7, $i8;
        long $l2, $l3, $l4;
        com.android.server.pm.SharedUserSetting $r22;
        java.util.List $r29;
        com.android.server.pm.PermissionsState $r30;
        com.android.server.pm.PackageSignatures $r31;
        java.util.ArrayList $r32;
        android.content.pm.IntentFilterVerificationInfo $r33;
        com.android.server.pm.PackageKeySetData $r34, $r35, $r36;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        pkg := @parameter1: com.android.server.pm.PackageSetting;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package");

        $r1 = pkg.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r1);

        $r3 = pkg.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r3 == null goto label01;

        $r53 = pkg.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "realName", $r53);

     label01:
        $r4 = pkg.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r4);

        $r7 = pkg.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r6 = pkg.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label02;

        $r51 = pkg.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r51);

     label02:
        $r8 = pkg.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        if $r8 == null goto label03;

        $r57 = pkg.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nativeLibraryPath", $r57);

     label03:
        $r9 = pkg.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r9 == null goto label04;

        $r55 = pkg.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "primaryCpuAbi", $r55);

     label04:
        $r10 = pkg.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        if $r10 == null goto label05;

        $r46 = pkg.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "secondaryCpuAbi", $r46);

     label05:
        $r11 = pkg.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        if $r11 == null goto label06;

        $r44 = pkg.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cpuAbiOverride", $r44);

     label06:
        $i0 = pkg.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "publicFlags", $r12);

        $i1 = pkg.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "privateFlags", $r15);

        $l2 = pkg.<com.android.server.pm.PackageSetting: long timeStamp>;

        $r16 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ft", $r16);

        $l3 = pkg.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $r18 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "it", $r18);

        $l4 = pkg.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r20 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l4);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ut", $r20);

        $i5 = pkg.<com.android.server.pm.PackageSetting: int versionCode>;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r23);

        $r22 = pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r22 != null goto label07;

        $i8 = pkg.<com.android.server.pm.PackageSetting: int appId>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r48);

        goto label08;

     label07:
        $i6 = pkg.<com.android.server.pm.PackageSetting: int appId>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r26);

     label08:
        $z1 = pkg.<com.android.server.pm.PackageSetting: boolean uidError>;

        if $z1 == 0 goto label09;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uidError", "true");

     label09:
        $i7 = pkg.<com.android.server.pm.PackageSetting: int installStatus>;

        if $i7 != 0 goto label10;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installStatus", "false");

     label10:
        $r28 = pkg.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r28 == null goto label11;

        $r43 = pkg.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installer", $r43);

     label11:
        $r27 = pkg.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        if $r27 == null goto label12;

        $r41 = pkg.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "volumeUuid", $r41);

     label12:
        $r31 = pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r32 = this.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r31.<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(serializer, "sigs", $r32);

        $r30 = virtualinvoke pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r29 = virtualinvoke $r30.<com.android.server.pm.PermissionsState: java.util.List getInstallPermissionStates()>();

        virtualinvoke this.<com.android.server.pm.Settings: void writePermissionsLPr(org.xmlpull.v1.XmlSerializer,java.util.List)>(serializer, $r29);

        $r36 = pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke this.<com.android.server.pm.Settings: void writeSigningKeySetLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(serializer, $r36);

        $r35 = pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke this.<com.android.server.pm.Settings: void writeUpgradeKeySetsLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(serializer, $r35);

        $r34 = pkg.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke this.<com.android.server.pm.Settings: void writeKeySetAliasesLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(serializer, $r34);

        $r33 = pkg.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo verificationInfo>;

        virtualinvoke this.<com.android.server.pm.Settings: void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,android.content.pm.IntentFilterVerificationInfo)>(serializer, $r33);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package");

        return;
    }

    void writeSigningKeySetLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        com.android.server.pm.PackageKeySetData data;
        long $l0;
        java.lang.String $r1;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        data := @parameter1: com.android.server.pm.PackageKeySetData;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "proper-signing-keyset");

        $l0 = virtualinvoke data.<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r1);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "proper-signing-keyset");

        return;
    }

    void writeUpgradeKeySetsLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        com.android.server.pm.PackageKeySetData data;
        long[] arr$;
        int len$, i$#1;
        long id;
        boolean $z0;
        java.lang.String $r2;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        data := @parameter1: com.android.server.pm.PackageKeySetData;

        virtualinvoke data.<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>();

        $z0 = virtualinvoke data.<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>();

        if $z0 == 0 goto label2;

        arr$ = virtualinvoke data.<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>();

        len$ = lengthof arr$;

        i$#1 = 0;

     label1:
        if i$#1 >= len$ goto label2;

        id = arr$[i$#1];

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "upgrade-keyset");

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(id);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r2);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "upgrade-keyset");

        i$#1 = i$#1 + 1;

        goto label1;

     label2:
        return;
    }

    void writeKeySetAliasesLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        com.android.server.pm.PackageKeySetData data;
        java.util.Iterator i$;
        java.util.Map$Entry e;
        android.util.ArrayMap $r0;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object $r2, $r4, $r8;
        java.lang.String $r5, $r9;
        java.lang.Long $r7;
        long $l0;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        data := @parameter1: com.android.server.pm.PackageKeySetData;

        $r0 = virtualinvoke data.<com.android.server.pm.PackageKeySetData: android.util.ArrayMap getAliases()>();

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.util.Set entrySet()>();

        i$ = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        e = (java.util.Map$Entry) $r2;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "defined-keyset");

        $r4 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r4;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "alias", $r5);

        $r8 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.Long) $r8;

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r9);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "defined-keyset");

        goto label1;

     label2:
        return;
    }

    void writePermissionLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.BasePermission) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlSerializer serializer;
        com.android.server.pm.BasePermission bp;
        android.content.pm.PermissionInfo pi, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r0, $r2, $r4, $r11, $r14, $r17;
        android.content.pm.PackageParser$Permission $r7, $r15;
        java.lang.CharSequence $r9, $r10;

        this := @this: com.android.server.pm.Settings;

        serializer := @parameter0: org.xmlpull.v1.XmlSerializer;

        bp := @parameter1: com.android.server.pm.BasePermission;

        $i0 = bp.<com.android.server.pm.BasePermission: int type>;

        if $i0 == 1 goto label6;

        $r0 = bp.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        if $r0 == null goto label6;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r2 = bp.<com.android.server.pm.BasePermission: java.lang.String name>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r2);

        $r4 = bp.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "package", $r4);

        $i1 = bp.<com.android.server.pm.BasePermission: int protectionLevel>;

        if $i1 == 0 goto label1;

        $i5 = bp.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "protection", $r17);

     label1:
        $i2 = bp.<com.android.server.pm.BasePermission: int type>;

        if $i2 != 2 goto label5;

        $r7 = bp.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r7 == null goto label2;

        $r15 = bp.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r18 = $r15.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        goto label3;

     label2:
        $r18 = bp.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

     label3:
        pi = $r18;

        if pi == null goto label5;

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "dynamic");

        $i3 = pi.<android.content.pm.PermissionInfo: int icon>;

        if $i3 == 0 goto label4;

        $i4 = pi.<android.content.pm.PermissionInfo: int icon>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r14);

     label4:
        $r9 = pi.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r9 == null goto label5;

        $r10 = pi.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r11 = interfaceinvoke $r10.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r11);

     label5:
        interfaceinvoke serializer.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

     label6:
        return;
    }

    java.util.ArrayList getListOfIncompleteInstallPackagesLPr()
    {
        com.android.server.pm.Settings this;
        android.util.ArraySet kList, $r0;
        java.util.Iterator its;
        java.util.ArrayList 'ret', $r3;
        java.lang.String key;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r1, $r5;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r4, $r6;
        int $i0;

        this := @this: com.android.server.pm.Settings;

        $r0 = new android.util.ArraySet;

        $r1 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Set keySet()>();

        specialinvoke $r0.<android.util.ArraySet: void <init>(java.util.Collection)>($r2);

        kList = $r0;

        its = virtualinvoke kList.<android.util.ArraySet: java.util.Iterator iterator()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        'ret' = $r3;

     label1:
        $z0 = interfaceinvoke its.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke its.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $r4;

        $r5 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(key);

        ps = (com.android.server.pm.PackageSetting) $r6;

        $i0 = virtualinvoke ps.<com.android.server.pm.PackageSetting: int getInstallStatus()>();

        if $i0 != 0 goto label2;

        virtualinvoke 'ret'.<java.util.ArrayList: boolean add(java.lang.Object)>(ps);

     label2:
        goto label1;

     label3:
        return 'ret';
    }

    void addPackageToCleanLPw(android.content.pm.PackageCleanItem)
    {
        com.android.server.pm.Settings this;
        android.content.pm.PackageCleanItem pkg;
        java.util.ArrayList $r0, $r1;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        pkg := @parameter0: android.content.pm.PackageCleanItem;

        $r0 = this.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        $z0 = virtualinvoke $r0.<java.util.ArrayList: boolean contains(java.lang.Object)>(pkg);

        if $z0 != 0 goto label1;

        $r1 = this.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(pkg);

     label1:
        return;
    }

    boolean readLPw(com.android.server.pm.PackageManagerService, java.util.List, int, boolean)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageManagerService service;
        java.util.List users;
        int sdkVersion, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i21, type#4, outerDepth#5, type#6, userId#10, parser#25, type#26;
        boolean onlyCore, $z0, $z1, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z32, andCode#11;
        java.lang.String codeStr, $r4, $r23, $r33, $r40, $r51, $r53, $r54, $r57, $r58, $r61, $r63, $r67, $r68, $r69, $r70, $r71, $r74, $r75, $r81, $r82, $r86, $r94, $r107, $r113, $r115, $r121, $r123, $r128, $r130, $r134, tagName#7, name#8, userStr#9, name#12, userStr#13, name#18, name#20, name#21, name#30, name#31;
        java.lang.NumberFormatException l15, $r116;
        java.io.File $r0, $r8, $r9, $r10, $r32, $r52, $r59, $r84, $r85, $r95, $r98, $r99, $r105;
        java.util.ArrayList $r1, $r2, $r6, $r7, $r30;
        android.util.ArrayMap $r3, $r11, $r17, $r19, $r76, $r79, $r90, $r91;
        java.nio.charset.Charset $r5;
        java.util.Collection $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r18, $r20, $r24, $r34, $r35, $r37, $r41, $r42, $r43, $r44, $r45, $r47, $r48, $r49, $r50, $r55, $r62, $r65, $r66, $r88, $r93, $r96, $r97, $r104, $r106, $r111, $r112, $r114, $r119, $r122, $r124, $r125, $r129, $r131, $r135, $r136, tmp$1501991597, tmp$2041717905, tmp$506804466, tmp$1028040148, tmp$408651683, tmp$1079759781, tmp$684380658, tmp$2758896, tmp$166552451, tmp$30844472, tmp$1338577717;
        java.lang.Object $r21, $r28, $r29, $r31, tagName#28, tagName#38;
        com.android.server.pm.SharedUserSetting $r25, $r60;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r26, $r27;
        java.lang.Boolean $r72;
        android.content.pm.VerifierDeviceIdentity $r73;
        com.android.server.pm.KeySetManagerService $r77;
        java.io.IOException $r108, $r117, parser#2, parser#24;
        org.xmlpull.v1.XmlPullParserException $r127, parser#23;
        java.lang.IllegalArgumentException $r133, userStr#19;
        java.io.FileInputStream str#1, tmp$478581346, tmp$1028648809;
        org.xmlpull.v1.XmlPullParser parser#3;
        com.android.server.pm.Settings$VersionInfo name#14, userStr#15, name#16, userStr#17, userStr#22;
        com.android.server.pm.PendingPackage outerDepth#27;
        com.android.server.pm.PackageSetting name#29, outerDepth#37;
        java.util.Iterator type#32, type#34, type#36;
        android.content.pm.UserInfo outerDepth#33, outerDepth#35;
        android.content.pm.PackageCleanItem tmp$240437158;
        java.io.InputStream tmp$293941132;
        com.android.server.pm.PackageSettingBase tmp$746419066;

        this := @this: com.android.server.pm.Settings;

        service := @parameter0: com.android.server.pm.PackageManagerService;

        users := @parameter1: java.util.List;

        sdkVersion := @parameter2: int;

        onlyCore := @parameter3: boolean;

        str#1 = null;

        $r0 = this.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label04;

     label01:
        tmp$478581346 = new java.io.FileInputStream;

        $r105 = this.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        specialinvoke tmp$478581346.<java.io.FileInputStream: void <init>(java.io.File)>($r105);

        str#1 = tmp$478581346;

        $r104 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup settings file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup settings file");

        $r99 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z32 = virtualinvoke $r99.<java.io.File: boolean exists()>();

        if $z32 == 0 goto label02;

        tmp$1501991597 = new java.lang.StringBuilder;

        specialinvoke tmp$1501991597.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke tmp$1501991597.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up settings file ");

        $r98 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r98);

        $r94 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r94);

        $r95 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke $r95.<java.io.File: boolean delete()>();

     label02:
        goto label04;

     label03:
        $r108 := @caughtexception;

        parser#2 = $r108;

     label04:
        $r2 = this.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r1 = this.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        virtualinvoke $r3.<android.util.ArrayMap: void clear()>();

     label05:
        if str#1 != null goto label08;

        $r85 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z30 = virtualinvoke $r85.<java.io.File: boolean exists()>();

        if $z30 != 0 goto label07;

        $r88 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No settings file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No settings file; creating initial state");

        $r86 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>($r86);

        virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>("primary_physical");

     label06:
        return 0;

     label07:
        tmp$1028648809 = new java.io.FileInputStream;

        $r84 = this.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        specialinvoke tmp$1028648809.<java.io.FileInputStream: void <init>(java.io.File)>($r84);

        str#1 = tmp$1028648809;

     label08:
        parser#3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        tmp$293941132 = (java.io.InputStream) str#1;

        interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(tmp$293941132, $r4);

     label09:
        $i0 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#4 = $i0;

        if $i0 == 2 goto label10;

        if type#4 == 1 goto label10;

        goto label09;

     label10:
        if type#4 == 2 goto label12;

        $r93 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in settings file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager settings");

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "No start tag found in package manager settings");

     label11:
        return 0;

     label12:
        outerDepth#5 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label13:
        $i1 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: int next()>();

        type#6 = $i1;

        if $i1 == 1 goto label47;

        if type#6 != 3 goto label14;

        $i21 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i21 <= outerDepth#5 goto label47;

     label14:
        if type#6 == 3 goto label13;

        if type#6 != 4 goto label15;

        goto label13;

     label15:
        tagName#7 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z13 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z13 == 0 goto label16;

        specialinvoke this.<com.android.server.pm.Settings: void readPackageLPw(org.xmlpull.v1.XmlPullParser)>(parser#3);

        goto label46;

     label16:
        $z12 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("permissions");

        if $z12 == 0 goto label17;

        $r91 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissions>;

        specialinvoke this.<com.android.server.pm.Settings: void readPermissionsLPw(android.util.ArrayMap,org.xmlpull.v1.XmlPullParser)>($r91, parser#3);

        goto label46;

     label17:
        $z11 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("permission-trees");

        if $z11 == 0 goto label18;

        $r90 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissionTrees>;

        specialinvoke this.<com.android.server.pm.Settings: void readPermissionsLPw(android.util.ArrayMap,org.xmlpull.v1.XmlPullParser)>($r90, parser#3);

        goto label46;

     label18:
        $z10 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("shared-user");

        if $z10 == 0 goto label19;

        specialinvoke this.<com.android.server.pm.Settings: void readSharedUserLPw(org.xmlpull.v1.XmlPullParser)>(parser#3);

        goto label46;

     label19:
        $z21 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("preferred-packages");

        if $z21 == 0 goto label20;

        goto label46;

     label20:
        $z20 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("preferred-activities");

        if $z20 == 0 goto label21;

        virtualinvoke this.<com.android.server.pm.Settings: void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(parser#3, 0);

        goto label46;

     label21:
        $z19 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("persistent-preferred-activities");

        if $z19 == 0 goto label22;

        specialinvoke this.<com.android.server.pm.Settings: void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(parser#3, 0);

        goto label46;

     label22:
        $z18 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("crossProfile-intent-filters");

        if $z18 == 0 goto label23;

        specialinvoke this.<com.android.server.pm.Settings: void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser,int)>(parser#3, 0);

        goto label46;

     label23:
        $z17 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("default-browser");

        if $z17 == 0 goto label24;

        virtualinvoke this.<com.android.server.pm.Settings: void readDefaultAppsLPw(org.xmlpull.v1.XmlPullParser,int)>(parser#3, 0);

        goto label46;

     label24:
        $z16 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("updated-package");

        if $z16 == 0 goto label25;

        specialinvoke this.<com.android.server.pm.Settings: void readDisabledSysPackageLPw(org.xmlpull.v1.XmlPullParser)>(parser#3);

        goto label46;

     label25:
        $z15 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("cleaning-package");

        if $z15 == 0 goto label32;

        name#8 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        userStr#9 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "user");

        codeStr = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "code");

        if name#8 == null goto label31;

        userId#10 = 0;

        andCode#11 = 1;

     label26:
        if userStr#9 == null goto label27;

        userId#10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(userStr#9);

     label27:
        goto label29;

     label28:
        $r116 := @caughtexception;

        l15 = $r116;

     label29:
        if codeStr == null goto label30;

        andCode#11 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(codeStr);

     label30:
        tmp$240437158 = new android.content.pm.PackageCleanItem;

        specialinvoke tmp$240437158.<android.content.pm.PackageCleanItem: void <init>(int,java.lang.String,boolean)>(userId#10, name#8, andCode#11);

        virtualinvoke this.<com.android.server.pm.Settings: void addPackageToCleanLPw(android.content.pm.PackageCleanItem)>(tmp$240437158);

     label31:
        goto label46;

     label32:
        $z14 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("renamed-package");

        if $z14 == 0 goto label34;

        name#12 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "new");

        userStr#13 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "old");

        if name#12 == null goto label33;

        if userStr#13 == null goto label33;

        $r79 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        virtualinvoke $r79.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name#12, userStr#13);

     label33:
        goto label46;

     label34:
        $z24 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("restored-ivi");

        if $z24 == 0 goto label35;

        specialinvoke this.<com.android.server.pm.Settings: void readRestoredIntentFilterVerifications(org.xmlpull.v1.XmlPullParser)>(parser#3);

        goto label46;

     label35:
        $z23 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("last-platform-version");

        if $z23 == 0 goto label36;

        $r81 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        name#14 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>($r81);

        userStr#15 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>("primary_physical");

        $i19 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser#3, "internal", 0);

        name#14.<com.android.server.pm.Settings$VersionInfo: int sdkVersion> = $i19;

        $i18 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser#3, "external", 0);

        userStr#15.<com.android.server.pm.Settings$VersionInfo: int sdkVersion> = $i18;

        $r82 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(parser#3, "fingerprint");

        userStr#15.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint> = $r82;

        name#14.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint> = $r82;

        goto label46;

     label36:
        $z26 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("database-version");

        if $z26 == 0 goto label37;

        $r74 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        name#16 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>($r74);

        userStr#17 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>("primary_physical");

        $i17 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser#3, "internal", 0);

        name#16.<com.android.server.pm.Settings$VersionInfo: int databaseVersion> = $i17;

        $i16 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(parser#3, "external", 0);

        userStr#17.<com.android.server.pm.Settings$VersionInfo: int databaseVersion> = $i16;

        goto label46;

     label37:
        $z25 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("verifier");

        if $z25 == 0 goto label42;

        name#18 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "device");

     label38:
        $r73 = staticinvoke <android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity parse(java.lang.String)>(name#18);

        this.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity> = $r73;

     label39:
        goto label41;

     label40:
        $r133 := @caughtexception;

        userStr#19 = $r133;

        tmp$2041717905 = new java.lang.StringBuilder;

        specialinvoke tmp$2041717905.<java.lang.StringBuilder: void <init>()>();

        $r131 = virtualinvoke tmp$2041717905.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Discard invalid verifier device id: ");

        $r130 = virtualinvoke userStr#19.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r129 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r130);

        $r128 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r128);

     label41:
        goto label46;

     label42:
        $r69 = "read-external-storage";

        $z27 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(tagName#7);

        if $z27 == 0 goto label43;

        name#20 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enforcement");

        $r71 = "1";

        $z29 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(name#20);

        $r72 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z29);

        this.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced> = $r72;

        goto label46;

     label43:
        $z28 = virtualinvoke tagName#7.<java.lang.String: boolean equals(java.lang.Object)>("keyset-settings");

        if $z28 == 0 goto label44;

        $r77 = this.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r76 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        virtualinvoke $r77.<com.android.server.pm.KeySetManagerService: void readKeySetsLPw(org.xmlpull.v1.XmlPullParser,android.util.ArrayMap)>(parser#3, $r76);

        goto label46;

     label44:
        $r70 = "version";

        $z22 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>(tagName#7);

        if $z22 == 0 goto label45;

        name#21 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(parser#3, "volumeUuid");

        userStr#22 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>(name#21);

        $i14 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(parser#3, "sdkVersion");

        userStr#22.<com.android.server.pm.Settings$VersionInfo: int sdkVersion> = $i14;

        $i15 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(parser#3, "sdkVersion");

        userStr#22.<com.android.server.pm.Settings$VersionInfo: int databaseVersion> = $i15;

        $r75 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(parser#3, "fingerprint");

        userStr#22.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint> = $r75;

        goto label46;

     label45:
        tmp$506804466 = new java.lang.StringBuilder;

        specialinvoke tmp$506804466.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke tmp$506804466.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <packages>: ");

        $r67 = interfaceinvoke parser#3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r68);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser#3);

     label46:
        goto label13;

     label47:
        virtualinvoke str#1.<java.io.FileInputStream: void close()>();

     label48:
        goto label51;

     label49:
        $r127 := @caughtexception;

        parser#23 = $r127;

        $r125 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        tmp$1028040148 = new java.lang.StringBuilder;

        specialinvoke tmp$1028040148.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke tmp$1028040148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r123 = virtualinvoke parser#23.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        $r122 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r121 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        tmp$408651683 = new java.lang.StringBuilder;

        specialinvoke tmp$408651683.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke tmp$408651683.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(parser#23);

        $r134 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r134);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", parser#23);

        goto label51;

     label50:
        $r117 := @caughtexception;

        parser#24 = $r117;

        $r119 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        tmp$1079759781 = new java.lang.StringBuilder;

        specialinvoke tmp$1079759781.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke tmp$1079759781.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r113 = virtualinvoke parser#24.<java.io.IOException: java.lang.String toString()>();

        $r114 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        tmp$684380658 = new java.lang.StringBuilder;

        specialinvoke tmp$684380658.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke tmp$684380658.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r106 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(parser#24);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r107);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", parser#24);

     label51:
        $r6 = this.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        parser#25 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        type#26 = 0;

     label52:
        if type#26 >= parser#25 goto label57;

        $r30 = this.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        $r31 = virtualinvoke $r30.<java.util.ArrayList: java.lang.Object get(int)>(type#26);

        outerDepth#27 = (com.android.server.pm.PendingPackage) $r31;

        $i8 = outerDepth#27.<com.android.server.pm.PendingPackage: int sharedId>;

        tagName#28 = virtualinvoke this.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i8);

        if tagName#28 == null goto label54;

        $z9 = tagName#28 instanceof com.android.server.pm.SharedUserSetting;

        if $z9 == 0 goto label54;

        $r58 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r57 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String realName>;

        $r60 = (com.android.server.pm.SharedUserSetting) tagName#28;

        $r59 = outerDepth#27.<com.android.server.pm.PendingPackage: java.io.File codePath>;

        $r52 = outerDepth#27.<com.android.server.pm.PendingPackage: java.io.File resourcePath>;

        $r51 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String legacyNativeLibraryPathString>;

        $r54 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String primaryCpuAbiString>;

        $r53 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String secondaryCpuAbiString>;

        $i11 = outerDepth#27.<com.android.server.pm.PendingPackage: int versionCode>;

        $i10 = outerDepth#27.<com.android.server.pm.PendingPackage: int pkgFlags>;

        $i12 = outerDepth#27.<com.android.server.pm.PendingPackage: int pkgPrivateFlags>;

        name#29 = specialinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(java.lang.String,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,int,int,android.os.UserHandle,boolean,boolean)>($r58, null, $r57, $r60, $r59, $r52, $r51, $r54, $r53, $i11, $i10, $i12, null, 1, 0);

        if name#29 != null goto label53;

        tmp$2758896 = new java.lang.StringBuilder;

        specialinvoke tmp$2758896.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke tmp$2758896.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create application package for ");

        $r63 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r62 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r61);

        goto label56;

     label53:
        tmp$746419066 = (com.android.server.pm.PackageSettingBase) outerDepth#27;

        virtualinvoke name#29.<com.android.server.pm.PackageSetting: void copyFrom(com.android.server.pm.PackageSettingBase)>(tmp$746419066);

        goto label56;

     label54:
        if tagName#28 == null goto label55;

        tmp$166552451 = new java.lang.StringBuilder;

        specialinvoke tmp$166552451.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke tmp$166552451.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r40 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        $i9 = outerDepth#27.<com.android.server.pm.PendingPackage: int sharedId>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r45 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not a shared uid\n");

        name#30 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#30);

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, name#30);

        goto label56;

     label55:
        tmp$30844472 = new java.lang.StringBuilder;

        specialinvoke tmp$30844472.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke tmp$30844472.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r33 = outerDepth#27.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        $i7 = outerDepth#27.<com.android.server.pm.PendingPackage: int sharedId>;

        $r43 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not defined\n");

        name#31 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#31);

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, name#31);

     label56:
        type#26 = type#26 + 1;

        goto label52;

     label57:
        $r7 = this.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        $r8 = this.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        $z1 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label58;

        $r32 = this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $z7 = virtualinvoke $r32.<java.io.File: boolean exists()>();

        if $z7 == 0 goto label59;

     label58:
        virtualinvoke this.<com.android.server.pm.Settings: void readStoppedLPw()>();

        $r10 = this.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        virtualinvoke $r10.<java.io.File: boolean delete()>();

        $r9 = this.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke $r9.<java.io.File: boolean delete()>();

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(0);

        goto label62;

     label59:
        if users != null goto label60;

        virtualinvoke this.<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>(0);

        goto label62;

     label60:
        type#32 = interfaceinvoke users.<java.util.List: java.util.Iterator iterator()>();

     label61:
        $z8 = interfaceinvoke type#32.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label62;

        $r29 = interfaceinvoke type#32.<java.util.Iterator: java.lang.Object next()>();

        outerDepth#33 = (android.content.pm.UserInfo) $r29;

        $i6 = outerDepth#33.<android.content.pm.UserInfo: int id>;

        virtualinvoke this.<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>($i6);

        goto label61;

     label62:
        if users != null goto label63;

        $r26 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r26.<com.android.server.pm.Settings$RuntimePermissionPersistence: void readStateForUserSyncLPr(int)>(0);

        goto label65;

     label63:
        type#34 = interfaceinvoke users.<java.util.List: java.util.Iterator iterator()>();

     label64:
        $z4 = interfaceinvoke type#34.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label65;

        $r28 = interfaceinvoke type#34.<java.util.Iterator: java.lang.Object next()>();

        outerDepth#35 = (android.content.pm.UserInfo) $r28;

        $r27 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        $i5 = outerDepth#35.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r27.<com.android.server.pm.Settings$RuntimePermissionPersistence: void readStateForUserSyncLPr(int)>($i5);

        goto label64;

     label65:
        $r11 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.util.Collection values()>();

        type#36 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label66:
        $z5 = interfaceinvoke type#36.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label68;

        $r21 = interfaceinvoke type#36.<java.util.Iterator: java.lang.Object next()>();

        outerDepth#37 = (com.android.server.pm.PackageSetting) $r21;

        $i4 = outerDepth#37.<com.android.server.pm.PackageSetting: int appId>;

        tagName#38 = virtualinvoke this.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i4);

        if tagName#38 == null goto label67;

        $z6 = tagName#38 instanceof com.android.server.pm.SharedUserSetting;

        if $z6 == 0 goto label67;

        $r25 = (com.android.server.pm.SharedUserSetting) tagName#38;

        outerDepth#37.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = $r25;

     label67:
        goto label66;

     label68:
        $r14 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        tmp$1338577717 = new java.lang.StringBuilder;

        specialinvoke tmp$1338577717.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke tmp$1338577717.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read completed successfully: ");

        $r17 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $i2 = virtualinvoke $r17.<android.util.ArrayMap: int size()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packages, ");

        $r19 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $i3 = virtualinvoke $r19.<android.util.ArrayMap: int size()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared uids\n");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        return 1;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label26 to label27 with label28;
        catch java.lang.IllegalArgumentException from label38 to label39 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label49;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label11 with label49;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label48 with label49;
        catch java.io.IOException from label05 to label06 with label50;
        catch java.io.IOException from label07 to label11 with label50;
        catch java.io.IOException from label12 to label48 with label50;
    }

    void applyDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService, int)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageManagerService service;
        int userId, type, $i0, $i6, $i7, $i8, i#4, intents#8, i#9;
        java.lang.Throwable l12, $r56;
        java.io.IOException l13, $r49, $r50, $r51, $r52, $r54, $r55, $r60, l11#13, l11#14, parser#15, parser#17, parser#18, parser#19;
        android.util.ArrayMap $r0;
        java.util.Collection $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.File $r2, i$#6, aii#10, tmp$1587114066;
        java.lang.String $r4, $r6, $r7, $r10, $r18, $r23, $r29, $r31, $r45, $r48, $r53, $r58;
        java.lang.StringBuilder $r8, $r11, $r12, $r13, $r14, $r17, $r19, $r20, $r21, $r24, $r25, $r26, $r27, $r30, $r33, $r34, $r35, $r43, $r44, $r57, $r59, tmp$1659032403, tmp$1607309903, tmp$1076376964, tmp$1155264220, tmp$471888480, tmp$1953009118, tmp$1299562529;
        java.lang.Object $r32, $r37;
        android.content.pm.PackageParser$Package $r36, $r39, $r40;
        java.util.ArrayList $r41, intents#3;
        android.content.pm.PackageParser$Activity $r46;
        org.xmlpull.v1.XmlPullParserException $r47, parser#16;
        java.util.Iterator i$#1;
        com.android.server.pm.PackageSetting ps#2;
        android.content.pm.PackageParser$ActivityIntentInfo aii#5;
        java.io.File[] ps#7;
        java.io.FileInputStream str#11, tmp$113422521;
        org.xmlpull.v1.XmlPullParser parser#12;
        android.content.ComponentName tmp$612829240;
        java.io.InputStream tmp$939818756;

        this := @this: com.android.server.pm.Settings;

        service := @parameter0: com.android.server.pm.PackageManagerService;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.util.Collection values()>();

        i$#1 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke i$#1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r32 = interfaceinvoke i$#1.<java.util.Iterator: java.lang.Object next()>();

        ps#2 = (com.android.server.pm.PackageSetting) $r32;

        $i6 = ps#2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i8 = $i6 & 1;

        if $i8 == 0 goto label03;

        $r39 = ps#2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r39 == null goto label03;

        $r40 = ps#2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r41 = $r40.<android.content.pm.PackageParser$Package: java.util.ArrayList preferredActivityFilters>;

        if $r41 == null goto label03;

        $r36 = ps#2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        intents#3 = $r36.<android.content.pm.PackageParser$Package: java.util.ArrayList preferredActivityFilters>;

        i#4 = 0;

     label02:
        $i7 = virtualinvoke intents#3.<java.util.ArrayList: int size()>();

        if i#4 >= $i7 goto label03;

        $r37 = virtualinvoke intents#3.<java.util.ArrayList: java.lang.Object get(int)>(i#4);

        aii#5 = (android.content.pm.PackageParser$ActivityIntentInfo) $r37;

        tmp$612829240 = new android.content.ComponentName;

        $r48 = ps#2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r46 = aii#5.<android.content.pm.PackageParser$ActivityIntentInfo: android.content.pm.PackageParser$Activity activity>;

        $r45 = $r46.<android.content.pm.PackageParser$Activity: java.lang.String className>;

        specialinvoke tmp$612829240.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r48, $r45);

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.IntentFilter,android.content.ComponentName,int)>(service, aii#5, tmp$612829240, userId);

        i#4 = i#4 + 1;

        goto label02;

     label03:
        goto label01;

     label04:
        tmp$1587114066 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke tmp$1587114066.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "etc/preferred-apps");

        i$#6 = tmp$1587114066;

        $z2 = virtualinvoke i$#6.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label05;

        $z1 = virtualinvoke i$#6.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label06;

     label05:
        return;

     label06:
        $z3 = virtualinvoke i$#6.<java.io.File: boolean canRead()>();

        if $z3 != 0 goto label07;

        tmp$1659032403 = new java.lang.StringBuilder;

        specialinvoke tmp$1659032403.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke tmp$1659032403.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i$#6);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r31 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r31);

        return;

     label07:
        ps#7 = virtualinvoke i$#6.<java.io.File: java.io.File[] listFiles()>();

        intents#8 = lengthof ps#7;

        i#9 = 0;

     label08:
        if i#9 >= intents#8 goto label45;

        aii#10 = ps#7[i#9];

        $r4 = virtualinvoke aii#10.<java.io.File: java.lang.String getPath()>();

        $z4 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z4 != 0 goto label09;

        tmp$1607309903 = new java.lang.StringBuilder;

        specialinvoke tmp$1607309903.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke tmp$1607309903.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-xml file ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aii#10);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i$#6);

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory, ignoring");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageSettings", $r29);

        goto label44;

     label09:
        $z5 = virtualinvoke aii#10.<java.io.File: boolean canRead()>();

        if $z5 != 0 goto label10;

        tmp$1076376964 = new java.lang.StringBuilder;

        specialinvoke tmp$1076376964.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke tmp$1076376964.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aii#10);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r23);

        goto label44;

     label10:
        str#11 = null;

     label11:
        tmp$113422521 = new java.io.FileInputStream;

        specialinvoke tmp$113422521.<java.io.FileInputStream: void <init>(java.io.File)>(aii#10);

        str#11 = tmp$113422521;

        parser#12 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        tmp$939818756 = (java.io.InputStream) str#11;

        interfaceinvoke parser#12.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(tmp$939818756, null);

     label12:
        $i0 = interfaceinvoke parser#12.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 2 goto label13;

        if type == 1 goto label13;

        goto label12;

     label13:
        if type == 2 goto label18;

        tmp$1155264220 = new java.lang.StringBuilder;

        specialinvoke tmp$1155264220.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke tmp$1155264220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aii#10);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have start tag");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r18);

     label14:
        if str#11 == null goto label44;

     label15:
        virtualinvoke str#11.<java.io.FileInputStream: void close()>();

     label16:
        goto label44;

     label17:
        $r49 := @caughtexception;

        l11#13 = $r49;

        goto label44;

     label18:
        $r7 = "preferred-activities";

        $r6 = interfaceinvoke parser#12.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z6 != 0 goto label23;

        tmp$471888480 = new java.lang.StringBuilder;

        specialinvoke tmp$471888480.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke tmp$471888480.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aii#10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not start with \'preferred-activities\'");

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r10);

     label19:
        if str#11 == null goto label44;

     label20:
        virtualinvoke str#11.<java.io.FileInputStream: void close()>();

     label21:
        goto label44;

     label22:
        $r51 := @caughtexception;

        l11#14 = $r51;

        goto label44;

     label23:
        specialinvoke this.<com.android.server.pm.Settings: void readDefaultPreferredActivitiesLPw(com.android.server.pm.PackageManagerService,org.xmlpull.v1.XmlPullParser,int)>(service, parser#12, userId);

     label24:
        if str#11 == null goto label44;

     label25:
        virtualinvoke str#11.<java.io.FileInputStream: void close()>();

     label26:
        goto label44;

     label27:
        $r55 := @caughtexception;

        parser#15 = $r55;

        goto label44;

     label28:
        $r47 := @caughtexception;

        parser#16 = $r47;

        tmp$1953009118 = new java.lang.StringBuilder;

        specialinvoke tmp$1953009118.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke tmp$1953009118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading apps file ");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aii#10);

        $r53 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", $r53, parser#16);

     label29:
        if str#11 == null goto label44;

     label30:
        virtualinvoke str#11.<java.io.FileInputStream: void close()>();

     label31:
        goto label44;

     label32:
        $r54 := @caughtexception;

        parser#17 = $r54;

        goto label44;

     label33:
        $r60 := @caughtexception;

        parser#18 = $r60;

        tmp$1299562529 = new java.lang.StringBuilder;

        specialinvoke tmp$1299562529.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke tmp$1299562529.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading apps file ");

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aii#10);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", $r58, parser#18);

     label34:
        if str#11 == null goto label44;

     label35:
        virtualinvoke str#11.<java.io.FileInputStream: void close()>();

     label36:
        goto label44;

     label37:
        $r52 := @caughtexception;

        parser#19 = $r52;

        goto label44;

     label38:
        $r56 := @caughtexception;

        l12 = $r56;

     label39:
        if str#11 == null goto label43;

     label40:
        virtualinvoke str#11.<java.io.FileInputStream: void close()>();

     label41:
        goto label43;

     label42:
        $r50 := @caughtexception;

        l13 = $r50;

     label43:
        throw l12;

     label44:
        i#9 = i#9 + 1;

        goto label08;

     label45:
        return;

        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label25 to label26 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label14 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label11 to label14 with label33;
        catch java.io.IOException from label18 to label19 with label33;
        catch java.io.IOException from label23 to label24 with label33;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.lang.Throwable from label11 to label14 with label38;
        catch java.lang.Throwable from label18 to label19 with label38;
        catch java.lang.Throwable from label23 to label24 with label38;
        catch java.lang.Throwable from label28 to label29 with label38;
        catch java.lang.Throwable from label33 to label34 with label38;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label38 to label39 with label38;
    }

    private void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService, android.content.IntentFilter, android.content.ComponentName, int)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageManagerService service;
        android.content.IntentFilter tmpPa;
        android.content.ComponentName cn;
        int userId, $i0, $i1, $i2, $i3, $i4, $i5, $i6, flags#1, i#2, ischeme#6, issp#9, issp#13, finalIntent#16, ischeme#22, issp#25;
        android.content.Intent intent, $r0, finalIntent, $r4, $r8, $r14, $r19, $r31, $r34, finalIntent#12, builder#19, builder#21, ssp#27, scheme#28;
        android.os.PatternMatcher path, ssp#11;
        java.lang.String $r2, $r20, $r24, $r26, $r27, $r28, $r32, cat#3, scheme#8, doScheme#23, builder#26;
        android.net.Uri$Builder $r5, $r10, $r15, $r22, $r37, builder#10, builder#17, finalIntent#18, issp#20, scheme#24;
        boolean $z0, $z1, $z2, i#4, cat#5, doScheme#7, builder#14;
        android.net.Uri $r6, $r11, $r18, $r30, $r35;
        android.content.IntentFilter$AuthorityEntry ssp#15;

        this := @this: com.android.server.pm.Settings;

        service := @parameter0: com.android.server.pm.PackageManagerService;

        tmpPa := @parameter1: android.content.IntentFilter;

        cn := @parameter2: android.content.ComponentName;

        userId := @parameter3: int;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>()>();

        intent = $r0;

        flags#1 = 0;

        $r2 = virtualinvoke tmpPa.<android.content.IntentFilter: java.lang.String getAction(int)>(0);

        virtualinvoke intent.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r2);

        i#2 = 0;

     label01:
        $i1 = virtualinvoke tmpPa.<android.content.IntentFilter: int countCategories()>();

        if i#2 >= $i1 goto label04;

        cat#3 = virtualinvoke tmpPa.<android.content.IntentFilter: java.lang.String getCategory(int)>(i#2);

        $z2 = virtualinvoke cat#3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.category.DEFAULT");

        if $z2 == 0 goto label02;

        flags#1 = flags#1 | 65536;

        goto label03;

     label02:
        virtualinvoke intent.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(cat#3);

     label03:
        i#2 = i#2 + 1;

        goto label01;

     label04:
        i#4 = 1;

        cat#5 = 0;

        ischeme#6 = 0;

     label05:
        $i0 = virtualinvoke tmpPa.<android.content.IntentFilter: int countDataSchemes()>();

        if ischeme#6 >= $i0 goto label17;

        doScheme#7 = 1;

        scheme#8 = virtualinvoke tmpPa.<android.content.IntentFilter: java.lang.String getDataScheme(int)>(ischeme#6);

        if scheme#8 == null goto label06;

        $z1 = virtualinvoke scheme#8.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label06;

        cat#5 = 1;

     label06:
        issp#9 = 0;

     label07:
        $i5 = virtualinvoke tmpPa.<android.content.IntentFilter: int countDataSchemeSpecificParts()>();

        if issp#9 >= $i5 goto label08;

        $r37 = new android.net.Uri$Builder;

        specialinvoke $r37.<android.net.Uri$Builder: void <init>()>();

        builder#10 = $r37;

        virtualinvoke builder#10.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(scheme#8);

        ssp#11 = virtualinvoke tmpPa.<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)>(issp#9);

        $r32 = virtualinvoke ssp#11.<android.os.PatternMatcher: java.lang.String getPath()>();

        virtualinvoke builder#10.<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(java.lang.String)>($r32);

        $r34 = new android.content.Intent;

        specialinvoke $r34.<android.content.Intent: void <init>(android.content.Intent)>(intent);

        finalIntent#12 = $r34;

        $r35 = virtualinvoke builder#10.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke finalIntent#12.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r35);

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(service, finalIntent#12, flags#1, cn, scheme#8, ssp#11, null, null, userId);

        doScheme#7 = 0;

        issp#9 = issp#9 + 1;

        goto label07;

     label08:
        issp#13 = 0;

     label09:
        $i4 = virtualinvoke tmpPa.<android.content.IntentFilter: int countDataAuthorities()>();

        if issp#13 >= $i4 goto label15;

        builder#14 = 1;

        ssp#15 = virtualinvoke tmpPa.<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)>(issp#13);

        finalIntent#16 = 0;

     label10:
        $i6 = virtualinvoke tmpPa.<android.content.IntentFilter: int countDataPaths()>();

        if finalIntent#16 >= $i6 goto label12;

        $r22 = new android.net.Uri$Builder;

        specialinvoke $r22.<android.net.Uri$Builder: void <init>()>();

        builder#17 = $r22;

        virtualinvoke builder#17.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(scheme#8);

        $r27 = virtualinvoke ssp#15.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        if $r27 == null goto label11;

        $r28 = virtualinvoke ssp#15.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        virtualinvoke builder#17.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r28);

     label11:
        path = virtualinvoke tmpPa.<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>(finalIntent#16);

        $r26 = virtualinvoke path.<android.os.PatternMatcher: java.lang.String getPath()>();

        virtualinvoke builder#17.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>($r26);

        $r31 = new android.content.Intent;

        specialinvoke $r31.<android.content.Intent: void <init>(android.content.Intent)>(intent);

        finalIntent = $r31;

        $r30 = virtualinvoke builder#17.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke finalIntent.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r30);

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(service, finalIntent, flags#1, cn, scheme#8, null, ssp#15, path, userId);

        doScheme#7 = 0;

        builder#14 = 0;

        finalIntent#16 = finalIntent#16 + 1;

        goto label10;

     label12:
        if builder#14 == 0 goto label14;

        $r15 = new android.net.Uri$Builder;

        specialinvoke $r15.<android.net.Uri$Builder: void <init>()>();

        finalIntent#18 = $r15;

        virtualinvoke finalIntent#18.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(scheme#8);

        $r20 = virtualinvoke ssp#15.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        if $r20 == null goto label13;

        $r24 = virtualinvoke ssp#15.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        virtualinvoke finalIntent#18.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r24);

     label13:
        $r19 = new android.content.Intent;

        specialinvoke $r19.<android.content.Intent: void <init>(android.content.Intent)>(intent);

        builder#19 = $r19;

        $r18 = virtualinvoke finalIntent#18.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke builder#19.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r18);

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(service, builder#19, flags#1, cn, scheme#8, null, ssp#15, null, userId);

        doScheme#7 = 0;

     label14:
        issp#13 = issp#13 + 1;

        goto label09;

     label15:
        if doScheme#7 == 0 goto label16;

        $r10 = new android.net.Uri$Builder;

        specialinvoke $r10.<android.net.Uri$Builder: void <init>()>();

        issp#20 = $r10;

        virtualinvoke issp#20.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(scheme#8);

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(android.content.Intent)>(intent);

        builder#21 = $r14;

        $r11 = virtualinvoke issp#20.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke builder#21.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r11);

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(service, builder#21, flags#1, cn, scheme#8, null, null, null, userId);

     label16:
        i#4 = 0;

        ischeme#6 = ischeme#6 + 1;

        goto label05;

     label17:
        ischeme#22 = 0;

     label18:
        $i2 = virtualinvoke tmpPa.<android.content.IntentFilter: int countDataTypes()>();

        if ischeme#22 >= $i2 goto label24;

        doScheme#23 = virtualinvoke tmpPa.<android.content.IntentFilter: java.lang.String getDataType(int)>(ischeme#22);

        if cat#5 == 0 goto label22;

        $r5 = new android.net.Uri$Builder;

        specialinvoke $r5.<android.net.Uri$Builder: void <init>()>();

        scheme#24 = $r5;

        issp#25 = 0;

     label19:
        $i3 = virtualinvoke tmpPa.<android.content.IntentFilter: int countDataSchemes()>();

        if issp#25 >= $i3 goto label21;

        builder#26 = virtualinvoke tmpPa.<android.content.IntentFilter: java.lang.String getDataScheme(int)>(issp#25);

        if builder#26 == null goto label20;

        $z0 = virtualinvoke builder#26.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label20;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Intent)>(intent);

        ssp#27 = $r8;

        virtualinvoke scheme#24.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(builder#26);

        $r6 = virtualinvoke scheme#24.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke ssp#27.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r6, doScheme#23);

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(service, ssp#27, flags#1, cn, builder#26, null, null, null, userId);

     label20:
        issp#25 = issp#25 + 1;

        goto label19;

     label21:
        goto label23;

     label22:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(android.content.Intent)>(intent);

        scheme#28 = $r4;

        virtualinvoke scheme#28.<android.content.Intent: android.content.Intent setType(java.lang.String)>(doScheme#23);

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(service, scheme#28, flags#1, cn, null, null, null, null, userId);

     label23:
        i#4 = 0;

        ischeme#22 = ischeme#22 + 1;

        goto label18;

     label24:
        if i#4 == 0 goto label25;

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(service, intent, flags#1, cn, null, null, null, null, userId);

     label25:
        return;
    }

    private void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService, android.content.Intent, int, android.content.ComponentName, java.lang.String, android.os.PatternMatcher, android.content.IntentFilter$AuthorityEntry, android.os.PatternMatcher, int)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageManagerService service;
        android.content.Intent intent;
        int flags, userId, $i0, $i2, $i3, $i5, $i7, $i8, $i9, $i10, $i11, systemMatch#1, i#4, ai#11;
        android.content.ComponentName cn, $r24, $r44, haveNonSys#3;
        java.lang.String scheme, cat, $r1, $r5, $r7, $r11, $r16, $r20, $r23, $r25, $r26, $r31, $r36, $r37, $r38, $r39, $r41, $r45, $r46, $r48, $r49, $r56, $r59;
        android.os.PatternMatcher ssp, path;
        android.content.IntentFilter$AuthorityEntry auth;
        java.util.List ri;
        byte thirdPartyMatch;
        android.content.ComponentName[] set;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r50, $r52, $r57, $r58, $r60, i#10;
        android.content.IntentFilter $r27, i#6;
        com.android.server.pm.PreferredActivity $r30, ai#9;
        java.util.Set $r32, $r33;
        boolean $z0, $z1, $z2, haveAct#2;
        java.lang.Object $r34, $r42, $r47, $r53;
        com.android.server.pm.PreferredIntentResolver $r35;
        android.content.pm.ApplicationInfo $r40;
        android.content.pm.ResolveInfo $r43, $r54, $r55;
        android.content.IntentFilter$MalformedMimeTypeException $r51, ai#8;
        android.content.pm.ActivityInfo ai#5;
        java.util.Iterator ai#7;

        this := @this: com.android.server.pm.Settings;

        service := @parameter0: com.android.server.pm.PackageManagerService;

        intent := @parameter1: android.content.Intent;

        flags := @parameter2: int;

        cn := @parameter3: android.content.ComponentName;

        scheme := @parameter4: java.lang.String;

        ssp := @parameter5: android.os.PatternMatcher;

        auth := @parameter6: android.content.IntentFilter$AuthorityEntry;

        path := @parameter7: android.os.PatternMatcher;

        userId := @parameter8: int;

        $r0 = service.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r1 = virtualinvoke intent.<android.content.Intent: java.lang.String getType()>();

        ri = virtualinvoke $r0.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(intent, $r1, flags, 0);

        systemMatch#1 = 0;

        thirdPartyMatch = 0;

        if ri == null goto label24;

        $i0 = interfaceinvoke ri.<java.util.List: int size()>();

        if $i0 <= 1 goto label24;

        haveAct#2 = 0;

        haveNonSys#3 = null;

        $i2 = interfaceinvoke ri.<java.util.List: int size()>();

        set = newarray (android.content.ComponentName)[$i2];

        i#4 = 0;

     label01:
        $i3 = interfaceinvoke ri.<java.util.List: int size()>();

        if i#4 >= $i3 goto label04;

        $r42 = interfaceinvoke ri.<java.util.List: java.lang.Object get(int)>(i#4);

        $r43 = (android.content.pm.ResolveInfo) $r42;

        ai#5 = $r43.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r44 = new android.content.ComponentName;

        $r39 = ai#5.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r38 = ai#5.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r44.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r39, $r38);

        set[i#4] = $r44;

        $r40 = ai#5.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r40.<android.content.pm.ApplicationInfo: int flags>;

        $i10 = $i9 & 1;

        if $i10 != 0 goto label02;

        $r53 = interfaceinvoke ri.<java.util.List: java.lang.Object get(int)>(i#4);

        $r55 = (android.content.pm.ResolveInfo) $r53;

        $i11 = $r55.<android.content.pm.ResolveInfo: int match>;

        if $i11 < thirdPartyMatch goto label03;

        haveNonSys#3 = set[i#4];

        goto label04;

     label02:
        $r48 = virtualinvoke cn.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r49 = ai#5.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z2 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>($r49);

        if $z2 == 0 goto label03;

        $r46 = virtualinvoke cn.<android.content.ComponentName: java.lang.String getClassName()>();

        $r45 = ai#5.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z1 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z1 == 0 goto label03;

        haveAct#2 = 1;

        $r47 = interfaceinvoke ri.<java.util.List: java.lang.Object get(int)>(i#4);

        $r54 = (android.content.pm.ResolveInfo) $r47;

        systemMatch#1 = $r54.<android.content.pm.ResolveInfo: int match>;

     label03:
        i#4 = i#4 + 1;

        goto label01;

     label04:
        if haveNonSys#3 == null goto label05;

        if thirdPartyMatch >= systemMatch#1 goto label05;

        haveNonSys#3 = null;

     label05:
        if haveAct#2 == 0 goto label18;

        if haveNonSys#3 != null goto label18;

        $r27 = new android.content.IntentFilter;

        specialinvoke $r27.<android.content.IntentFilter: void <init>()>();

        i#6 = $r27;

        $r26 = virtualinvoke intent.<android.content.Intent: java.lang.String getAction()>();

        if $r26 == null goto label06;

        $r41 = virtualinvoke intent.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke i#6.<android.content.IntentFilter: void addAction(java.lang.String)>($r41);

     label06:
        $r32 = virtualinvoke intent.<android.content.Intent: java.util.Set getCategories()>();

        if $r32 == null goto label08;

        $r33 = virtualinvoke intent.<android.content.Intent: java.util.Set getCategories()>();

        ai#7 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke ai#7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r34 = interfaceinvoke ai#7.<java.util.Iterator: java.lang.Object next()>();

        cat = (java.lang.String) $r34;

        virtualinvoke i#6.<android.content.IntentFilter: void addCategory(java.lang.String)>(cat);

        goto label07;

     label08:
        $i7 = flags & 65536;

        if $i7 == 0 goto label09;

        virtualinvoke i#6.<android.content.IntentFilter: void addCategory(java.lang.String)>("android.intent.category.DEFAULT");

     label09:
        if scheme == null goto label10;

        virtualinvoke i#6.<android.content.IntentFilter: void addDataScheme(java.lang.String)>(scheme);

     label10:
        if ssp == null goto label11;

        $r37 = virtualinvoke ssp.<android.os.PatternMatcher: java.lang.String getPath()>();

        $i8 = virtualinvoke ssp.<android.os.PatternMatcher: int getType()>();

        virtualinvoke i#6.<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>($r37, $i8);

     label11:
        if auth == null goto label12;

        virtualinvoke i#6.<android.content.IntentFilter: void addDataAuthority(android.content.IntentFilter$AuthorityEntry)>(auth);

     label12:
        if path == null goto label13;

        virtualinvoke i#6.<android.content.IntentFilter: void addDataPath(android.os.PatternMatcher)>(path);

     label13:
        $r31 = virtualinvoke intent.<android.content.Intent: java.lang.String getType()>();

        if $r31 == null goto label17;

     label14:
        $r36 = virtualinvoke intent.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke i#6.<android.content.IntentFilter: void addDataType(java.lang.String)>($r36);

     label15:
        goto label17;

     label16:
        $r51 := @caughtexception;

        ai#8 = $r51;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed mimetype ");

        $r59 = virtualinvoke intent.<android.content.Intent: java.lang.String getType()>();

        $r60 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cn);

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r56);

     label17:
        $r30 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r30.<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>(i#6, systemMatch#1, set, cn, 1);

        ai#9 = $r30;

        $r35 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(userId);

        virtualinvoke $r35.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>(ai#9);

        goto label23;

     label18:
        if haveNonSys#3 != null goto label22;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        i#10 = $r14;

        virtualinvoke i#10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No component ");

        $r20 = virtualinvoke cn.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke i#10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke i#10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found setting preferred ");

        virtualinvoke i#10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(intent);

        virtualinvoke i#10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; possible matches are ");

        ai#11 = 0;

     label19:
        $i5 = lengthof set;

        if ai#11 >= $i5 goto label21;

        if ai#11 <= 0 goto label20;

        virtualinvoke i#10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label20:
        $r24 = set[ai#11];

        $r23 = virtualinvoke $r24.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke i#10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        ai#11 = ai#11 + 1;

        goto label19;

     label21:
        $r25 = virtualinvoke i#10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r25);

        goto label23;

     label22:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not setting preferred ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(intent);

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; found third party match ");

        $r11 = virtualinvoke haveNonSys#3.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageSettings", $r16);

     label23:
        goto label25;

     label24:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No potential matches found for ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(intent);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while setting preferred ");

        $r5 = virtualinvoke cn.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r7);

     label25:
        return;

        catch android.content.IntentFilter$MalformedMimeTypeException from label14 to label15 with label16;
    }

    private void readDefaultPreferredActivitiesLPw(com.android.server.pm.PackageManagerService, org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageManagerService service;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, $r2, $r3, $r8, $r10, $r15, $r17;
        com.android.server.pm.PreferredActivity tmpPa, $r6;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r4, $r7, $r9, $r12, $r13, $r14;
        com.android.server.pm.PreferredComponent $r5, $r11, $r16;
        android.content.ComponentName $r18;

        this := @this: com.android.server.pm.Settings;

        service := @parameter0: com.android.server.pm.PackageManagerService;

        parser := @parameter1: org.xmlpull.v1.XmlPullParser;

        userId := @parameter2: int;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label8;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label8;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        $r6 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r6.<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(parser);

        tmpPa = $r6;

        $r5 = tmpPa.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r8 = virtualinvoke $r5.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        if $r8 != null goto label4;

        $r16 = tmpPa.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r18 = $r16.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        specialinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.IntentFilter,android.content.ComponentName,int)>(service, tmpPa, $r18, userId);

        goto label5;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-activity> ");

        $r11 = tmpPa.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r10 = virtualinvoke $r11.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r15 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r17);

     label5:
        goto label7;

     label6:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-activities>: ");

        $r2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r3);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label7:
        goto label1;

     label8:
        return;
    }

    private int readInt(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        java.lang.String ns, name, v, $r6, $r8;
        int defValue, $i0;
        java.lang.NumberFormatException e, $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r7, $r9;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        ns := @parameter1: java.lang.String;

        name := @parameter2: java.lang.String;

        defValue := @parameter3: int;

        v = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(ns, name);

     label1:
        if v != null goto label3;

     label2:
        return defValue;

     label3:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v);

     label4:
        return $i0;

     label5:
        $r0 := @caughtexception;

        e = $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: attribute ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad integer value ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r6 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

        return defValue;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private void readPermissionsLPw(android.util.ArrayMap, org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings this;
        android.util.ArrayMap out;
        org.xmlpull.v1.XmlPullParser parser;
        int outerDepth, type, $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String tagName, name, sourcePackage, ptype, $r1, $r6, $r7, $r9, $r11, $r13, $r15, $r18, $r19, $r20, $r21;
        boolean dynamic, $z0;
        com.android.server.pm.BasePermission bp, $r14;
        android.content.pm.PermissionInfo pi, $r17;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r8, $r10, $r12;
        byte $b7;

        this := @this: com.android.server.pm.Settings;

        out := @parameter0: android.util.ArrayMap;

        parser := @parameter1: org.xmlpull.v1.XmlPullParser;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label11;

        if type != 3 goto label02;

        $i5 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= outerDepth goto label11;

     label02:
        if type == 3 goto label01;

        if type != 4 goto label03;

        goto label01;

     label03:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label09;

        name = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        sourcePackage = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        ptype = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        if name == null goto label07;

        if sourcePackage == null goto label07;

        $r11 = "dynamic";

        dynamic = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(ptype);

        $r14 = new com.android.server.pm.BasePermission;

        $r15 = virtualinvoke name.<java.lang.String: java.lang.String intern()>();

        if dynamic == 0 goto label04;

        $b7 = 2;

        goto label05;

     label04:
        $b7 = 0;

     label05:
        specialinvoke $r14.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r15, sourcePackage, $b7);

        bp = $r14;

        $i1 = specialinvoke this.<com.android.server.pm.Settings: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>(parser, null, "protection", 0);

        bp.<com.android.server.pm.BasePermission: int protectionLevel> = $i1;

        $i2 = bp.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i3 = staticinvoke <android.content.pm.PermissionInfo: int fixProtectionLevel(int)>($i2);

        bp.<com.android.server.pm.BasePermission: int protectionLevel> = $i3;

        if dynamic == 0 goto label06;

        $r17 = new android.content.pm.PermissionInfo;

        specialinvoke $r17.<android.content.pm.PermissionInfo: void <init>()>();

        pi = $r17;

        $r20 = virtualinvoke sourcePackage.<java.lang.String: java.lang.String intern()>();

        pi.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r20;

        $r21 = virtualinvoke name.<java.lang.String: java.lang.String intern()>();

        pi.<android.content.pm.PermissionInfo: java.lang.String name> = $r21;

        $i4 = specialinvoke this.<com.android.server.pm.Settings: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>(parser, null, "icon", 0);

        pi.<android.content.pm.PermissionInfo: int icon> = $i4;

        $r19 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        pi.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel> = $r19;

        $i6 = bp.<com.android.server.pm.BasePermission: int protectionLevel>;

        pi.<android.content.pm.PermissionInfo: int protectionLevel> = $i6;

        bp.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo> = pi;

     label06:
        $r18 = bp.<com.android.server.pm.BasePermission: java.lang.String name>;

        virtualinvoke out.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, bp);

        goto label08;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: permissions has no name at ");

        $r9 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r13);

     label08:
        goto label10;

     label09:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element reading permissions: ");

        $r1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r6 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r7);

     label10:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

        goto label01;

     label11:
        return;
    }

    private void readDisabledSysPackageLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        java.lang.String name, realName, codePathStr, legacyCpuAbiStr, legacyNativeLibraryPathStr, secondaryCpuAbiStr, cpuAbiOverrideStr, version, $r6, $r8, $r11, resourcePathStr#1, primaryCpuAbiStr#2, timeStampStr#8, timeStampStr#11, timeStampStr#14, timeStampStr#16, timeStamp#18, sharedIdStr#20;
        java.io.File codePathFile, $r0, $r1;
        com.android.server.pm.PackageSetting ps, $r2;
        int type, $i0, $i1, $i2, versionCode#3, $i5, $i6, sharedIdStr#22;
        boolean $z0, $z1;
        android.util.ArrayMap $r3;
        java.lang.StringBuilder $r4, $r7, $r9;
        com.android.server.pm.PermissionsState $r10;
        long $l3, $l4, timeStamp#9, timeStamp#12;
        java.lang.NumberFormatException $r12, $r13, $r14, $r15, $r16, pkgFlags#4, timeStamp#10, timeStamp#13, timeStamp#15, timeStamp#17;
        byte pkgFlags#5, pkgPrivateFlags#6, pkgFlags#7;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        name = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        realName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "realName");

        codePathStr = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

        resourcePathStr#1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

        legacyCpuAbiStr = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "requiredCpuAbi");

        legacyNativeLibraryPathStr = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nativeLibraryPath");

        primaryCpuAbiStr#2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "primaryCpuAbi");

        secondaryCpuAbiStr = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "secondaryCpuAbi");

        cpuAbiOverrideStr = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cpuAbiOverride");

        if primaryCpuAbiStr#2 != null goto label01;

        if legacyCpuAbiStr == null goto label01;

        primaryCpuAbiStr#2 = legacyCpuAbiStr;

     label01:
        if resourcePathStr#1 != null goto label02;

        resourcePathStr#1 = codePathStr;

     label02:
        version = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        versionCode#3 = 0;

        if version == null goto label06;

     label03:
        versionCode#3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(version);

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        pkgFlags#4 = $r16;

     label06:
        pkgFlags#5 = 0;

        pkgPrivateFlags#6 = 0;

        pkgFlags#7 = pkgFlags#5 | 1;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(codePathStr);

        codePathFile = $r0;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean locationIsPrivileged(java.io.File)>(codePathFile);

        if $z0 == 0 goto label07;

        pkgPrivateFlags#6 = pkgPrivateFlags#6 | 8;

     label07:
        $r2 = new com.android.server.pm.PackageSetting;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(resourcePathStr#1);

        specialinvoke $r2.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(name, realName, codePathFile, $r1, legacyNativeLibraryPathStr, primaryCpuAbiStr#2, secondaryCpuAbiStr, cpuAbiOverrideStr, versionCode#3, pkgFlags#7, pkgPrivateFlags#6);

        ps = $r2;

        timeStampStr#8 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ft");

        if timeStampStr#8 == null goto label11;

     label08:
        timeStamp#9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(timeStampStr#8, 16);

        virtualinvoke ps.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(timeStamp#9);

     label09:
        goto label15;

     label10:
        $r12 := @caughtexception;

        timeStamp#10 = $r12;

        goto label15;

     label11:
        timeStampStr#11 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

        if timeStampStr#11 == null goto label15;

     label12:
        timeStamp#12 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(timeStampStr#11);

        virtualinvoke ps.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(timeStamp#12);

     label13:
        goto label15;

     label14:
        $r15 := @caughtexception;

        timeStamp#13 = $r15;

     label15:
        timeStampStr#14 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "it");

        if timeStampStr#14 == null goto label19;

     label16:
        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(timeStampStr#14, 16);

        ps.<com.android.server.pm.PackageSetting: long firstInstallTime> = $l3;

     label17:
        goto label19;

     label18:
        $r14 := @caughtexception;

        timeStamp#15 = $r14;

     label19:
        timeStampStr#16 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ut");

        if timeStampStr#16 == null goto label23;

     label20:
        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(timeStampStr#16, 16);

        ps.<com.android.server.pm.PackageSetting: long lastUpdateTime> = $l4;

     label21:
        goto label23;

     label22:
        $r13 := @caughtexception;

        timeStamp#17 = $r13;

     label23:
        timeStamp#18 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        if timeStamp#18 == null goto label24;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(timeStamp#18);

        goto label25;

     label24:
        $i5 = 0;

     label25:
        ps.<com.android.server.pm.PackageSetting: int appId> = $i5;

        $i1 = ps.<com.android.server.pm.PackageSetting: int appId>;

        if $i1 > 0 goto label28;

        sharedIdStr#20 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

        if sharedIdStr#20 == null goto label26;

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(sharedIdStr#20);

        goto label27;

     label26:
        $i6 = 0;

     label27:
        ps.<com.android.server.pm.PackageSetting: int appId> = $i6;

     label28:
        sharedIdStr#22 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label29:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label33;

        if type != 3 goto label30;

        $i2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= sharedIdStr#22 goto label33;

     label30:
        if type == 3 goto label29;

        if type != 4 goto label31;

        goto label29;

     label31:
        $r6 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z1 == 0 goto label32;

        $r10 = virtualinvoke ps.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        virtualinvoke this.<com.android.server.pm.Settings: void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PermissionsState)>(parser, $r10);

        goto label29;

     label32:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <updated-package>: ");

        $r8 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r11);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

        goto label29;

     label33:
        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, ps);

        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
        catch java.lang.NumberFormatException from label12 to label13 with label14;
        catch java.lang.NumberFormatException from label16 to label17 with label18;
        catch java.lang.NumberFormatException from label20 to label21 with label22;
    }

    private void readPackageLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        int type, outerDepth, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, pkgFlags#16, pkgPrivateFlags#17, versionCode#23, $i24, userId#49, $i25, userId#51;
        java.lang.String tagName, $r4, $r5, $r8, $r15, $r16, $r17, $r26, $r27, $r45, $r47, $r58, $r63, $r66, $r67, $r69, $r71, $r73, $r75, $r77, $r83, $r89, $r97, $r99, name#1, idStr#3, legacyNativeLibraryPathStr#8, primaryCpuAbiString#9, secondaryCpuAbiString#10, installerPackageName#13, volumeUuid#14, uidError#15, realName#24, sharedIdStr#25, codePathStr#26, resourcePathStr#27, legacyCpuAbiString#28, cpuAbiOverrideString#29, version#30, systemStr#32, systemStr#34, systemStr#36, systemStr#38, timeStampStr#40, timeStampStr#42, timeStampStr#44, timeStampStr#46, timeStampStr#53, userId#55, refCt#60;
        java.lang.Integer refCt, $r22, $r28, $r29, $r36, refCt#57;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r7, $r9, $r11, $r14, $r40, $r41, $r42, $r43, $r44, $r51, $r55, $r56, $r57, $r64, $r68, $r72, $r74, $r76, $r87, $r88, $r90, $r91, $r92, $r93, $r98, $r100, $r101, $r102, $r103, $r104, tmp$450518212, tmp$267778445, tmp$930722190, tmp$2141925435, tmp$187881617, tmp$714986429, tmp$908473570, tmp$2113823789;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.Long $r12, $r19, $r21, $r30, $r33, $r37;
        android.util.ArrayMap $r13, $r18, $r24, $r31, $r34, $r38;
        com.android.server.pm.PackageKeySetData $r20, $r25, $r39;
        java.lang.Object $r23, $r32, packageSetting#21;
        com.android.server.pm.PermissionsState $r35;
        com.android.server.pm.PackageSignatures $r48;
        java.util.ArrayList $r49, $r62;
        com.android.server.pm.PendingPackage $r61, tmp$901724749;
        java.lang.NumberFormatException $r78, $r80, $r81, $r82, $r84, $r85, $r86, $r94, $r95, $r96;
        long timeStamp#18, firstInstallTime#19, lastUpdateTime#20, id#56, id#58, id#59;
        byte $b23;
        java.io.File tmp$789665157, tmp$269522317, tmp$533357024, tmp$488727835;
        com.android.server.pm.PackageSettingBase tmp$323992862, tmp$948444950, tmp$1929634100, tmp$944096653, tmp$1135989502, tmp$959789736, tmp$2052894418, tmp$75532505, tmp$1375705179, tmp$821967819, tmp$1795559215, tmp$1333973646, tmp$1795543380, tmp$1546842432, tmp$238963464, tmp$1077154461, tmp$619515584, tmp$1373491693, tmp$709169384, tmp$408476532, tmp$1133165415, tmp$621552751, tmp$173602921, tmp$522982761, tmp$1329176724, tmp$700809274, tmp$1744139279, tmp$2090095837;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        name#1 = null;

        idStr#3 = null;

        legacyNativeLibraryPathStr#8 = null;

        primaryCpuAbiString#9 = null;

        secondaryCpuAbiString#10 = null;

        installerPackageName#13 = null;

        volumeUuid#14 = null;

        uidError#15 = null;

        pkgFlags#16 = 0;

        pkgPrivateFlags#17 = 0;

        timeStamp#18 = 0L;

        firstInstallTime#19 = 0L;

        lastUpdateTime#20 = 0L;

        packageSetting#21 = null;

        versionCode#23 = 0;

     label01:
        name#1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        realName#24 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "realName");

        idStr#3 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        uidError#15 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uidError");

        sharedIdStr#25 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

        codePathStr#26 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

        resourcePathStr#27 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

        legacyCpuAbiString#28 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "requiredCpuAbi");

        legacyNativeLibraryPathStr#8 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nativeLibraryPath");

        primaryCpuAbiString#9 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "primaryCpuAbi");

        secondaryCpuAbiString#10 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "secondaryCpuAbi");

        cpuAbiOverrideString#29 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cpuAbiOverride");

        if primaryCpuAbiString#9 != null goto label02;

        if legacyCpuAbiString#28 == null goto label02;

        primaryCpuAbiString#9 = legacyCpuAbiString#28;

     label02:
        version#30 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        if version#30 == null goto label06;

     label03:
        versionCode#23 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(version#30);

     label04:
        goto label06;

     label05:
        $r94 := @caughtexception;

     label06:
        installerPackageName#13 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installer");

        volumeUuid#14 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "volumeUuid");

        systemStr#32 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "publicFlags");

        if systemStr#32 == null goto label14;

     label07:
        pkgFlags#16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(systemStr#32);

     label08:
        goto label10;

     label09:
        $r78 := @caughtexception;

     label10:
        systemStr#34 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "privateFlags");

        if systemStr#34 == null goto label27;

     label11:
        pkgPrivateFlags#17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(systemStr#34);

     label12:
        goto label27;

     label13:
        $r81 := @caughtexception;

        goto label27;

     label14:
        systemStr#36 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "flags");

        if systemStr#36 == null goto label23;

     label15:
        pkgFlags#16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(systemStr#36);

     label16:
        goto label18;

     label17:
        $r96 := @caughtexception;

     label18:
        $i9 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_HIDDEN>;

        $i7 = pkgFlags#16 & $i9;

        if $i7 == 0 goto label19;

        pkgPrivateFlags#17 = 1;

     label19:
        $i8 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE>;

        $i12 = pkgFlags#16 & $i8;

        if $i12 == 0 goto label20;

        pkgPrivateFlags#17 = pkgPrivateFlags#17 | 2;

     label20:
        $i13 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_FORWARD_LOCK>;

        $i10 = pkgFlags#16 & $i13;

        if $i10 == 0 goto label21;

        pkgPrivateFlags#17 = pkgPrivateFlags#17 | 4;

     label21:
        $i11 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_PRIVILEGED>;

        $i20 = pkgFlags#16 & $i11;

        if $i20 == 0 goto label22;

        pkgPrivateFlags#17 = pkgPrivateFlags#17 | 8;

     label22:
        $i22 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_HIDDEN>;

        $i19 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE>;

        $i16 = $i22 | $i19;

        $i21 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_FORWARD_LOCK>;

        $i18 = $i16 | $i21;

        $i15 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_PRIVILEGED>;

        $i17 = $i18 | $i15;

        $i14 = $i17 ^ -1;

        pkgFlags#16 = pkgFlags#16 & $i14;

        goto label27;

     label23:
        systemStr#38 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

        if systemStr#38 == null goto label26;

        $r77 = "true";

        $z11 = virtualinvoke $r77.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(systemStr#38);

        if $z11 == 0 goto label24;

        $b23 = 1;

        goto label25;

     label24:
        $b23 = 0;

     label25:
        pkgFlags#16 = 0 | $b23;

        goto label27;

     label26:
        pkgFlags#16 = 1;

     label27:
        timeStampStr#40 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ft");

        if timeStampStr#40 == null goto label31;

     label28:
        timeStamp#18 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(timeStampStr#40, 16);

     label29:
        goto label35;

     label30:
        $r86 := @caughtexception;

        goto label35;

     label31:
        timeStampStr#42 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

        if timeStampStr#42 == null goto label35;

     label32:
        timeStamp#18 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(timeStampStr#42);

     label33:
        goto label35;

     label34:
        $r84 := @caughtexception;

     label35:
        timeStampStr#44 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "it");

        if timeStampStr#44 == null goto label39;

     label36:
        firstInstallTime#19 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(timeStampStr#44, 16);

     label37:
        goto label39;

     label38:
        $r95 := @caughtexception;

     label39:
        timeStampStr#46 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ut");

        if timeStampStr#46 == null goto label43;

     label40:
        lastUpdateTime#20 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(timeStampStr#46, 16);

     label41:
        goto label43;

     label42:
        $r85 := @caughtexception;

     label43:
        if idStr#3 == null goto label44;

        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(idStr#3);

        goto label45;

     label44:
        $i24 = 0;

     label45:
        userId#49 = $i24;

        if resourcePathStr#27 != null goto label46;

        resourcePathStr#27 = codePathStr#26;

     label46:
        if realName#24 == null goto label47;

        realName#24 = virtualinvoke realName#24.<java.lang.String: java.lang.String intern()>();

     label47:
        if name#1 != null goto label48;

        tmp$450518212 = new java.lang.StringBuilder;

        specialinvoke tmp$450518212.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke tmp$450518212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no name at ");

        $r69 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r68 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r67);

        goto label56;

     label48:
        if codePathStr#26 != null goto label49;

        tmp$267778445 = new java.lang.StringBuilder;

        specialinvoke tmp$267778445.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke tmp$267778445.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no codePath at ");

        $r75 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r74 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r66 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r66);

        goto label56;

     label49:
        if userId#49 <= 0 goto label51;

        $r63 = virtualinvoke name#1.<java.lang.String: java.lang.String intern()>();

        tmp$789665157 = new java.io.File;

        specialinvoke tmp$789665157.<java.io.File: void <init>(java.lang.String)>(codePathStr#26);

        tmp$269522317 = new java.io.File;

        specialinvoke tmp$269522317.<java.io.File: void <init>(java.lang.String)>(resourcePathStr#27);

        packageSetting#21 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int)>($r63, realName#24, tmp$789665157, tmp$269522317, legacyNativeLibraryPathStr#8, primaryCpuAbiString#9, secondaryCpuAbiString#10, cpuAbiOverrideString#29, userId#49, versionCode#23, pkgFlags#16, pkgPrivateFlags#17);

        if packageSetting#21 != null goto label50;

        tmp$930722190 = new java.lang.StringBuilder;

        specialinvoke tmp$930722190.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke tmp$930722190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure adding uid ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(userId#49);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while parsing settings at ");

        $r73 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r72 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r71);

        goto label56;

     label50:
        tmp$323992862 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        virtualinvoke tmp$323992862.<com.android.server.pm.PackageSettingBase: void setTimeStamp(long)>(timeStamp#18);

        tmp$948444950 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$948444950.<com.android.server.pm.PackageSettingBase: long firstInstallTime> = firstInstallTime#19;

        tmp$1929634100 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$1929634100.<com.android.server.pm.PackageSettingBase: long lastUpdateTime> = lastUpdateTime#20;

        goto label56;

     label51:
        if sharedIdStr#25 == null goto label55;

        if sharedIdStr#25 == null goto label52;

        $i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(sharedIdStr#25);

        goto label53;

     label52:
        $i25 = 0;

     label53:
        userId#51 = $i25;

        if userId#51 <= 0 goto label54;

        tmp$901724749 = new com.android.server.pm.PendingPackage;

        $r58 = virtualinvoke name#1.<java.lang.String: java.lang.String intern()>();

        tmp$533357024 = new java.io.File;

        specialinvoke tmp$533357024.<java.io.File: void <init>(java.lang.String)>(codePathStr#26);

        tmp$488727835 = new java.io.File;

        specialinvoke tmp$488727835.<java.io.File: void <init>(java.lang.String)>(resourcePathStr#27);

        specialinvoke tmp$901724749.<com.android.server.pm.PendingPackage: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int)>($r58, realName#24, tmp$533357024, tmp$488727835, legacyNativeLibraryPathStr#8, primaryCpuAbiString#9, secondaryCpuAbiString#10, cpuAbiOverrideString#29, userId#51, versionCode#23, pkgFlags#16, pkgPrivateFlags#17);

        packageSetting#21 = tmp$901724749;

        tmp$944096653 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        virtualinvoke tmp$944096653.<com.android.server.pm.PackageSettingBase: void setTimeStamp(long)>(timeStamp#18);

        tmp$1135989502 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$1135989502.<com.android.server.pm.PackageSettingBase: long firstInstallTime> = firstInstallTime#19;

        tmp$959789736 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$959789736.<com.android.server.pm.PackageSettingBase: long lastUpdateTime> = lastUpdateTime#20;

        $r62 = this.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        $r61 = (com.android.server.pm.PendingPackage) packageSetting#21;

        virtualinvoke $r62.<java.util.ArrayList: boolean add(java.lang.Object)>($r61);

        goto label56;

     label54:
        tmp$2141925435 = new java.lang.StringBuilder;

        specialinvoke tmp$2141925435.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke tmp$2141925435.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r41 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad sharedId ");

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sharedIdStr#25);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r45 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r47);

        goto label56;

     label55:
        tmp$187881617 = new java.lang.StringBuilder;

        specialinvoke tmp$187881617.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke tmp$187881617.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(idStr#3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r8 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r4);

     label56:
        goto label58;

     label57:
        $r80 := @caughtexception;

        tmp$714986429 = new java.lang.StringBuilder;

        specialinvoke tmp$714986429.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke tmp$714986429.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r87 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(idStr#3);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r89 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r83 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r83);

     label58:
        if packageSetting#21 == null goto label88;

        $r5 = "true";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(uidError#15);

        tmp$2052894418 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$2052894418.<com.android.server.pm.PackageSettingBase: boolean uidError> = $z0;

        tmp$75532505 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$75532505.<com.android.server.pm.PackageSettingBase: java.lang.String installerPackageName> = installerPackageName#13;

        tmp$1375705179 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$1375705179.<com.android.server.pm.PackageSettingBase: java.lang.String volumeUuid> = volumeUuid#14;

        tmp$821967819 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$821967819.<com.android.server.pm.PackageSettingBase: java.lang.String legacyNativeLibraryPathString> = legacyNativeLibraryPathStr#8;

        tmp$1795559215 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$1795559215.<com.android.server.pm.PackageSettingBase: java.lang.String primaryCpuAbiString> = primaryCpuAbiString#9;

        tmp$1333973646 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$1333973646.<com.android.server.pm.PackageSettingBase: java.lang.String secondaryCpuAbiString> = secondaryCpuAbiString#10;

        timeStampStr#53 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabled");

        if timeStampStr#53 == null goto label66;

     label59:
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(timeStampStr#53);

        tmp$1795543380 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        virtualinvoke tmp$1795543380.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>($i6, 0, null);

     label60:
        goto label67;

     label61:
        $r82 := @caughtexception;

        $z12 = virtualinvoke timeStampStr#53.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z12 == 0 goto label62;

        tmp$1546842432 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        virtualinvoke tmp$1546842432.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(1, 0, null);

        goto label65;

     label62:
        $z13 = virtualinvoke timeStampStr#53.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z13 == 0 goto label63;

        tmp$238963464 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        virtualinvoke tmp$238963464.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(2, 0, null);

        goto label65;

     label63:
        $z14 = virtualinvoke timeStampStr#53.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("default");

        if $z14 == 0 goto label64;

        tmp$1077154461 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        virtualinvoke tmp$1077154461.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(0, 0, null);

        goto label65;

     label64:
        tmp$908473570 = new java.lang.StringBuilder;

        specialinvoke tmp$908473570.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke tmp$908473570.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad enabled value: ");

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(idStr#3);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r99 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r98 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r97);

     label65:
        goto label67;

     label66:
        tmp$619515584 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        virtualinvoke tmp$619515584.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(0, 0, null);

     label67:
        userId#55 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installStatus");

        if userId#55 == null goto label69;

        $z10 = virtualinvoke userId#55.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z10 == 0 goto label68;

        tmp$1373491693 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$1373491693.<com.android.server.pm.PackageSettingBase: int installStatus> = 0;

        goto label69;

     label68:
        tmp$709169384 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$709169384.<com.android.server.pm.PackageSettingBase: int installStatus> = 1;

     label69:
        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label70:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label87;

        if type != 3 goto label71;

        $i5 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= outerDepth goto label87;

     label71:
        if type == 3 goto label70;

        if type != 4 goto label72;

        goto label70;

     label72:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("disabled-components");

        if $z1 == 0 goto label73;

        tmp$408476532 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        specialinvoke this.<com.android.server.pm.Settings: void readDisabledComponentsLPw(com.android.server.pm.PackageSettingBase,org.xmlpull.v1.XmlPullParser,int)>(tmp$408476532, parser, 0);

        goto label86;

     label73:
        $z2 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("enabled-components");

        if $z2 == 0 goto label74;

        tmp$1133165415 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        specialinvoke this.<com.android.server.pm.Settings: void readEnabledComponentsLPw(com.android.server.pm.PackageSettingBase,org.xmlpull.v1.XmlPullParser,int)>(tmp$1133165415, parser, 0);

        goto label86;

     label74:
        $z3 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z3 == 0 goto label75;

        tmp$621552751 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        $r48 = tmp$621552751.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageSignatures signatures>;

        $r49 = this.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r48.<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(parser, $r49);

        goto label86;

     label75:
        $z4 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z4 == 0 goto label76;

        tmp$173602921 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        $r35 = virtualinvoke tmp$173602921.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PermissionsState getPermissionsState()>();

        virtualinvoke this.<com.android.server.pm.Settings: void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PermissionsState)>(parser, $r35);

        tmp$522982761 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        tmp$522982761.<com.android.server.pm.PackageSettingBase: boolean installPermissionsFixed> = 1;

        goto label86;

     label76:
        $z7 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("proper-signing-keyset");

        if $z7 == 0 goto label79;

        $r26 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        id#56 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r26);

        $r34 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(id#56);

        $r32 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r33);

        refCt#57 = (java.lang.Integer) $r32;

        if refCt#57 == null goto label77;

        $r38 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(id#56);

        $i4 = virtualinvoke refCt#57.<java.lang.Integer: int intValue()>();

        $i3 = $i4 + 1;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, $r36);

        goto label78;

     label77:
        $r31 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(id#56);

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r29);

     label78:
        tmp$1329176724 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        $r39 = tmp$1329176724.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r39.<com.android.server.pm.PackageKeySetData: void setProperSigningKeySet(long)>(id#56);

        goto label86;

     label79:
        $z6 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("signing-keyset");

        if $z6 == 0 goto label80;

        goto label86;

     label80:
        $z9 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("upgrade-keyset");

        if $z9 == 0 goto label81;

        $r27 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        id#58 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r27);

        tmp$700809274 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        $r25 = tmp$700809274.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r25.<com.android.server.pm.PackageKeySetData: void addUpgradeKeySetById(long)>(id#58);

        goto label86;

     label81:
        $z8 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("defined-keyset");

        if $z8 == 0 goto label84;

        $r16 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        id#59 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r16);

        refCt#60 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "alias");

        $r13 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(id#59);

        $r23 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r12);

        refCt = (java.lang.Integer) $r23;

        if refCt == null goto label82;

        $r18 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(id#59);

        $i1 = virtualinvoke refCt.<java.lang.Integer: int intValue()>();

        $i2 = $i1 + 1;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r28);

        goto label83;

     label82:
        $r24 = this.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(id#59);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

     label83:
        tmp$1744139279 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        $r20 = tmp$1744139279.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r20.<com.android.server.pm.PackageKeySetData: void addDefinedKeySet(long,java.lang.String)>(id#59, refCt#60);

        goto label86;

     label84:
        $z5 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("domain-verification");

        if $z5 == 0 goto label85;

        tmp$2090095837 = (com.android.server.pm.PackageSettingBase) packageSetting#21;

        specialinvoke this.<com.android.server.pm.Settings: void readDomainVerificationLPw(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PackageSettingBase)>(parser, tmp$2090095837);

        goto label86;

     label85:
        tmp$2113823789 = new java.lang.StringBuilder;

        specialinvoke tmp$2113823789.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke tmp$2113823789.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <package>: ");

        $r15 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r17);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label86:
        goto label70;

     label87:
        goto label89;

     label88:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label89:
        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label11 to label12 with label13;
        catch java.lang.NumberFormatException from label15 to label16 with label17;
        catch java.lang.NumberFormatException from label28 to label29 with label30;
        catch java.lang.NumberFormatException from label32 to label33 with label34;
        catch java.lang.NumberFormatException from label36 to label37 with label38;
        catch java.lang.NumberFormatException from label40 to label41 with label42;
        catch java.lang.NumberFormatException from label01 to label56 with label57;
        catch java.lang.NumberFormatException from label59 to label60 with label61;
    }

    private void readDisabledComponentsLPw(com.android.server.pm.PackageSettingBase, org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageSettingBase packageSetting;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, name, $r2, $r3, $r8, $r9, $r10;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7;

        this := @this: com.android.server.pm.Settings;

        packageSetting := @parameter0: com.android.server.pm.PackageSettingBase;

        parser := @parameter1: org.xmlpull.v1.XmlPullParser;

        userId := @parameter2: int;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label8;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label8;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        name = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if name == null goto label4;

        $r9 = virtualinvoke name.<java.lang.String: java.lang.String intern()>();

        virtualinvoke packageSetting.<com.android.server.pm.PackageSettingBase: void addDisabledComponent(java.lang.String,int)>($r9, userId);

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <disabled-components> has no name at ");

        $r8 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r10);

     label5:
        goto label7;

     label6:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <disabled-components>: ");

        $r2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r3);

     label7:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

        goto label1;

     label8:
        return;
    }

    private void readEnabledComponentsLPw(com.android.server.pm.PackageSettingBase, org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageSettingBase packageSetting;
        org.xmlpull.v1.XmlPullParser parser;
        int userId, outerDepth, type, $i0, $i1;
        java.lang.String tagName, name, $r2, $r3, $r8, $r9, $r10;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7;

        this := @this: com.android.server.pm.Settings;

        packageSetting := @parameter0: com.android.server.pm.PackageSettingBase;

        parser := @parameter1: org.xmlpull.v1.XmlPullParser;

        userId := @parameter2: int;

        outerDepth = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label8;

        if type != 3 goto label2;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= outerDepth goto label8;

     label2:
        if type == 3 goto label1;

        if type != 4 goto label3;

        goto label1;

     label3:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        name = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if name == null goto label4;

        $r9 = virtualinvoke name.<java.lang.String: java.lang.String intern()>();

        virtualinvoke packageSetting.<com.android.server.pm.PackageSettingBase: void addEnabledComponent(java.lang.String,int)>($r9, userId);

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <enabled-components> has no name at ");

        $r8 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r10);

     label5:
        goto label7;

     label6:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <enabled-components>: ");

        $r2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r3);

     label7:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

        goto label1;

     label8:
        return;
    }

    private void readSharedUserLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings this;
        org.xmlpull.v1.XmlPullParser parser;
        byte pkgPrivateFlags, pkgFlags#3;
        int type, $i0, $i1, $i2, userId#6, userId#8;
        java.lang.String tagName, $r0, $r1, $r2, $r5, $r7, $r13, $r17, $r23, $r25, $r26, $r30, $r35, $r40, name#1, idStr#2;
        boolean $z0, $z1, $z2;
        com.android.server.pm.SharedUserSetting $r3, su#4;
        java.lang.StringBuilder $r4, $r6, $r8, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r27, $r28, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39;
        java.util.ArrayList $r9;
        com.android.server.pm.PermissionsState $r10;
        com.android.server.pm.PackageSignatures $r11;
        java.lang.NumberFormatException $r29, userId#7;

        this := @this: com.android.server.pm.Settings;

        parser := @parameter0: org.xmlpull.v1.XmlPullParser;

        name#1 = null;

        idStr#2 = null;

        pkgFlags#3 = 0;

        pkgPrivateFlags = 0;

        su#4 = null;

     label01:
        name#1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        idStr#2 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        if idStr#2 == null goto label02;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(idStr#2);

        goto label03;

     label02:
        $i2 = 0;

     label03:
        userId#6 = $i2;

        $r0 = "true";

        $r1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label04;

        pkgFlags#3 = pkgFlags#3 | 1;

     label04:
        if name#1 != null goto label05;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <shared-user> has no name at ");

        $r26 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r30);

        goto label07;

     label05:
        if userId#6 != 0 goto label06;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: shared-user ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(idStr#2);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r25 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r23);

        goto label07;

     label06:
        $r2 = virtualinvoke name#1.<java.lang.String: java.lang.String intern()>();

        $r3 = virtualinvoke this.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int,int)>($r2, userId#6, pkgFlags#3, pkgPrivateFlags);

        su#4 = $r3;

        if $r3 != null goto label07;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Occurred while parsing settings at ");

        $r13 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r17);

     label07:
        goto label09;

     label08:
        $r29 := @caughtexception;

        userId#7 = $r29;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name#1);

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(idStr#2);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r35 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r40);

     label09:
        if su#4 == null goto label17;

        userId#8 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label10:
        $i0 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int next()>();

        type = $i0;

        if $i0 == 1 goto label16;

        if type != 3 goto label11;

        $i1 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= userId#8 goto label16;

     label11:
        if type == 3 goto label10;

        if type != 4 goto label12;

        goto label10;

     label12:
        tagName = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z2 == 0 goto label13;

        $r11 = su#4.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r9 = this.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r11.<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(parser, $r9);

        goto label15;

     label13:
        $z1 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z1 == 0 goto label14;

        $r10 = virtualinvoke su#4.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        virtualinvoke this.<com.android.server.pm.Settings: void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PermissionsState)>(parser, $r10);

        goto label15;

     label14:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <shared-user>: ");

        $r5 = interfaceinvoke parser.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r7);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label15:
        goto label10;

     label16:
        goto label18;

     label17:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(parser);

     label18:
        return;

        catch java.lang.NumberFormatException from label01 to label07 with label08;
    }

    void createNewUserLILPw(com.android.server.pm.PackageManagerService, com.android.server.pm.Installer, int)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageManagerService service;
        com.android.server.pm.Installer installer;
        int userHandle, $i0, $i1, $i2, $i3;
        java.util.Iterator i$;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r0;
        java.util.Collection $r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        android.content.pm.PackageParser$Package $r3, $r4, $r9;
        android.content.pm.ApplicationInfo $r5, $r8;
        java.lang.String $r6, $r7, $r10;

        this := @this: com.android.server.pm.Settings;

        service := @parameter0: com.android.server.pm.PackageManagerService;

        installer := @parameter1: com.android.server.pm.Installer;

        userHandle := @parameter2: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.util.Collection values()>();

        i$ = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        ps = (com.android.server.pm.PackageSetting) $r2;

        $r3 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r3 == null goto label1;

        $r4 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r5 = $r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r5 != null goto label2;

        goto label1;

     label2:
        $i0 = ps.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        virtualinvoke ps.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z1, userHandle);

        $r6 = ps.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        $r7 = ps.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $i2 = ps.<com.android.server.pm.PackageSetting: int appId>;

        $i3 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(userHandle, $i2);

        $r9 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = $r9.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r8.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        virtualinvoke installer.<com.android.server.pm.Installer: int createUserData(java.lang.String,java.lang.String,int,int,java.lang.String)>($r6, $r7, $i3, userHandle, $r10);

        goto label1;

     label5:
        virtualinvoke this.<com.android.server.pm.Settings: void applyDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService,int)>(service, userHandle);

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(userHandle);

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageListLPr(int)>(userHandle);

        return;
    }

    void removeUserLPw(int)
    {
        com.android.server.pm.Settings this;
        int userId;
        java.util.Set entries;
        java.util.Map$Entry entry;
        android.util.ArrayMap $r0;
        boolean $z0;
        android.util.SparseArray $r1;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r2;
        java.lang.Object $r3, $r5;
        com.android.server.pm.PackageSetting $r4;
        java.util.Iterator i$#1;
        java.io.File i$#2, i$#3;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        entries = virtualinvoke $r0.<android.util.ArrayMap: java.util.Set entrySet()>();

        i$#1 = interfaceinvoke entries.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$#1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke i$#1.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (com.android.server.pm.PackageSetting) $r5;

        virtualinvoke $r4.<com.android.server.pm.PackageSetting: void removeUser(int)>(userId);

        goto label1;

     label2:
        $r1 = this.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(userId);

        i$#2 = specialinvoke this.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(userId);

        virtualinvoke i$#2.<java.io.File: boolean delete()>();

        i$#3 = specialinvoke this.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(userId);

        virtualinvoke i$#3.<java.io.File: boolean delete()>();

        virtualinvoke this.<com.android.server.pm.Settings: void removeCrossProfileIntentFiltersLPw(int)>(userId);

        $r2 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        staticinvoke <com.android.server.pm.Settings$RuntimePermissionPersistence: void access$000(com.android.server.pm.Settings$RuntimePermissionPersistence,int)>($r2, userId);

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageListLPr()>();

        return;
    }

    void removeCrossProfileIntentFiltersLPw(int)
    {
        com.android.server.pm.Settings this;
        int userId, count, sourceUserId, $i0, i#1;
        android.util.SparseArray l2, $r0, $r1, $r3, $r4, $r6, $r11;
        com.android.server.pm.CrossProfileIntentResolver cpir;
        android.util.ArraySet cpifs, tmp$1632632355;
        java.util.Iterator i$;
        com.android.server.pm.CrossProfileIntentFilter cpif;
        java.lang.Throwable l11, $r10;
        java.lang.Object $r2, $r5, $r9;
        java.util.Set $r7;
        boolean $z0, needsWriting#2;
        android.content.IntentFilter tmp$1343918603;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        l2 = $r0;

        entermonitor $r0;

     label01:
        $r1 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(userId);

        if $r2 == null goto label02;

        $r11 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>(userId);

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(userId);

     label02:
        $r3 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        count = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i#1 = 0;

     label03:
        if i#1 >= count goto label08;

        $r4 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        sourceUserId = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i#1);

        $r6 = this.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r5 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(sourceUserId);

        cpir = (com.android.server.pm.CrossProfileIntentResolver) $r5;

        needsWriting#2 = 0;

        tmp$1632632355 = new android.util.ArraySet;

        $r7 = virtualinvoke cpir.<com.android.server.pm.CrossProfileIntentResolver: java.util.Set filterSet()>();

        specialinvoke tmp$1632632355.<android.util.ArraySet: void <init>(java.util.Collection)>($r7);

        cpifs = tmp$1632632355;

        i$ = virtualinvoke cpifs.<android.util.ArraySet: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r9 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        cpif = (com.android.server.pm.CrossProfileIntentFilter) $r9;

        $i0 = virtualinvoke cpif.<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>();

        if $i0 != userId goto label05;

        needsWriting#2 = 1;

        tmp$1343918603 = (android.content.IntentFilter) cpif;

        virtualinvoke cpir.<com.android.server.pm.CrossProfileIntentResolver: void removeFilter(android.content.IntentFilter)>(tmp$1343918603);

     label05:
        goto label04;

     label06:
        if needsWriting#2 == 0 goto label07;

        virtualinvoke this.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(sourceUserId);

     label07:
        i#1 = i#1 + 1;

        goto label03;

     label08:
        exitmonitor l2;

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        l11 = $r10;

        exitmonitor l2;

     label11:
        throw l11;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void setFirstAvailableUid(int)
    {
        com.android.server.pm.Settings this;
        int uid, $i0;

        this := @this: com.android.server.pm.Settings;

        uid := @parameter0: int;

        $i0 = <com.android.server.pm.Settings: int mFirstAvailableUid>;

        if uid <= $i0 goto label1;

        <com.android.server.pm.Settings: int mFirstAvailableUid> = uid;

     label1:
        return;
    }

    private int newUserIdLPw(java.lang.Object)
    {
        com.android.server.pm.Settings this;
        java.lang.Object obj, $r3;
        int N, $i0, $i1, i#1;
        java.util.ArrayList $r0, $r1, $r2, $r4;

        this := @this: com.android.server.pm.Settings;

        obj := @parameter0: java.lang.Object;

        $r0 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        N = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        i#1 = <com.android.server.pm.Settings: int mFirstAvailableUid>;

     label1:
        if i#1 >= N goto label3;

        $r2 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i#1);

        if $r3 != null goto label2;

        $r4 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i#1, obj);

        $i1 = 10000 + i#1;

        return $i1;

     label2:
        i#1 = i#1 + 1;

        goto label1;

     label3:
        if N <= 9999 goto label4;

        return -1;

     label4:
        $r1 = this.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(obj);

        $i0 = 10000 + N;

        return $i0;
    }

    public android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()
    {
        com.android.server.pm.Settings this;
        android.content.pm.VerifierDeviceIdentity $r0, $r1, $r2;

        this := @this: com.android.server.pm.Settings;

        $r0 = this.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity generate()>();

        this.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity> = $r2;

        virtualinvoke this.<com.android.server.pm.Settings: void writeLPr()>();

     label1:
        $r1 = this.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        return $r1;
    }

    public com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String name;
        com.android.server.pm.PackageSetting ps;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;

        this := @this: com.android.server.pm.Settings;

        name := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(name);

        ps = (com.android.server.pm.PackageSetting) $r1;

        return ps;
    }

    private java.lang.String compToString(android.util.ArraySet)
    {
        com.android.server.pm.Settings this;
        android.util.ArraySet 'cmp';
        java.lang.Object[] $r0;
        java.lang.String $r1;

        this := @this: com.android.server.pm.Settings;

        'cmp' := @parameter0: android.util.ArraySet;

        if 'cmp' == null goto label1;

        $r0 = virtualinvoke 'cmp'.<android.util.ArraySet: java.lang.Object[] toArray()>();

        $r1 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r0);

        goto label2;

     label1:
        $r1 = "[]";

     label2:
        return $r1;
    }

    boolean isEnabledLPr(android.content.pm.ComponentInfo, int, int)
    {
        com.android.server.pm.Settings this;
        android.content.pm.ComponentInfo componentInfo;
        int flags, userId, $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String pkgName, $r5, $r8;
        com.android.server.pm.PackageSetting packageSettings;
        android.content.pm.PackageUserState ustate;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        android.content.pm.PackageParser$Package $r2, $r9;
        android.util.ArraySet $r3, $r4, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        android.content.pm.ApplicationInfo $r10;

        this := @this: com.android.server.pm.Settings;

        componentInfo := @parameter0: android.content.pm.ComponentInfo;

        flags := @parameter1: int;

        userId := @parameter2: int;

        $i0 = flags & 512;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        pkgName = componentInfo.<android.content.pm.ComponentInfo: java.lang.String packageName>;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(pkgName);

        packageSettings = (com.android.server.pm.PackageSetting) $r1;

        if packageSettings != null goto label2;

        return 0;

     label2:
        ustate = virtualinvoke packageSettings.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(userId);

        $i1 = flags & 32768;

        if $i1 == 0 goto label3;

        $i5 = ustate.<android.content.pm.PackageUserState: int enabled>;

        if $i5 != 4 goto label3;

        return 1;

     label3:
        $i2 = ustate.<android.content.pm.PackageUserState: int enabled>;

        if $i2 == 2 goto label4;

        $i3 = ustate.<android.content.pm.PackageUserState: int enabled>;

        if $i3 == 3 goto label4;

        $i4 = ustate.<android.content.pm.PackageUserState: int enabled>;

        if $i4 == 4 goto label4;

        $r2 = packageSettings.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r2 == null goto label5;

        $r9 = packageSettings.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r10 = $r9.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z3 = $r10.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z3 != 0 goto label5;

        $i6 = ustate.<android.content.pm.PackageUserState: int enabled>;

        if $i6 != 0 goto label5;

     label4:
        return 0;

     label5:
        $r4 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        if $r4 == null goto label6;

        $r7 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        $r8 = componentInfo.<android.content.pm.ComponentInfo: java.lang.String name>;

        $z2 = virtualinvoke $r7.<android.util.ArraySet: boolean contains(java.lang.Object)>($r8);

        if $z2 == 0 goto label6;

        return 1;

     label6:
        $r3 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        if $r3 == null goto label7;

        $r6 = ustate.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        $r5 = componentInfo.<android.content.pm.ComponentInfo: java.lang.String name>;

        $z1 = virtualinvoke $r6.<android.util.ArraySet: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label7;

        return 0;

     label7:
        $z0 = componentInfo.<android.content.pm.ComponentInfo: boolean enabled>;

        return $z0;
    }

    java.lang.String getInstallerPackageNameLPr(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName, $r2, $r7;
        com.android.server.pm.PackageSetting pkg;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        pkg = (com.android.server.pm.PackageSetting) $r1;

        if pkg != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(packageName);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r2 = pkg.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        return $r2;
    }

    int getApplicationEnabledSettingLPr(java.lang.String, int)
    {
        com.android.server.pm.Settings this;
        java.lang.String packageName, $r6;
        int userId, $i0;
        com.android.server.pm.PackageSetting pkg;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        this := @this: com.android.server.pm.Settings;

        packageName := @parameter0: java.lang.String;

        userId := @parameter1: int;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        pkg = (com.android.server.pm.PackageSetting) $r1;

        if pkg != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(packageName);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        $i0 = virtualinvoke pkg.<com.android.server.pm.PackageSetting: int getEnabled(int)>(userId);

        return $i0;
    }

    int getComponentEnabledSettingLPr(android.content.ComponentName, int)
    {
        com.android.server.pm.Settings this;
        android.content.ComponentName componentName;
        int userId, $i0;
        java.lang.String packageName, classNameStr, $r6;
        com.android.server.pm.PackageSetting pkg;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        this := @this: com.android.server.pm.Settings;

        componentName := @parameter0: android.content.ComponentName;

        userId := @parameter1: int;

        packageName = virtualinvoke componentName.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        pkg = (com.android.server.pm.PackageSetting) $r1;

        if pkg != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown component: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(componentName);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        classNameStr = virtualinvoke componentName.<android.content.ComponentName: java.lang.String getClassName()>();

        $i0 = virtualinvoke pkg.<com.android.server.pm.PackageSetting: int getCurrentEnabledStateLPr(java.lang.String,int)>(classNameStr, userId);

        return $i0;
    }

    boolean setPackageStoppedStateLPw(com.android.server.pm.PackageManagerService, java.lang.String, boolean, boolean, int, int)
    {
        com.android.server.pm.Settings this;
        com.android.server.pm.PackageManagerService yucky;
        java.lang.String packageName, $r2, $r4, $r5, $r13, $r17;
        boolean stopped, allowedByPermission, $z0, $z1;
        int uid, userId, appId, $i0, $i1, $i2;
        com.android.server.pm.PackageSetting pkgSetting;
        android.util.ArrayMap $r0;
        java.lang.Object $r1;
        int[] $r3;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r18, $r19;
        java.lang.IllegalArgumentException $r16;

        this := @this: com.android.server.pm.Settings;

        yucky := @parameter0: com.android.server.pm.PackageManagerService;

        packageName := @parameter1: java.lang.String;

        stopped := @parameter2: boolean;

        allowedByPermission := @parameter3: boolean;

        uid := @parameter4: int;

        userId := @parameter5: int;

        appId = staticinvoke <android.os.UserHandle: int getAppId(int)>(uid);

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(packageName);

        pkgSetting = (com.android.server.pm.PackageSetting) $r1;

        if pkgSetting != null goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(packageName);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label1:
        if allowedByPermission != 0 goto label2;

        $i0 = pkgSetting.<com.android.server.pm.PackageSetting: int appId>;

        if appId == $i0 goto label2;

        $r6 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: attempt to change stopped state from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(uid);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", package uid=");

        $i2 = pkgSetting.<com.android.server.pm.PackageSetting: int appId>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label2:
        $z0 = virtualinvoke pkgSetting.<com.android.server.pm.PackageSetting: boolean getStopped(int)>(userId);

        if $z0 == stopped goto label5;

        virtualinvoke pkgSetting.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(stopped, userId);

        $z1 = virtualinvoke pkgSetting.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>(userId);

        if $z1 == 0 goto label4;

        $r2 = pkgSetting.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r2 == null goto label3;

        $r4 = pkgSetting.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r5 = pkgSetting.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        $r3 = newarray (int)[1];

        $r3[0] = userId;

        virtualinvoke yucky.<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_FIRST_LAUNCH", $r4, null, $r5, null, $r3);

     label3:
        virtualinvoke pkgSetting.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(0, userId);

     label4:
        return 1;

     label5:
        return 0;
    }

    java.util.List getAllUsers()
    {
        com.android.server.pm.Settings this;
        long id;
        java.lang.Throwable l4, $r1;
        com.android.server.pm.UserManagerService $r0;
        java.lang.NullPointerException $r2, l3#2;
        java.util.List l3#1;

        this := @this: com.android.server.pm.Settings;

        id = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r0 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        l3#1 = virtualinvoke $r0.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(id);

        return l3#1;

     label3:
        $r2 := @caughtexception;

        l3#2 = $r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(id);

        goto label7;

     label5:
        $r1 := @caughtexception;

        l4 = $r1;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(id);

        throw l4;

     label7:
        return null;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    java.util.List getVolumePackagesLPr(java.lang.String)
    {
        com.android.server.pm.Settings this;
        java.lang.String volumeUuid, $r5;
        java.util.ArrayList res, tmp$1739181153;
        com.android.server.pm.PackageSetting setting;
        android.util.ArrayMap $r2, $r3;
        int $i0, i#1;
        java.lang.Object $r4;
        boolean $z0;
        java.util.List tmp$1005225024;

        this := @this: com.android.server.pm.Settings;

        volumeUuid := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(volumeUuid);

        tmp$1739181153 = new java.util.ArrayList;

        specialinvoke tmp$1739181153.<java.util.ArrayList: void <init>()>();

        res = tmp$1739181153;

        i#1 = 0;

     label1:
        $r2 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        if i#1 >= $i0 goto label3;

        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i#1);

        setting = (com.android.server.pm.PackageSetting) $r4;

        $r5 = setting.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(volumeUuid, $r5);

        if $z0 == 0 goto label2;

        virtualinvoke res.<java.util.ArrayList: boolean add(java.lang.Object)>(setting);

     label2:
        i#1 = i#1 + 1;

        goto label1;

     label3:
        tmp$1005225024 = (java.util.List) res;

        return tmp$1005225024;
    }

    static void printFlags(java.io.PrintWriter, int, java.lang.Object[])
    {
        java.io.PrintWriter pw;
        int val, mask, $i0, $i1, $i2, i#1;
        java.lang.Object[] spec;
        java.lang.Object $r0, $r2;
        java.lang.Integer $r1;

        pw := @parameter0: java.io.PrintWriter;

        val := @parameter1: int;

        spec := @parameter2: java.lang.Object[];

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("[ ");

        i#1 = 0;

     label1:
        $i0 = lengthof spec;

        if i#1 >= $i0 goto label3;

        $r0 = spec[i#1];

        $r1 = (java.lang.Integer) $r0;

        mask = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $i1 = val & mask;

        if $i1 == 0 goto label2;

        $i2 = i#1 + 1;

        $r2 = spec[$i2];

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.Object)>($r2);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" ");

     label2:
        i#1 = i#1 + 2;

        goto label1;

     label3:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("]");

        return;
    }

    void dumpVersionLPr(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.pm.Settings this;
        com.android.internal.util.IndentingPrintWriter pw;
        java.lang.String volumeUuid, $r5, $r10, $r12;
        com.android.server.pm.Settings$VersionInfo ver;
        android.util.ArrayMap $r0, $r1, $r3;
        int $i0, $i1, $i2, i#1;
        java.lang.Object $r2, $r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.Integer $r11, $r13;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        i#1 = 0;

     label1:
        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $i0 = virtualinvoke $r0.<android.util.ArrayMap: int size()>();

        if i#1 >= $i0 goto label5;

        $r1 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i#1);

        volumeUuid = (java.lang.String) $r2;

        $r3 = this.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i#1);

        ver = (com.android.server.pm.Settings$VersionInfo) $r4;

        $r5 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, volumeUuid);

        if $z0 == 0 goto label2;

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Internal:");

        goto label4;

     label2:
        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>("primary_physical", volumeUuid);

        if $z1 == 0 goto label3;

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("External:");

        goto label4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UUID ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(volumeUuid);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r10);

     label4:
        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $i1 = ver.<com.android.server.pm.Settings$VersionInfo: int sdkVersion>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("sdkVersion", $r11);

        $i2 = ver.<com.android.server.pm.Settings$VersionInfo: int databaseVersion>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("databaseVersion", $r13);

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r12 = ver.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint>;

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("fingerprint", $r12);

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        i#1 = i#1 + 1;

        goto label1;

     label5:
        virtualinvoke pw.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        return;
    }

    void dumpPackageLPr(java.io.PrintWriter, java.lang.String, java.lang.String, android.util.ArraySet, com.android.server.pm.PackageSetting, java.text.SimpleDateFormat, java.util.Date, java.util.List, boolean)
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        java.lang.String prefix, checkinTag, $r0, $r1, $r2, $r4, $r8, $r9, $r10, $r11, $r12, $r20, $r27, $r38, $r47, $r53, $r55, $r56, $r57, $r64, $r66, $r70, $r103, $r110, $r114, $r118, $r119, $r120, $r125, $r133, $r134, $r135, $r137, $r147, $r148, $r149, $r150, $r151, $r152, $r153, lastDisabledAppCaller#10, $r154, $r155, lastDisabledAppCaller#24, lastDisabledAppCaller#28, s#32, s#35;
        android.util.ArraySet permissionNames, permissionsState#30, permissionsState#33;
        com.android.server.pm.PackageSetting ps;
        java.text.SimpleDateFormat sdf;
        java.util.Date date;
        java.util.List users, $r34;
        boolean dumpAll, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, i#13, i#14;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, i#3, user#15, user#16, user#17, user#18, user#20, user#23;
        com.android.server.pm.SharedUserSetting $r3, $r19, $r24, $r136;
        android.content.pm.PackageParser$Package $r5, $r6, $r7, $r14, $r15, $r33, $r39, $r41, $r44, $r49, $r54, $r59, $r62, $r63, $r65, $r68, $r69, $r74, $r76, $r78, $r80, $r81, $r83, $r85, $r87, $r89, $r91, $r93, $r94, $r96, $r99, $r104, $r106, $r107, $r109, $r112, $r117, $r122, $r126, $r129, $r132, $r138, $r140, $r141, $r142, $r144;
        long $l3, $l4, $l5, $l59, $l60;
        com.android.server.pm.PackageSignatures $r13;
        java.lang.Object[] $r16, $r71, $r121;
        java.lang.StringBuilder $r17, $r21, $r22, $r28, $r30, $r31, $r32, $r36, $r37;
        java.util.ArrayList $r18, $r35, $r40, $r42, $r82, $r84, $r88, $r95, $r97, $r98, $r105, $r108, $r113, $r116, $r128, $r130, i#19, i#22;
        java.lang.Object $r23, $r25, $r26, $r43, $r48, $r111, $r115, $r124, $r131;
        int[] $r29, $r145;
        android.content.pm.PermissionInfo $r45, $r46, $r50, $r51, $r52, $r58;
        android.content.pm.ApplicationInfo $r60, $r61, $r67, $r72, $r73, $r75, $r77, $r79, $r90, $r92, $r123, $r127;
        java.lang.String[] $r86, $r100, $r101, $r102, $r139, $r143, $r146;
        java.util.Iterator i#4, i#26, i$#31, i$#34;
        android.content.pm.UserInfo user#5, user#27;
        android.content.pm.PackageParser$Permission lastDisabledAppCaller#21;
        com.android.server.pm.PermissionsState i#25, permissionsState#29;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        prefix := @parameter1: java.lang.String;

        checkinTag := @parameter2: java.lang.String;

        permissionNames := @parameter3: android.util.ArraySet;

        ps := @parameter4: com.android.server.pm.PackageSetting;

        sdf := @parameter5: java.text.SimpleDateFormat;

        date := @parameter6: java.util.Date;

        users := @parameter7: java.util.List;

        dumpAll := @parameter8: boolean;

        if checkinTag == null goto label19;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(checkinTag);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r134 = ps.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r134 == null goto label01;

        $r148 = ps.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        goto label02;

     label01:
        $r148 = ps.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label02:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r148);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i62 = ps.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i62);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i61 = ps.<com.android.server.pm.PackageSetting: int versionCode>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i61);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l60 = ps.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        virtualinvoke pw.<java.io.PrintWriter: void print(long)>($l60);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l59 = ps.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        virtualinvoke pw.<java.io.PrintWriter: void print(long)>($l59);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r133 = ps.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r133 == null goto label03;

        $r149 = ps.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        goto label04;

     label03:
        $r149 = "?";

     label04:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r149);

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        $r132 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r132 == null goto label06;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(checkinTag);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("-");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("splt,");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("base,");

        $r140 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $i69 = $r140.<android.content.pm.PackageParser$Package: int baseRevisionCode>;

        virtualinvoke pw.<java.io.PrintWriter: void println(int)>($i69);

        $r138 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r139 = $r138.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        if $r139 == null goto label06;

        i#3 = 0;

     label05:
        $r142 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r143 = $r142.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        $i70 = lengthof $r143;

        if i#3 >= $i70 goto label06;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(checkinTag);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("-");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("splt,");

        $r141 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r146 = $r141.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        $r147 = $r146[i#3];

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r147);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r144 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r145 = $r144.<android.content.pm.PackageParser$Package: int[] splitRevisionCodes>;

        $i71 = $r145[i#3];

        virtualinvoke pw.<java.io.PrintWriter: void println(int)>($i71);

        i#3 = i#3 + 1;

        goto label05;

     label06:
        i#4 = interfaceinvoke users.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z11 = interfaceinvoke i#4.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label18;

        $r131 = interfaceinvoke i#4.<java.util.Iterator: java.lang.Object next()>();

        user#5 = (android.content.pm.UserInfo) $r131;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(checkinTag);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("-");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("usr");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i58 = user#5.<android.content.pm.UserInfo: int id>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i58);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i57 = user#5.<android.content.pm.UserInfo: int id>;

        $z15 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i57);

        if $z15 == 0 goto label08;

        $r150 = "I";

        goto label09;

     label08:
        $r150 = "i";

     label09:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r150);

        $i68 = user#5.<android.content.pm.UserInfo: int id>;

        $z14 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getHidden(int)>($i68);

        if $z14 == 0 goto label10;

        $r151 = "B";

        goto label11;

     label10:
        $r151 = "b";

     label11:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r151);

        $i67 = user#5.<android.content.pm.UserInfo: int id>;

        $z13 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getStopped(int)>($i67);

        if $z13 == 0 goto label12;

        $r152 = "S";

        goto label13;

     label12:
        $r152 = "s";

     label13:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r152);

        $i66 = user#5.<android.content.pm.UserInfo: int id>;

        $z12 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>($i66);

        if $z12 == 0 goto label14;

        $r153 = "l";

        goto label15;

     label14:
        $r153 = "L";

     label15:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r153);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i65 = user#5.<android.content.pm.UserInfo: int id>;

        $i63 = virtualinvoke ps.<com.android.server.pm.PackageSetting: int getEnabled(int)>($i65);

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i63);

        $i64 = user#5.<android.content.pm.UserInfo: int id>;

        lastDisabledAppCaller#10 = virtualinvoke ps.<com.android.server.pm.PackageSetting: java.lang.String getLastDisabledAppCaller(int)>($i64);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        if lastDisabledAppCaller#10 == null goto label16;

        $r154 = lastDisabledAppCaller#10;

        goto label17;

     label16:
        $r154 = "?";

     label17:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r154);

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        goto label07;

     label18:
        return;

     label19:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("Package [");

        $r0 = ps.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r0 == null goto label20;

        $r155 = ps.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        goto label21;

     label20:
        $r155 = ps.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label21:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r155);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(ps);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $z0 = ps.<com.android.server.pm.PackageSetting: boolean frozen>;

        if $z0 == 0 goto label22;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("  FROZEN!");

     label22:
        $r2 = ps.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r2 == null goto label23;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  compat name=");

        $r135 = ps.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r135);

     label23:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  userId=");

        $i1 = ps.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke pw.<java.io.PrintWriter: void println(int)>($i1);

        $r3 = ps.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r3 == null goto label24;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  sharedUser=");

        $r136 = ps.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>($r136);

     label24:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  pkg=");

        $r5 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  codePath=");

        $r4 = ps.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        if permissionNames != null goto label25;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  resourcePath=");

        $r118 = ps.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r118);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  legacyNativeLibraryDir=");

        $r119 = ps.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r119);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  primaryCpuAbi=");

        $r120 = ps.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r120);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  secondaryCpuAbi=");

        $r137 = ps.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r137);

     label25:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  versionCode=");

        $i2 = ps.<com.android.server.pm.PackageSetting: int versionCode>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i2);

        $r6 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r6 == null goto label26;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" targetSdk=");

        $r122 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r123 = $r122.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i54 = $r123.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i54);

     label26:
        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        $r7 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r7 == null goto label47;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  versionName=");

        $r54 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r66 = $r54.<android.content.pm.PackageParser$Package: java.lang.String mVersionName>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r66);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  splits=");

        $r65 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        staticinvoke <com.android.server.pm.Settings: void dumpSplitNames(java.io.PrintWriter,android.content.pm.PackageParser$Package)>(pw, $r65);

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  applicationInfo=");

        $r68 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r67 = $r68.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r70 = virtualinvoke $r67.<android.content.pm.ApplicationInfo: java.lang.String toString()>();

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r70);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  flags=");

        $r69 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r72 = $r69.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i33 = $r72.<android.content.pm.ApplicationInfo: int flags>;

        $r71 = <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(pw, $i33, $r71);

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        $r59 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r60 = $r59.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i34 = $r60.<android.content.pm.ApplicationInfo: int privateFlags>;

        if $i34 == 0 goto label27;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  privateFlags=");

        $r126 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r127 = $r126.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i55 = $r127.<android.content.pm.ApplicationInfo: int privateFlags>;

        $r121 = <com.android.server.pm.Settings: java.lang.Object[] PRIVATE_FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(pw, $i55, $r121);

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

     label27:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  dataDir=");

        $r62 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r61 = $r62.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r64 = $r61.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  supportsScreens=[");

        i#13 = 1;

        $r63 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r77 = $r63.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i39 = $r77.<android.content.pm.ApplicationInfo: int flags>;

        $i40 = $i39 & 512;

        if $i40 == 0 goto label29;

        if i#13 != 0 goto label28;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label28:
        i#13 = 0;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("small");

     label29:
        $r78 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r79 = $r78.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i41 = $r79.<android.content.pm.ApplicationInfo: int flags>;

        $i42 = $i41 & 1024;

        if $i42 == 0 goto label31;

        if i#13 != 0 goto label30;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label30:
        i#13 = 0;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("medium");

     label31:
        $r80 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r73 = $r80.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i35 = $r73.<android.content.pm.ApplicationInfo: int flags>;

        $i36 = $i35 & 2048;

        if $i36 == 0 goto label33;

        if i#13 != 0 goto label32;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label32:
        i#13 = 0;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("large");

     label33:
        $r74 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r75 = $r74.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i37 = $r75.<android.content.pm.ApplicationInfo: int flags>;

        $i38 = $i37 & 524288;

        if $i38 == 0 goto label35;

        if i#13 != 0 goto label34;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label34:
        i#13 = 0;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("xlarge");

     label35:
        $r76 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r90 = $r76.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i44 = $r90.<android.content.pm.ApplicationInfo: int flags>;

        $i43 = $i44 & 4096;

        if $i43 == 0 goto label37;

        if i#13 != 0 goto label36;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label36:
        i#13 = 0;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("resizeable");

     label37:
        $r89 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r92 = $r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i46 = $r92.<android.content.pm.ApplicationInfo: int flags>;

        $i45 = $i46 & 8192;

        if $i45 == 0 goto label39;

        if i#13 != 0 goto label38;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label38:
        i#14 = 0;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("anyDensity");

     label39:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("]");

        $r91 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r84 = $r91.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        if $r84 == null goto label41;

        $r106 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r105 = $r106.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i51 = virtualinvoke $r105.<java.util.ArrayList: int size()>();

        if $i51 <= 0 goto label41;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("  libraries:");

        user#15 = 0;

     label40:
        $r107 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r128 = $r107.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i56 = virtualinvoke $r128.<java.util.ArrayList: int size()>();

        if user#15 >= $i56 goto label41;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r129 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r130 = $r129.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r124 = virtualinvoke $r130.<java.util.ArrayList: java.lang.Object get(int)>(user#15);

        $r125 = (java.lang.String) $r124;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r125);

        user#15 = user#15 + 1;

        goto label40;

     label41:
        $r83 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r82 = $r83.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r82 == null goto label43;

        $r117 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r116 = $r117.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $i52 = virtualinvoke $r116.<java.util.ArrayList: int size()>();

        if $i52 <= 0 goto label43;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("  usesLibraries:");

        user#16 = 0;

     label42:
        $r112 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r113 = $r112.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $i53 = virtualinvoke $r113.<java.util.ArrayList: int size()>();

        if user#16 >= $i53 goto label43;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r109 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r108 = $r109.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r111 = virtualinvoke $r108.<java.util.ArrayList: java.lang.Object get(int)>(user#16);

        $r110 = (java.lang.String) $r111;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r110);

        user#16 = user#16 + 1;

        goto label42;

     label43:
        $r81 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r88 = $r81.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r88 == null goto label45;

        $r94 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r95 = $r94.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $i47 = virtualinvoke $r95.<java.util.ArrayList: int size()>();

        if $i47 <= 0 goto label45;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("  usesOptionalLibraries:");

        user#17 = 0;

     label44:
        $r93 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r98 = $r93.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $i48 = virtualinvoke $r98.<java.util.ArrayList: int size()>();

        if user#17 >= $i48 goto label45;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r96 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r97 = $r96.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r115 = virtualinvoke $r97.<java.util.ArrayList: java.lang.Object get(int)>(user#17);

        $r114 = (java.lang.String) $r115;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r114);

        user#17 = user#17 + 1;

        goto label44;

     label45:
        $r87 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r86 = $r87.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        if $r86 == null goto label47;

        $r85 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r101 = $r85.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $i49 = lengthof $r101;

        if $i49 <= 0 goto label47;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("  usesLibraryFiles:");

        user#18 = 0;

     label46:
        $r99 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r100 = $r99.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $i50 = lengthof $r100;

        if user#18 >= $i50 goto label47;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r104 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r102 = $r104.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $r103 = $r102[user#18];

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r103);

        user#18 = user#18 + 1;

        goto label46;

     label47:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  timeStamp=");

        $l3 = ps.<com.android.server.pm.PackageSetting: long timeStamp>;

        virtualinvoke date.<java.util.Date: void setTime(long)>($l3);

        $r8 = virtualinvoke sdf.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(date);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  firstInstallTime=");

        $l4 = ps.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        virtualinvoke date.<java.util.Date: void setTime(long)>($l4);

        $r11 = virtualinvoke sdf.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(date);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  lastUpdateTime=");

        $l5 = ps.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        virtualinvoke date.<java.util.Date: void setTime(long)>($l5);

        $r9 = virtualinvoke sdf.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(date);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = ps.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r10 == null goto label48;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  installerPackageName=");

        $r55 = ps.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r55);

     label48:
        $r12 = ps.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        if $r12 == null goto label49;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  volumeUuid=");

        $r56 = ps.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r56);

     label49:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  signatures=");

        $r13 = ps.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  installPermissionsFixed=");

        $z1 = ps.<com.android.server.pm.PackageSetting: boolean installPermissionsFixed>;

        virtualinvoke pw.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" installStatus=");

        $i6 = ps.<com.android.server.pm.PackageSetting: int installStatus>;

        virtualinvoke pw.<java.io.PrintWriter: void println(int)>($i6);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  pkgFlags=");

        $i7 = ps.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $r16 = <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(pw, $i7, $r16);

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        $r14 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r14 == null goto label56;

        $r41 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r42 = $r41.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        if $r42 == null goto label56;

        $r39 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r40 = $r39.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $i26 = virtualinvoke $r40.<java.util.ArrayList: int size()>();

        if $i26 <= 0 goto label56;

        $r49 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        i#19 = $r49.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("  declared permissions:");

        user#20 = 0;

     label50:
        $i25 = virtualinvoke i#19.<java.util.ArrayList: int size()>();

        if user#20 >= $i25 goto label56;

        $r48 = virtualinvoke i#19.<java.util.ArrayList: java.lang.Object get(int)>(user#20);

        lastDisabledAppCaller#21 = (android.content.pm.PackageParser$Permission) $r48;

        if permissionNames == null goto label51;

        $r58 = lastDisabledAppCaller#21.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r57 = $r58.<android.content.pm.PermissionInfo: java.lang.String name>;

        $z10 = virtualinvoke permissionNames.<android.util.ArraySet: boolean contains(java.lang.Object)>($r57);

        if $z10 != 0 goto label51;

        goto label55;

     label51:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r46 = lastDisabledAppCaller#21.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r47 = $r46.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r47);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(": prot=");

        $r45 = lastDisabledAppCaller#21.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i24 = $r45.<android.content.pm.PermissionInfo: int protectionLevel>;

        $r53 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i24);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r53);

        $r52 = lastDisabledAppCaller#21.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i30 = $r52.<android.content.pm.PermissionInfo: int flags>;

        $i29 = $i30 & 1;

        if $i29 == 0 goto label52;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", COSTS_MONEY");

     label52:
        $r51 = lastDisabledAppCaller#21.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i28 = $r51.<android.content.pm.PermissionInfo: int flags>;

        $i27 = $i28 & 2;

        if $i27 == 0 goto label53;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", HIDDEN");

     label53:
        $r50 = lastDisabledAppCaller#21.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i32 = $r50.<android.content.pm.PermissionInfo: int flags>;

        $i31 = $i32 & 1073741824;

        if $i31 == 0 goto label54;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", INSTALLED");

     label54:
        virtualinvoke pw.<java.io.PrintWriter: void println()>();

     label55:
        user#20 = user#20 + 1;

        goto label50;

     label56:
        if permissionNames != null goto label57;

        if dumpAll == 0 goto label61;

     label57:
        $r15 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r18 = $r15.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        if $r18 == null goto label61;

        $r33 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r35 = $r33.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $i21 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        if $i21 <= 0 goto label61;

        $r44 = ps.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        i#22 = $r44.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("  requested permissions:");

        user#23 = 0;

     label58:
        $i23 = virtualinvoke i#22.<java.util.ArrayList: int size()>();

        if user#23 >= $i23 goto label61;

        $r43 = virtualinvoke i#22.<java.util.ArrayList: java.lang.Object get(int)>(user#23);

        lastDisabledAppCaller#24 = (java.lang.String) $r43;

        if permissionNames == null goto label59;

        $z9 = virtualinvoke permissionNames.<android.util.ArraySet: boolean contains(java.lang.Object)>(lastDisabledAppCaller#24);

        if $z9 != 0 goto label59;

        goto label60;

     label59:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>(lastDisabledAppCaller#24);

     label60:
        user#23 = user#23 + 1;

        goto label58;

     label61:
        $r19 = ps.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r19 == null goto label62;

        if permissionNames != null goto label62;

        if dumpAll == 0 goto label63;

     label62:
        i#25 = virtualinvoke ps.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke this.<com.android.server.pm.Settings: void dumpInstallPermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.PermissionsState)>(pw, $r20, permissionNames, i#25);

     label63:
        i#26 = interfaceinvoke users.<java.util.List: java.util.Iterator iterator()>();

     label64:
        $z2 = interfaceinvoke i#26.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label71;

        $r23 = interfaceinvoke i#26.<java.util.Iterator: java.lang.Object next()>();

        user#27 = (android.content.pm.UserInfo) $r23;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  User ");

        $i9 = user#27.<android.content.pm.UserInfo: int id>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i9);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" installed=");

        $i8 = user#27.<android.content.pm.UserInfo: int id>;

        $z4 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i8);

        virtualinvoke pw.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" hidden=");

        $i11 = user#27.<android.content.pm.UserInfo: int id>;

        $z3 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getHidden(int)>($i11);

        virtualinvoke pw.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" stopped=");

        $i10 = user#27.<android.content.pm.UserInfo: int id>;

        $z6 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getStopped(int)>($i10);

        virtualinvoke pw.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" notLaunched=");

        $i13 = user#27.<android.content.pm.UserInfo: int id>;

        $z5 = virtualinvoke ps.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>($i13);

        virtualinvoke pw.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" enabled=");

        $i12 = user#27.<android.content.pm.UserInfo: int id>;

        $i16 = virtualinvoke ps.<com.android.server.pm.PackageSetting: int getEnabled(int)>($i12);

        virtualinvoke pw.<java.io.PrintWriter: void println(int)>($i16);

        $i17 = user#27.<android.content.pm.UserInfo: int id>;

        lastDisabledAppCaller#28 = virtualinvoke ps.<com.android.server.pm.PackageSetting: java.lang.String getLastDisabledAppCaller(int)>($i17);

        if lastDisabledAppCaller#28 == null goto label65;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    lastDisabledCaller: ");

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>(lastDisabledAppCaller#28);

     label65:
        $r24 = ps.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r24 != null goto label66;

        permissionsState#29 = virtualinvoke ps.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r27 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $i20 = user#27.<android.content.pm.UserInfo: int id>;

        $r29 = virtualinvoke permissionsState#29.<com.android.server.pm.PermissionsState: int[] computeGids(int)>($i20);

        virtualinvoke this.<com.android.server.pm.Settings: void dumpGidsLPr(java.io.PrintWriter,java.lang.String,int[])>(pw, $r27, $r29);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $i22 = user#27.<android.content.pm.UserInfo: int id>;

        $r34 = virtualinvoke permissionsState#29.<com.android.server.pm.PermissionsState: java.util.List getRuntimePermissionStates(int)>($i22);

        virtualinvoke this.<com.android.server.pm.Settings: void dumpRuntimePermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,java.util.List,boolean)>(pw, $r38, permissionNames, $r34, dumpAll);

     label66:
        if permissionNames != null goto label70;

        $i14 = user#27.<android.content.pm.UserInfo: int id>;

        permissionsState#30 = virtualinvoke ps.<com.android.server.pm.PackageSetting: android.util.ArraySet getDisabledComponents(int)>($i14);

        if permissionsState#30 == null goto label68;

        $i18 = virtualinvoke permissionsState#30.<android.util.ArraySet: int size()>();

        if $i18 <= 0 goto label68;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("    disabledComponents:");

        i$#31 = virtualinvoke permissionsState#30.<android.util.ArraySet: java.util.Iterator iterator()>();

     label67:
        $z7 = interfaceinvoke i$#31.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label68;

        $r25 = interfaceinvoke i$#31.<java.util.Iterator: java.lang.Object next()>();

        s#32 = (java.lang.String) $r25;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>(s#32);

        goto label67;

     label68:
        $i15 = user#27.<android.content.pm.UserInfo: int id>;

        permissionsState#33 = virtualinvoke ps.<com.android.server.pm.PackageSetting: android.util.ArraySet getEnabledComponents(int)>($i15);

        if permissionsState#33 == null goto label70;

        $i19 = virtualinvoke permissionsState#33.<android.util.ArraySet: int size()>();

        if $i19 <= 0 goto label70;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("    enabledComponents:");

        i$#34 = virtualinvoke permissionsState#33.<android.util.ArraySet: java.util.Iterator iterator()>();

     label69:
        $z8 = interfaceinvoke i$#34.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label70;

        $r26 = interfaceinvoke i$#34.<java.util.Iterator: java.lang.Object next()>();

        s#35 = (java.lang.String) $r26;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>(s#35);

        goto label69;

     label70:
        goto label64;

     label71:
        return;
    }

    void dumpPackagesLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.PackageManagerService$DumpState, boolean)
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        java.lang.String packageName, $r9, $r11, $r15, $r17, $r23, $r24, $r25, $r26, $r27;
        android.util.ArraySet permissionNames;
        com.android.server.pm.PackageManagerService$DumpState dumpState;
        boolean checkin, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, printedSomething#1, $z13, printedSomething#6, printedSomething#10, $z14;
        java.text.SimpleDateFormat sdf, $r0;
        java.util.Date date, $r1;
        java.util.List users;
        android.util.ArrayMap $r2, $r4, $r5, $r6, $r10;
        java.util.Collection $r3, $r7;
        int $i0, $i1;
        java.lang.Object $r8, $r12, $r14, $r16, $r18, $r19, $r20;
        java.util.Set $r13;
        com.android.server.pm.PermissionsState $r21;
        com.android.server.pm.SharedUserSetting $r22;
        java.util.Iterator i$#2, i$#7, i$#11;
        com.android.server.pm.PackageSetting ps#3, ps#12;
        java.util.Map$Entry ps#8;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        packageName := @parameter1: java.lang.String;

        permissionNames := @parameter2: android.util.ArraySet;

        dumpState := @parameter3: com.android.server.pm.PackageManagerService$DumpState;

        checkin := @parameter4: boolean;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        sdf = $r0;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        date = $r1;

        printedSomething#1 = 0;

        users = virtualinvoke this.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        $r2 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Collection values()>();

        i$#2 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke i$#2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r19 = interfaceinvoke i$#2.<java.util.Iterator: java.lang.Object next()>();

        ps#3 = (com.android.server.pm.PackageSetting) $r19;

        if packageName == null goto label02;

        $r24 = ps#3.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $z10 = virtualinvoke packageName.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z10 != 0 goto label02;

        $r23 = ps#3.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z12 = virtualinvoke packageName.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z12 != 0 goto label02;

        goto label01;

     label02:
        if permissionNames == null goto label03;

        $r21 = virtualinvoke ps#3.<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $z11 = virtualinvoke $r21.<com.android.server.pm.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>(permissionNames);

        if $z11 != 0 goto label03;

        goto label01;

     label03:
        if checkin != 0 goto label04;

        if packageName == null goto label04;

        $r22 = ps#3.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke dumpState.<com.android.server.pm.PackageManagerService$DumpState: void setSharedUser(com.android.server.pm.SharedUserSetting)>($r22);

     label04:
        if checkin != 0 goto label06;

        if printedSomething#1 != 0 goto label06;

        $z9 = virtualinvoke dumpState.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z9 == 0 goto label05;

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

     label05:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("Packages:");

        printedSomething#1 = 1;

     label06:
        if checkin == 0 goto label07;

        $r25 = "pkg";

        goto label08;

     label07:
        $r25 = null;

     label08:
        if packageName == null goto label09;

        $z13 = 1;

        goto label10;

     label09:
        $z13 = 0;

     label10:
        virtualinvoke this.<com.android.server.pm.Settings: void dumpPackageLPr(java.io.PrintWriter,java.lang.String,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageSetting,java.text.SimpleDateFormat,java.util.Date,java.util.List,boolean)>(pw, "  ", $r25, permissionNames, ps#3, sdf, date, users, $z13);

        goto label01;

     label11:
        printedSomething#6 = 0;

        $r4 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if $i0 <= 0 goto label20;

        if permissionNames != null goto label20;

        $r10 = this.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $r13 = virtualinvoke $r10.<android.util.ArrayMap: java.util.Set entrySet()>();

        i$#7 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z5 = interfaceinvoke i$#7.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label20;

        $r12 = interfaceinvoke i$#7.<java.util.Iterator: java.lang.Object next()>();

        ps#8 = (java.util.Map$Entry) $r12;

        if packageName == null goto label13;

        $r18 = interfaceinvoke ps#8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z6 = virtualinvoke packageName.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z6 != 0 goto label13;

        $r20 = interfaceinvoke ps#8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z8 = virtualinvoke packageName.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z8 != 0 goto label13;

        goto label12;

     label13:
        if checkin != 0 goto label16;

        if printedSomething#6 != 0 goto label15;

        $z7 = virtualinvoke dumpState.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z7 == 0 goto label14;

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

     label14:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("Renamed packages:");

        printedSomething#6 = 1;

     label15:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        goto label17;

     label16:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("ren,");

     label17:
        $r16 = interfaceinvoke ps#8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        if checkin == 0 goto label18;

        $r26 = " -> ";

        goto label19;

     label18:
        $r26 = ",";

     label19:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        $r14 = interfaceinvoke ps#8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.String) $r14;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        goto label12;

     label20:
        printedSomething#10 = 0;

        $r5 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $i1 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        if $i1 <= 0 goto label29;

        if permissionNames != null goto label29;

        $r6 = this.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Collection values()>();

        i$#11 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label21:
        $z1 = interfaceinvoke i$#11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label29;

        $r8 = interfaceinvoke i$#11.<java.util.Iterator: java.lang.Object next()>();

        ps#12 = (com.android.server.pm.PackageSetting) $r8;

        if packageName == null goto label22;

        $r9 = ps#12.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $z4 = virtualinvoke packageName.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 != 0 goto label22;

        $r11 = ps#12.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z3 = virtualinvoke packageName.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 != 0 goto label22;

        goto label21;

     label22:
        if checkin != 0 goto label24;

        if printedSomething#10 != 0 goto label24;

        $z2 = virtualinvoke dumpState.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z2 == 0 goto label23;

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

     label23:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("Hidden system packages:");

        printedSomething#10 = 1;

     label24:
        if checkin == 0 goto label25;

        $r27 = "dis";

        goto label26;

     label25:
        $r27 = null;

     label26:
        if packageName == null goto label27;

        $z14 = 1;

        goto label28;

     label27:
        $z14 = 0;

     label28:
        virtualinvoke this.<com.android.server.pm.Settings: void dumpPackageLPr(java.io.PrintWriter,java.lang.String,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageSetting,java.text.SimpleDateFormat,java.util.Date,java.util.List,boolean)>(pw, "  ", $r27, permissionNames, ps#12, sdf, date, users, $z14);

        goto label21;

     label29:
        return;
    }

    void dumpPermissionsLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.PackageManagerService$DumpState)
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        java.lang.String packageName, $r3, $r4, $r5, $r6, $r9, $r10, $r12, $r19, $r23, $r24;
        android.util.ArraySet permissionNames;
        com.android.server.pm.PackageManagerService$DumpState dumpState;
        java.util.Iterator i$;
        com.android.server.pm.BasePermission p;
        android.util.ArrayMap $r0;
        java.util.Collection $r1;
        boolean $z0, $z1, $z2, $z3, $z4, printedSomething#1;
        java.lang.Object $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r7;
        android.content.pm.PackageParser$Permission $r8, $r15, $r16, $r17, $r20;
        com.android.server.pm.PackageSettingBase $r11, $r13;
        java.lang.Boolean $r14;
        android.content.pm.PermissionInfo $r18, $r21, $r22;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        packageName := @parameter1: java.lang.String;

        permissionNames := @parameter2: android.util.ArraySet;

        dumpState := @parameter3: com.android.server.pm.PackageManagerService$DumpState;

        printedSomething#1 = 0;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mPermissions>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.util.Collection values()>();

        i$ = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r2 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        p = (com.android.server.pm.BasePermission) $r2;

        if packageName == null goto label02;

        $r23 = p.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z3 = virtualinvoke packageName.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z3 != 0 goto label02;

        goto label01;

     label02:
        if permissionNames == null goto label03;

        $r24 = p.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z4 = virtualinvoke permissionNames.<android.util.ArraySet: boolean contains(java.lang.Object)>($r24);

        if $z4 != 0 goto label03;

        goto label01;

     label03:
        if printedSomething#1 != 0 goto label05;

        $z2 = virtualinvoke dumpState.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z2 == 0 goto label04;

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

     label04:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("Permissions:");

        printedSomething#1 = 1;

     label05:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  Permission [");

        $r3 = p.<com.android.server.pm.BasePermission: java.lang.String name>;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(p);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("):");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    sourcePackage=");

        $r5 = p.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    uid=");

        $i1 = p.<com.android.server.pm.BasePermission: int uid>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" gids=");

        $r7 = virtualinvoke p.<com.android.server.pm.BasePermission: int[] computeGids(int)>(0);

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r7);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" type=");

        $i3 = p.<com.android.server.pm.BasePermission: int type>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(" prot=");

        $i2 = p.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r9 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i2);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r8 = p.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r8 == null goto label07;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    perm=");

        $r16 = p.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>($r16);

        $r15 = p.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r18 = $r15.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i5 = $r18.<android.content.pm.PermissionInfo: int flags>;

        $i4 = $i5 & 1073741824;

        if $i4 == 0 goto label06;

        $r20 = p.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r22 = $r20.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i8 = $r22.<android.content.pm.PermissionInfo: int flags>;

        $i7 = $i8 & 2;

        if $i7 == 0 goto label07;

     label06:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    flags=0x");

        $r17 = p.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r21 = $r17.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i6 = $r21.<android.content.pm.PermissionInfo: int flags>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r19);

     label07:
        $r11 = p.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r11 == null goto label08;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    packageSetting=");

        $r13 = p.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

     label08:
        $r12 = "android.permission.READ_EXTERNAL_STORAGE";

        $r10 = p.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label09;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("    enforced=");

        $r14 = this.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>($r14);

     label09:
        goto label01;

     label10:
        return;
    }

    void dumpSharedUsersLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.PackageManagerService$DumpState, boolean)
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        java.lang.String packageName, prefix, $r3, $r4, $r5, $r12, $r14;
        android.util.ArraySet permissionNames;
        com.android.server.pm.PackageManagerService$DumpState dumpState;
        boolean checkin, $z0, $z1, $z2, $z3, $z4, printedSomething#1, $z5;
        java.util.Iterator i$;
        com.android.server.pm.SharedUserSetting su, $r15;
        com.android.server.pm.PermissionsState permissionsState, $r16;
        int[] arr$, gids;
        int len$, userId, $i0, $i1, $i2, i$#2;
        android.util.ArrayMap $r0;
        java.util.List permissions;
        java.util.Collection $r1;
        java.lang.Object $r2;
        com.android.server.pm.UserManagerService $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r13;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        packageName := @parameter1: java.lang.String;

        permissionNames := @parameter2: android.util.ArraySet;

        dumpState := @parameter3: com.android.server.pm.PackageManagerService$DumpState;

        checkin := @parameter4: boolean;

        printedSomething#1 = 0;

        $r0 = this.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r1 = virtualinvoke $r0.<android.util.ArrayMap: java.util.Collection values()>();

        i$ = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r2 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        su = (com.android.server.pm.SharedUserSetting) $r2;

        if packageName == null goto label02;

        $r15 = virtualinvoke dumpState.<com.android.server.pm.PackageManagerService$DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>();

        if su == $r15 goto label02;

        goto label01;

     label02:
        if permissionNames == null goto label03;

        $r16 = virtualinvoke su.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        $z3 = virtualinvoke $r16.<com.android.server.pm.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>(permissionNames);

        if $z3 != 0 goto label03;

        goto label01;

     label03:
        if checkin != 0 goto label12;

        if printedSomething#1 != 0 goto label05;

        $z4 = virtualinvoke dumpState.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z4 == 0 goto label04;

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

     label04:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("Shared users:");

        printedSomething#1 = 1;

     label05:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  SharedUser [");

        $r4 = su.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(su);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("):");

        prefix = "    ";

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("userId=");

        $i2 = su.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke pw.<java.io.PrintWriter: void println(int)>($i2);

        permissionsState = virtualinvoke su.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PermissionsState getPermissionsState()>();

        virtualinvoke this.<com.android.server.pm.Settings: void dumpInstallPermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.PermissionsState)>(pw, prefix, permissionNames, permissionsState);

        $r6 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        arr$ = virtualinvoke $r6.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        len$ = lengthof arr$;

        i$#2 = 0;

     label06:
        if i$#2 >= len$ goto label11;

        userId = arr$[i$#2];

        gids = virtualinvoke permissionsState.<com.android.server.pm.PermissionsState: int[] computeGids(int)>(userId);

        permissions = virtualinvoke permissionsState.<com.android.server.pm.PermissionsState: java.util.List getRuntimePermissionStates(int)>(userId);

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(gids);

        if $z1 == 0 goto label07;

        $z2 = interfaceinvoke permissions.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label10;

     label07:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("User ");

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>(userId);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>(": ");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke this.<com.android.server.pm.Settings: void dumpGidsLPr(java.io.PrintWriter,java.lang.String,int[])>(pw, $r12, gids);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        if packageName == null goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        virtualinvoke this.<com.android.server.pm.Settings: void dumpRuntimePermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,java.util.List,boolean)>(pw, $r14, permissionNames, permissions, $z5);

     label10:
        i$#2 = i$#2 + 1;

        goto label06;

     label11:
        goto label13;

     label12:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("suid,");

        $i0 = su.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r3 = su.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r3);

     label13:
        goto label01;

     label14:
        return;
    }

    void dumpReadMessagesLPr(java.io.PrintWriter, com.android.server.pm.PackageManagerService$DumpState)
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        com.android.server.pm.PackageManagerService$DumpState dumpState;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        dumpState := @parameter1: com.android.server.pm.PackageManagerService$DumpState;

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("Settings parse messages:");

        $r0 = this.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        return;
    }

    private static void dumpSplitNames(java.io.PrintWriter, android.content.pm.PackageParser$Package)
    {
        java.io.PrintWriter pw;
        android.content.pm.PackageParser$Package pkg;
        int $i0, $i1, $i2, $i3, $i4, i#1;
        java.lang.String[] $r0, $r1, $r2;
        java.lang.String $r3;
        int[] $r4, $r5;

        pw := @parameter0: java.io.PrintWriter;

        pkg := @parameter1: android.content.pm.PackageParser$Package;

        if pkg != null goto label1;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("unknown");

        goto label6;

     label1:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("[");

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("base");

        $i0 = pkg.<android.content.pm.PackageParser$Package: int baseRevisionCode>;

        if $i0 == 0 goto label2;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i4 = pkg.<android.content.pm.PackageParser$Package: int baseRevisionCode>;

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i4);

     label2:
        $r0 = pkg.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        if $r0 == null goto label5;

        i#1 = 0;

     label3:
        $r1 = pkg.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        $i1 = lengthof $r1;

        if i#1 >= $i1 goto label5;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $r2 = pkg.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        $r3 = $r2[i#1];

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        $r4 = pkg.<android.content.pm.PackageParser$Package: int[] splitRevisionCodes>;

        $i2 = $r4[i#1];

        if $i2 == 0 goto label4;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r5 = pkg.<android.content.pm.PackageParser$Package: int[] splitRevisionCodes>;

        $i3 = $r5[i#1];

        virtualinvoke pw.<java.io.PrintWriter: void print(int)>($i3);

     label4:
        i#1 = i#1 + 1;

        goto label3;

     label5:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("]");

     label6:
        return;
    }

    void dumpGidsLPr(java.io.PrintWriter, java.lang.String, int[])
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        java.lang.String prefix, $r0;
        int[] gids;
        boolean $z0;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        prefix := @parameter1: java.lang.String;

        gids := @parameter2: int[];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(gids);

        if $z0 != 0 goto label1;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("gids=");

        $r0 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String arrayToString(int[])>(gids);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r0);

     label1:
        return;
    }

    void dumpRuntimePermissionsLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, java.util.List, boolean)
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        java.lang.String prefix, $r1, $r2, $r3;
        android.util.ArraySet permissionNames;
        java.util.List permissionStates;
        boolean dumpAll, $z0, $z1, $z2, $z3;
        java.util.Iterator i$;
        com.android.server.pm.PermissionsState$PermissionState permissionState;
        java.lang.Object $r0;
        int $i0;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        prefix := @parameter1: java.lang.String;

        permissionNames := @parameter2: android.util.ArraySet;

        permissionStates := @parameter3: java.util.List;

        dumpAll := @parameter4: boolean;

        $z0 = interfaceinvoke permissionStates.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        if dumpAll == 0 goto label4;

     label1:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("runtime permissions:");

        i$ = interfaceinvoke permissionStates.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r0 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        permissionState = (com.android.server.pm.PermissionsState$PermissionState) $r0;

        if permissionNames == null goto label3;

        $r2 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: java.lang.String getName()>();

        $z3 = virtualinvoke permissionNames.<android.util.ArraySet: boolean contains(java.lang.Object)>($r2);

        if $z3 != 0 goto label3;

        goto label2;

     label3:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r1 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: java.lang.String getName()>();

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(": granted=");

        $z2 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: boolean isGranted()>();

        virtualinvoke pw.<java.io.PrintWriter: void print(boolean)>($z2);

        $i0 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: int getFlags()>();

        $r3 = staticinvoke <com.android.server.pm.Settings: java.lang.String permissionFlagsToString(java.lang.String,int)>(", flags=", $i0);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        goto label2;

     label4:
        return;
    }

    private static java.lang.String permissionFlagsToString(java.lang.String, int)
    {
        java.lang.String prefix, $r1, $r2;
        int flag, $i0, $i1, flags#1;
        java.lang.StringBuilder $r5, flagsString#2;

        prefix := @parameter0: java.lang.String;

        flags#1 := @parameter1: int;

        flagsString#2 = null;

     label1:
        if flags#1 == 0 goto label3;

        if flagsString#2 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        flagsString#2 = $r5;

        virtualinvoke flagsString#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        virtualinvoke flagsString#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ ");

     label2:
        $i0 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(flags#1);

        flag = 1 << $i0;

        $i1 = flag ^ -1;

        flags#1 = flags#1 & $i1;

        $r2 = staticinvoke <android.content.pm.PackageManager: java.lang.String permissionFlagToString(int)>(flag);

        virtualinvoke flagsString#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke flagsString#2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label1;

     label3:
        if flagsString#2 == null goto label4;

        virtualinvoke flagsString#2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r1 = virtualinvoke flagsString#2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label4:
        return "";
    }

    void dumpInstallPermissionsLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.PermissionsState)
    {
        com.android.server.pm.Settings this;
        java.io.PrintWriter pw;
        java.lang.String prefix, $r1, $r2, $r3;
        android.util.ArraySet permissionNames;
        com.android.server.pm.PermissionsState permissionsState;
        java.util.List permissionStates;
        java.util.Iterator i$;
        com.android.server.pm.PermissionsState$PermissionState permissionState;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r0;
        int $i0;

        this := @this: com.android.server.pm.Settings;

        pw := @parameter0: java.io.PrintWriter;

        prefix := @parameter1: java.lang.String;

        permissionNames := @parameter2: android.util.ArraySet;

        permissionsState := @parameter3: com.android.server.pm.PermissionsState;

        permissionStates = virtualinvoke permissionsState.<com.android.server.pm.PermissionsState: java.util.List getInstallPermissionStates()>();

        $z0 = interfaceinvoke permissionStates.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>("install permissions:");

        i$ = interfaceinvoke permissionStates.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r0 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        permissionState = (com.android.server.pm.PermissionsState$PermissionState) $r0;

        if permissionNames == null goto label2;

        $r3 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: java.lang.String getName()>();

        $z3 = virtualinvoke permissionNames.<android.util.ArraySet: boolean contains(java.lang.Object)>($r3);

        if $z3 != 0 goto label2;

        goto label1;

     label2:
        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(prefix);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r1 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: java.lang.String getName()>();

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke pw.<java.io.PrintWriter: void print(java.lang.String)>(": granted=");

        $z2 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: boolean isGranted()>();

        virtualinvoke pw.<java.io.PrintWriter: void print(boolean)>($z2);

        $i0 = virtualinvoke permissionState.<com.android.server.pm.PermissionsState$PermissionState: int getFlags()>();

        $r2 = staticinvoke <com.android.server.pm.Settings: java.lang.String permissionFlagsToString(java.lang.String,int)>(", flags=", $i0);

        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        goto label1;

     label3:
        return;
    }

    public void writeRuntimePermissionsForUserLPr(int, boolean)
    {
        com.android.server.pm.Settings this;
        int userId;
        boolean sync;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r0, $r1;

        this := @this: com.android.server.pm.Settings;

        userId := @parameter0: int;

        sync := @parameter1: boolean;

        if sync == 0 goto label1;

        $r1 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserSyncLPr(int)>(userId);

        goto label2;

     label1:
        $r0 = this.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r0.<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserAsyncLPr(int)>(userId);

     label2:
        return;
    }

    static java.io.File access$100(com.android.server.pm.Settings, int)
    {
        com.android.server.pm.Settings x0;
        int x1;
        java.io.File $r0;

        x0 := @parameter0: com.android.server.pm.Settings;

        x1 := @parameter1: int;

        $r0 = specialinvoke x0.<com.android.server.pm.Settings: java.io.File getUserRuntimePermissionsFile(int)>(x1);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0, $r15;
        java.lang.Integer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19;

        <com.android.server.pm.Settings: java.lang.String ATTR_DATABASE_VERSION> = "databaseVersion";

        <com.android.server.pm.Settings: java.lang.String ATTR_SDK_VERSION> = "sdkVersion";

        <com.android.server.pm.Settings: java.lang.String ATTR_VOLUME_UUID> = "volumeUuid";

        <com.android.server.pm.Settings: java.lang.String ATTR_APP_LINK_GENERATION> = "app-link-generation";

        <com.android.server.pm.Settings: java.lang.String ATTR_FINGERPRINT> = "fingerprint";

        <com.android.server.pm.Settings: java.lang.String ATTR_PACKAGE_NAME> = "packageName";

        <com.android.server.pm.Settings: java.lang.String ATTR_DOMAIN_VERIFICATON_STATE> = "domainVerificationStatus";

        <com.android.server.pm.Settings: java.lang.String ATTR_BLOCK_UNINSTALL> = "blockUninstall";

        <com.android.server.pm.Settings: java.lang.String ATTR_INSTALLED> = "inst";

        <com.android.server.pm.Settings: java.lang.String ATTR_HIDDEN> = "hidden";

        <com.android.server.pm.Settings: java.lang.String ATTR_BLOCKED> = "blocked";

        <com.android.server.pm.Settings: java.lang.String ATTR_STOPPED> = "stopped";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENABLED_CALLER> = "enabledCaller";

        <com.android.server.pm.Settings: java.lang.String ATTR_FLAGS> = "flags";

        <com.android.server.pm.Settings: java.lang.String ATTR_GRANTED> = "granted";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENABLED> = "enabled";

        <com.android.server.pm.Settings: java.lang.String ATTR_NOT_LAUNCHED> = "nl";

        <com.android.server.pm.Settings: java.lang.String ATTR_CODE> = "code";

        <com.android.server.pm.Settings: java.lang.String ATTR_USER> = "user";

        <com.android.server.pm.Settings: java.lang.String ATTR_NAME> = "name";

        <com.android.server.pm.Settings: java.lang.String TAG_VERSION> = "version";

        <com.android.server.pm.Settings: java.lang.String TAG_DEFAULT_BROWSER> = "default-browser";

        <com.android.server.pm.Settings: java.lang.String TAG_ALL_INTENT_FILTER_VERIFICATION> = "all-intent-filter-verifications";

        <com.android.server.pm.Settings: java.lang.String TAG_DEFAULT_APPS> = "default-apps";

        <com.android.server.pm.Settings: java.lang.String TAG_DOMAIN_VERIFICATION> = "domain-verification";

        <com.android.server.pm.Settings: java.lang.String TAG_CROSS_PROFILE_INTENT_FILTERS> = "crossProfile-intent-filters";

        <com.android.server.pm.Settings: java.lang.String TAG_PERSISTENT_PREFERRED_ACTIVITIES> = "persistent-preferred-activities";

        <com.android.server.pm.Settings: java.lang.String TAG_PERMISSIONS> = "perms";

        <com.android.server.pm.Settings: java.lang.String TAG_RUNTIME_PERMISSIONS> = "runtime-permissions";

        <com.android.server.pm.Settings: java.lang.String TAG_SHARED_USER> = "shared-user";

        <com.android.server.pm.Settings: java.lang.String TAG_PACKAGE> = "pkg";

        <com.android.server.pm.Settings: java.lang.String TAG_PACKAGE_RESTRICTIONS> = "package-restrictions";

        <com.android.server.pm.Settings: java.lang.String TAG_ENABLED_COMPONENTS> = "enabled-components";

        <com.android.server.pm.Settings: java.lang.String TAG_DISABLED_COMPONENTS> = "disabled-components";

        <com.android.server.pm.Settings: java.lang.String TAG_ITEM> = "item";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENFORCEMENT> = "enforcement";

        <com.android.server.pm.Settings: java.lang.String TAG_READ_EXTERNAL_STORAGE> = "read-external-storage";

        <com.android.server.pm.Settings: java.lang.String RUNTIME_PERMISSIONS_FILE_NAME> = "runtime-permissions.xml";

        <com.android.server.pm.Settings: boolean DEBUG_MU> = 0;

        <com.android.server.pm.Settings: boolean DEBUG_STOPPED> = 0;

        <com.android.server.pm.Settings: int CURRENT_DATABASE_VERSION> = 3;

        <com.android.server.pm.Settings: java.lang.String TAG> = "PackageSettings";

        <com.android.server.pm.Settings: int mFirstAvailableUid> = 0;

        <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_HIDDEN> = 134217728;

        <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE> = 268435456;

        <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_FORWARD_LOCK> = 536870912;

        <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_PRIVILEGED> = 1073741824;

        $r0 = newarray (java.lang.Object)[30];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r0[0] = $r1;

        $r0[1] = "SYSTEM";

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r0[2] = $r2;

        $r0[3] = "DEBUGGABLE";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r0[4] = $r3;

        $r0[5] = "HAS_CODE";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r0[6] = $r4;

        $r0[7] = "PERSISTENT";

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r0[8] = $r5;

        $r0[9] = "FACTORY_TEST";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

        $r0[10] = $r6;

        $r0[11] = "ALLOW_TASK_REPARENTING";

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        $r0[12] = $r7;

        $r0[13] = "ALLOW_CLEAR_USER_DATA";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        $r0[14] = $r8;

        $r0[15] = "UPDATED_SYSTEM_APP";

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(256);

        $r0[16] = $r9;

        $r0[17] = "TEST_ONLY";

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16384);

        $r0[18] = $r10;

        $r0[19] = "VM_SAFE_MODE";

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32768);

        $r0[20] = $r11;

        $r0[21] = "ALLOW_BACKUP";

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(65536);

        $r0[22] = $r12;

        $r0[23] = "KILL_AFTER_RESTORE";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(131072);

        $r0[24] = $r13;

        $r0[25] = "RESTORE_ANY_VERSION";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(262144);

        $r0[26] = $r14;

        $r0[27] = "EXTERNAL_STORAGE";

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1048576);

        $r0[28] = $r16;

        $r0[29] = "LARGE_HEAP";

        <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC> = $r0;

        $r15 = newarray (java.lang.Object)[6];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r15[0] = $r18;

        $r15[1] = "PRIVILEGED";

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r15[2] = $r17;

        $r15[3] = "FORWARD_LOCK";

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r15[4] = $r19;

        $r15[5] = "CANT_SAVE_STATE";

        <com.android.server.pm.Settings: java.lang.Object[] PRIVATE_FLAG_DUMP_SPEC> = $r15;

        return;
    }
}
