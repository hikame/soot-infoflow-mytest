public final class android.os.StrictMode$VmPolicy$Builder extends java.lang.Object
{
    private int mMask;
    private java.util.HashMap mClassInstanceLimit;
    private boolean mClassInstanceLimitNeedCow;

    public void <init>()
    {
        android.os.StrictMode$VmPolicy$Builder this;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 0;

        this.<android.os.StrictMode$VmPolicy$Builder: int mMask> = 0;

        return;
    }

    public void <init>(android.os.StrictMode$VmPolicy)
    {
        android.os.StrictMode$VmPolicy$Builder this;
        android.os.StrictMode$VmPolicy base;
        int $i0;
        java.util.HashMap $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        base := @parameter0: android.os.StrictMode$VmPolicy;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 0;

        $i0 = base.<android.os.StrictMode$VmPolicy: int mask>;

        this.<android.os.StrictMode$VmPolicy$Builder: int mMask> = $i0;

        this.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 1;

        $r0 = base.<android.os.StrictMode$VmPolicy: java.util.HashMap classInstanceLimit>;

        this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit> = $r0;

        return;
    }

    public android.os.StrictMode$VmPolicy$Builder setClassInstanceLimit(java.lang.Class, int)
    {
        android.os.StrictMode$VmPolicy$Builder this;
        java.lang.Class klass;
        int instanceLimit, $i0, $i1, $i2;
        boolean $z0, $z1;
        java.util.HashMap $r0, $r1, $r4, $r5, $r6, $r8, $r9;
        java.lang.Integer $r2, $r11;
        java.lang.Object $r7, $r10;
        java.lang.NullPointerException $r12;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        klass := @parameter0: java.lang.Class;

        instanceLimit := @parameter1: int;

        if klass != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("klass == null");

        throw $r12;

     label1:
        $z0 = this.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow>;

        if $z0 == 0 goto label3;

        $r5 = this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $z1 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(klass);

        if $z1 == 0 goto label2;

        $r9 = this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(klass);

        $r11 = (java.lang.Integer) $r10;

        $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        if $i2 != instanceLimit goto label2;

        return this;

     label2:
        this.<android.os.StrictMode$VmPolicy$Builder: boolean mClassInstanceLimitNeedCow> = 0;

        $r6 = this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object clone()>();

        $r8 = (java.util.HashMap) $r7;

        this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit> = $r8;

        goto label4;

     label3:
        $r0 = this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        if $r0 != null goto label4;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit> = $r4;

     label4:
        $i0 = this.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        $i1 = $i0 | 2048;

        this.<android.os.StrictMode$VmPolicy$Builder: int mMask> = $i1;

        $r1 = this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(instanceLimit);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(klass, $r2);

        return this;
    }

    public android.os.StrictMode$VmPolicy$Builder detectActivityLeaks()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(1024);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder detectAll()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;
        boolean $z0;
        short flags#1;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        flags#1 = 14080;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.sys.strictmode.clear", 0);

        if $z0 == 0 goto label1;

        flags#1 = flags#1 | 16384;

     label1:
        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(flags#1);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder detectLeakedSqlLiteObjects()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(256);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder detectLeakedClosableObjects()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(512);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder detectLeakedRegistrationObjects()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(4096);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder detectFileUriExposure()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(8192);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder detectCleartextNetwork()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(16384);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyDeath()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(262144);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyDeathOnCleartextNetwork()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(8388608);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyLog()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(65536);

        return $r0;
    }

    public android.os.StrictMode$VmPolicy$Builder penaltyDropBox()
    {
        android.os.StrictMode$VmPolicy$Builder this, $r0;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $r0 = specialinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder enable(int)>(2097152);

        return $r0;
    }

    private android.os.StrictMode$VmPolicy$Builder enable(int)
    {
        android.os.StrictMode$VmPolicy$Builder this;
        int bit, $i0, $i1;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        bit := @parameter0: int;

        $i0 = this.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        $i1 = $i0 | bit;

        this.<android.os.StrictMode$VmPolicy$Builder: int mMask> = $i1;

        return this;
    }

    public android.os.StrictMode$VmPolicy build()
    {
        android.os.StrictMode$VmPolicy$Builder this;
        int $i0, $i1, $i2, $i3;
        android.os.StrictMode$VmPolicy $r0;
        java.util.HashMap $r1, $r3;

        this := @this: android.os.StrictMode$VmPolicy$Builder;

        $i0 = this.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        if $i0 == 0 goto label1;

        $i2 = this.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        $i3 = $i2 & 2555904;

        if $i3 != 0 goto label1;

        virtualinvoke this.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyLog()>();

     label1:
        $r0 = new android.os.StrictMode$VmPolicy;

        $i1 = this.<android.os.StrictMode$VmPolicy$Builder: int mMask>;

        $r1 = this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        if $r1 == null goto label2;

        $r3 = this.<android.os.StrictMode$VmPolicy$Builder: java.util.HashMap mClassInstanceLimit>;

        goto label3;

     label2:
        $r3 = staticinvoke <android.os.StrictMode: java.util.HashMap access$100()>();

     label3:
        specialinvoke $r0.<android.os.StrictMode$VmPolicy: void <init>(int,java.util.HashMap,android.os.StrictMode$1)>($i1, $r3, null);

        return $r0;
    }
}
